openapi: 3.0.1
info:
  title: Advertisers
  version: "3.0"
servers:
- url: /
paths:
  /accountBudgets/featureFlags:
    get:
      tags:
      - Advertiser
      summary: Gets account budget feature flags information.
      description: |-
        Gets account budget feature flags information.

        **Requires one of these permissions**:
        ["advertiser_campaign_view"]
      operationId: getAccountBudgetFeatureFlags
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header and choose profile
          id `profileId` from the response to pass it as input.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/vnd.accountBudgetFeatureFlags.v1+json:
              schema:
                $ref: '#/components/schemas/GetAccountBudgetFeatureFlagsResponse'
        "400":
          description: Bad Request.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
    post:
      tags:
      - Advertiser
      summary: Creates or Updates account budget feature flags information.
      description: |-
        Creates or Updates account budget feature flags information.

        **Requires one of these permissions**:
        ["advertiser_campaign_view","advertiser_campaign_edit"]
      operationId: updateAccountBudgetFeatureFlags
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header and choose profile
          id `profileId` from the response to pass it as input.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/vnd.accountBudgetFeatureFlags.v1+json:
            schema:
              $ref: '#/components/schemas/UpdateAccountBudgetFeatureFlagsRequest'
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/vnd.accountBudgetFeatureFlags.v1+json:
              schema:
                $ref: '#/components/schemas/UpdateAccountBudgetFeatureFlagsResponse'
              examples:
                Success:
                  value:
                    code: OK
                    details: Successfully updated account budget feature flags
        "400":
          description: Bad Request.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/vnd.accountBudgetFeatureFlagsError.v1+json:
              schema:
                $ref: '#/components/schemas/AccountBudgetFeatureFlagsError'
components:
  schemas:
    AccountBudgetFeatureFlagsError:
      type: object
      properties:
        code:
          type: string
          description: An enumerated code for machine use.
          enum:
          - ENTRY_NOT_FOUND
          - INVALID_PARAMETER_VALUE
          - OK
        details:
          type: string
          description: A human-readable description of the response.
      description: The Error Response Object.
    FeatureFlags:
      type: object
      properties:
        isOptedOutForAverageDailyBudgetIncrease:
          type: boolean
          description: "Denotes the opt in/out decision for AverageDailyBudgetIncrease\
            \ feature. If the entity spends less than your daily budget, the unspent\
            \ amount can be used to increase your daily budget to 100% (if opted in)\
            \ or 25% (if opted out) in other days of calendar month."
      description: "Feature flags for account budget, which denotes that advertiser\
        \ Opted In/Out from specific budget feature."
      example:
        isOptedOutForAverageDailyBudgetIncrease: true
    GetAccountBudgetFeatureFlagsResponse:
      type: object
      properties:
        featureFlags:
          $ref: '#/components/schemas/FeatureFlags'
      description: Response to get account budget feature flags information.
      example:
        featureFlags:
          isOptedOutForAverageDailyBudgetIncrease: true
    UpdateAccountBudgetFeatureFlagsRequest:
      required:
      - featureFlags
      type: object
      properties:
        featureFlags:
          $ref: '#/components/schemas/FeatureFlags'
      description: Request to update account budget feature flags information.
    UpdateAccountBudgetFeatureFlagsResponse:
      type: object
      properties:
        code:
          type: string
          description: An enumerated code for machine use.
          enum:
          - ENTRY_NOT_FOUND
          - INVALID_PARAMETER_VALUE
          - OK
        details:
          type: string
          description: A human-readable description of the response.
      description: Response for update account budget feature flags information.
      example:
        code: ENTRY_NOT_FOUND
        details: details
  responses: {}
  parameters:
    APIScopeHeader:
      name: Amazon-Advertising-API-Scope
      in: header
      description: The identifier of a profile associated with the advertiser account.
        Use `GET` method on Profiles resource to list profiles associated with the
        access token passed in the HTTP Authorization header and choose profile id
        `profileId` from the response to pass it as input.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ClientIdHeader:
      name: Amazon-Advertising-API-ClientId
      in: header
      description: The identifier of a client associated with a "Login with Amazon"
        account.
      required: true
      style: simple
      explode: false
      schema:
        type: string
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
