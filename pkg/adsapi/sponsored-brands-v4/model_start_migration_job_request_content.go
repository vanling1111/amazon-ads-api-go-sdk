/*
 * Sponsored Brands campaign management
 *
 * Create and manage Sponsored Brands campaigns.   To learn more about Sponsored Brands campaigns, see:   - [Sponsored Brands overview](guides/sponsored-brands/overview)  - [Sponsored Brands campaign structure](guides/sponsored-brands/campaigns/structure)  - [Get started with Sponsored Brands campaigns](guides/sponsored-brands/campaigns/get-started-with-campaigns)
 *
 * API version: 4.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package sponsoredbrandsv4

type StartMigrationJobRequestContent struct {
	// Provide list of campaign ids that needs to be migrated
	CampaignIds []string `json:"campaignIds"`
	// Set this flag to true if you want generate new campaign ID based on V3 campaign ID. These campaigns will not be visible through V4 campaign list call. If set to true not all campaign entities such as ad group, targeting, ad, or creatives are created. Use this flag for staging purpose only. By default it will always be false
	IsStagedMigration bool `json:"isStagedMigration,omitempty"`
	// This is optional parameter. By default, the new migrated campaigns will have the original status of V3 campaigns. If this parameter is set, then all newly migrated campaigns will have this state.  Supported campaign states | State                                              |  Description | |----------------------------------------------------------|--------------| | ENABLED                               | Campaign entity has ENABLED state |
	NewCampaignState string `json:"newCampaignState,omitempty"`
	// By default, theme targeting is set true if no value is provide. To disable theme targeting, set this flag to false.
	EnableThemeTargeting bool `json:"enableThemeTargeting"`
	// Please note that brandEntityId is only required for sellers. You can get the brandEntityId by calling the <a href = https://advertising.amazon.com/API/docs/en-us/sponsored-brands/3-0/openapi#tag/Brands/operation/getBrands>GET /brands</a> endpoint.
	BrandEntityId string `json:"brandEntityId,omitempty"`
}
