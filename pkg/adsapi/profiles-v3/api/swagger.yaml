openapi: 3.0.2
info:
  title: Amazon Ads API for Sponsored Display
  description: |-
    This API enables programmatic access for campaign creation, management, and reporting for Sponsored Display campaigns. For more information on the functionality, see the [Sponsored Display Support Center](https://advertising.amazon.com/help#GTPPHE6RAWC2C4LZ). For API onboarding information, see the [account setup](https://advertising.amazon.com/API/docs/en-us/guides/onboarding/overview) topic.<br/><br/>
    > This specification is available for download from the **[Advertising API developer portal](https://d3a0d0y2hgofx6.cloudfront.net/openapi/en-us/sponsored-display/3-0/openapi.yaml).**
  contact:
    name: Amazon Ads API Support
    url: https://amzn-clicks.atlassian.net/servicedesk/customer/portals
  license:
    name: Amazon Ads API License Agreement
    url: https://advertising.amazon.com/API/docs/license-agreement
  version: "3.0"
servers:
- url: https://advertising-api.amazon.com
  description: "Production endpoint for North America, which includes US and CA Amazon\
    \ marketplaces."
- url: https://advertising-api-eu.amazon.com
  description: "Production endpoint for Europe, which includes UK, FR, IT, ES, DE,\
    \ plus IN Amazon marketplaces."
- url: https://advertising-api-fe.amazon.com
  description: "Production endpoint for Far East, which includes JP Amazon marketplaces."
security:
- oauth2AuthorizationCode:
  - cpc_advertising:campaign_management
- bearerAuth: []
tags:
- name: Campaigns
- name: Ad Groups
- name: Product Ads
- name: Targeting
- name: Targeting Recommendations
- name: Bid Recommendations
- name: Headline Recommendations
- name: Budget Recommendations
- name: Negative Targeting
- name: Creatives
- name: Brand Safety List
- name: Reports
- name: Snapshots
- name: Forecasts
- name: Optimization Rules (beta)
- name: Budget Rules
- name: Budget Usage
- name: Locations (beta)
paths:
  /sd/campaigns:
    get:
      tags:
      - Campaigns
      summary: Gets a list of campaigns.
      description: "Gets an array of Campaign objects for a requested set of Sponsored\
        \ Display campaigns. Note that the Campaign object is designed for performance,\
        \ and includes a small set of commonly used fields to reduce size. If the\
        \ extended set of fields is required, use the campaign operations that return\
        \ the CampaignResponseEx object."
      operationId: listCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Optional. Sets a cursor into the requested set of campaigns.\
          \ Use in conjunction with the `count` parameter to control pagination of\
          \ the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: count
        in: query
        description: "Optional. Sets the number of Campaign objects in the returned\
          \ array. Use in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten campaigns set `startIndex=0` and\
          \ `count=10`. To return the next ten campaigns, set `startIndex=10` and\
          \ `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: Optional. The returned array is filtered to include only campaigns
          with state set to one of the values in the specified comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: name
        in: query
        description: Optional. The returned array includes only campaign with the
          specified name using an exact string match.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. The returned array includes only campaigns with identifiers
          matching those specified in the comma-delimited string.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: portfolioIdFilter
        in: query
        description: Optional. The returned array includes only campaigns associated
          with Portfolio identifiers matching those specified in the comma-delimited
          string.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Campaigns
      summary: Updates one or more campaigns.
      operationId: updateCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "An array of Campaign objects. For each object, specify a campaign\
          \ identifier and mutable fields with their updated values. The mutable fields\
          \ are `name`, `state`, `budget`, `startDate`, and `endDate`. Maximum length\
          \ of the array is 100 objects."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateCampaign'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampaignResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Campaigns
      summary: Creates one or more campaigns.
      operationId: createCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |
          An array of Campaign objects. For each object, specify required fields and their values. Required fields are `name`, `tactic`, `state`, and `startDate`. Maximum length of the array is 100 objects. If you don't specify a `budget`, it will be set as the [default budget for your region](https://advertising.amazon.com/API/docs/en-us/concepts/limits#default-budgets). Campaign names must be unique across SD, SB, and SP.
            If you are using Optimization rules, the following campaign budget must be at least:
            - 5x the value of any COST_PER_ORDER threshold.
            - 10x the value of any COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS threshold.
            - 20x the value of any COST_PER_CLICK threshold.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCampaign'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampaignResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/campaigns/{campaignId}:
    get:
      tags:
      - Campaigns
      summary: Gets a requested campaign.
      description: "Returns a Campaign object for a requested campaign. Note that\
        \ the Campaign object is designed for performance, with a small set of commonly\
        \ used campaign fields to reduce size. If the extended set of fields is required,\
        \ use the campaign operations that return the CampaignResponseEx object."
      operationId: getCampaign
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: campaignId
        in: path
        description: The identifier of the requested campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Campaigns
      summary: Sets the campaign status to archived.
      description: "This operation is equivalent to an update operation that sets\
        \ the status field to 'archived'. Note that setting the status field to 'archived'\
        \ is permanent and can't be undone. See [Developer Notes](https://advertising.amazon.com/API/docs/en-us/info/developer-notes#archiving)\
        \ for more information."
      operationId: archiveCampaign
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: campaignId
        in: path
        description: The identifier of the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/campaigns/extended:
    get:
      tags:
      - Campaigns
      summary: Gets a list of campaigns with extended fields.
      description: Gets an array of CampaignResponseEx objects for a set of requested
        campaigns.
      operationId: listCampaignsEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Optional. Sets a cursor into the requested set of campaigns.\
          \ Use in conjunction with the `count` parameter to control pagination of\
          \ the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: "Optional. Sets the number of Campaign objects in the returned\
          \ array. Use in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten campaigns set `startIndex=0` and\
          \ `count=10`. To return the next ten campaigns, set `startIndex=10` and\
          \ `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: Optional. The returned array is filtered to include only campaigns
          with state set to one of the values in the specified comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: name
        in: query
        description: Optional. The returned array includes only campaign with the
          specified name using an exact string match.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. The returned array includes only campaigns with identifiers
          matching those specified in the comma-delimited string.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: portfolioIdFilter
        in: query
        description: Optional. The returned array includes only campaigns associated
          with Portfolio identifiers matching those specified in the comma-delimited
          string.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampaignResponseEx'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/campaigns/extended/{campaignId}:
    get:
      tags:
      - Campaigns
      summary: Gets extended information for a requested campaign.
      description: Returns a CampaignResponseEx object for a requested campaign. The
        CampaignResponseEx includes the extended set of available fields.
      operationId: getCampaignResponseEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: campaignId
        in: path
        description: The identifier of the requested campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponseEx'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/adGroups:
    get:
      tags:
      - Ad Groups
      summary: Gets a list of ad groups.
      description: "Gets an array of AdGroup objects for a requested set of Sponsored\
        \ Display ad groups. Note that the AdGroup object is designed for performance,\
        \ and includes a small set of commonly used fields to reduce size. If the\
        \ extended set of fields is required, use the ad group operations that return\
        \ the AdGroupResponseEx object."
      operationId: listAdGroups
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Optional. Sets a cursor into the requested set of campaigns.\
          \ Use in conjunction with the `count` parameter to control pagination of\
          \ the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: "Optional. Sets the number of AdGroup objects in the returned\
          \ array. Use in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten ad groups set `startIndex=0` and\
          \ `count=10`. To return the next ten ad groups, set `startIndex=10` and\
          \ `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: Optional. The returned array is filtered to include only ad groups
          with state set to one of the values in the specified comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: campaignIdFilter
        in: query
        description: Optional. The returned array is filtered to include only ad groups
          associated with the campaign identifiers in the specified comma-delimited
          list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: Optional. The returned array is filtered to include only ad groups
          with an identifier specified in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Optional. The returned array includes only ad groups with the
          specified name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdGroup'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Ad Groups
      summary: Updates on or more ad groups.
      operationId: updateAdGroups
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "An array of AdGroup objects. For each object, specify an ad\
          \ group identifier and mutable fields with their updated values. The mutable\
          \ fields are 'name', 'defaultBid', and 'state'. Maximum length of the array\
          \ is 100 objects."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateAdGroup'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdGroupResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Ad Groups
      summary: Creates one or more ad groups.
      operationId: createAdGroups
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "An array of AdGroup objects. For each object, specify required\
          \ fields and their values. Required fields are `campaignId`, `name`, `state`,\
          \ and `defaultBid`. Maximum length of the array is 100 objects. Note - when\
          \ using landingPageType of OFF_AMAZON_LINK or STORES within productAds,\
          \ only 1 adGroup is supported."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAdGroup'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdGroupResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/adGroups/{adGroupId}:
    get:
      tags:
      - Ad Groups
      summary: Gets a requested ad group.
      description: "Returns an AdGroup object for a requested campaign. Note that\
        \ the AdGroup object is designed for performance, with a small set of commonly\
        \ used ad group fields to reduce size. If the extended set of fields is required,\
        \ use the campaign operations that return the AdGroupResponseEx object."
      operationId: getAdGroup
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adGroupId
        in: path
        description: The identifier of the requested ad group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroup'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Ad Groups
      summary: Sets the ad group status to archived.
      description: "This operation is equivalent to an update operation that sets\
        \ the status field to 'archived'. Note that setting the status field to 'archived'\
        \ is permanent and can't be undone. See [Developer Notes](https://advertising.amazon.com/API/docs/en-us/info/developer-notes#archiving)\
        \ for more information."
      operationId: archiveAdGroup
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adGroupId
        in: path
        description: The identifier of the requested ad group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroupResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/adGroups/extended:
    get:
      tags:
      - Ad Groups
      summary: Gets a list of ad groups with extended fields.
      description: Gets an array of AdGroupResponseEx objects for a set of requested
        ad groups.
      operationId: listAdGroupsEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Optional. Sets a cursor into the requested set of ad groups.\
          \ Use in conjunction with the `count` parameter to control pagination of\
          \ the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: "Optional. Sets the number of Campaign objects in the returned\
          \ array. Use in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten campaigns set `startIndex=0` and\
          \ `count=10`. To return the next ten campaigns, set `startIndex=10` and\
          \ `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: Optional. The returned array is filtered to include only campaigns
          with state set to one of the values in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: campaignIdFilter
        in: query
        description: Optional. The returned array is filtered to include only ad groups
          associated with the campaign identifiers in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: Optional. The returned array is filtered to include only ad groups
          with an identifier specified in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Optional. The returned array includes only ad groups with the
          specified name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdGroupResponseEx'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/adGroups/extended/{adGroupId}:
    get:
      tags:
      - Ad Groups
      summary: Gets extended information for a requested ad group.
      operationId: getAdGroupResponseEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adGroupId
        in: path
        description: The identifier of the requested ad group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroupResponseEx'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/productAds:
    get:
      tags:
      - Product Ads
      summary: Gets a list of product ads.
      description: "Gets an array of ProductAd objects for a requested set of Sponsored\
        \ Display product ads. Note that the ProductAd object is designed for performance,\
        \ and includes a small set of commonly used fields to reduce size. If the\
        \ extended set of fields is required, use a product ad operation that returns\
        \ the ProductAdResponseEx object."
      operationId: listProductAds
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Optional. Sets a cursor into the requested set of product ads.\
          \ Use in conjunction with the `count` parameter to control pagination of\
          \ the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: "Optional. Sets the number of ProductAd objects in the returned\
          \ array. Use in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten product ad set `startIndex=0` and\
          \ `count=10`. To return the next ten product ads, set `startIndex=10` and\
          \ `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: Optional. The returned array is filtered to include only products
          ads associated with campaigns that have state set to one of the values in
          the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: adIdFilter
        in: query
        description: Optional. The returned array includes only product ads with identifiers
          matching those in the comma-delimited string.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: Optional. The returned array is filtered to include only products
          ads associated with ad groups identifiers in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. The returned array is filtered to include only product
          ads associated with the campaign identifiers in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAd'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Product Ads
      summary: Updates one or more product ads.
      operationId: updateProductAds
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "An array of ProductAd objects. For each object, specify a product\
          \ ad identifier and the only mutable field, `state`. Maximum length of the\
          \ array is 100 objects."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateProductAd'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAdResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Product Ads
      summary: Creates one or more product ads.
      operationId: createProductAds
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "An array of ProductAd objects. For each object, specify required\
          \ fields and their values. Required fields are `adGroupId` and `state`.\
          \ Within any campaign, you must pass consistent fields of either `asin`\
          \ (for vendors), `sku` (for sellers), or `landingPageURL` (when linking\
          \ to other pages), these cannot be mixed for any given campaign. Maximum\
          \ length of the array is 100 objects."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateProductAd'
            examples:
              Vendor example:
                value:
                - state: enabled
                  adGroupId: 0
                  campaignId: 0
                  asin: B081FGSWTJ
              Seller example:
                value:
                - state: enabled
                  adGroupId: 0
                  campaignId: 0
                  sku: sku-1234567
              Off Amazon example:
                value:
                - state: enabled
                  adGroupId: 0
                  campaignId: 0
                  landingPageURL: https://advertising.amazon.com
                  landingPageType: OFF_AMAZON_LINK
                  adName: AmazonAdvertising
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAdResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/productAds/{adId}:
    get:
      tags:
      - Product Ads
      summary: Gets a requested product ad.
      description: "Note that the ProductAd object is designed for performance, and\
        \ includes a small set of commonly used fields to reduce size. If the extended\
        \ set of fields is required, use a product ad operations that returns the\
        \ ProductAdResponseEx object."
      operationId: getProductAd
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adId
        in: path
        description: The identifier of the requested product ad.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAd'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Product Ads
      summary: Sets the status of a sproduct ad to archived.
      description: "This operation is equivalent to an update operation that sets\
        \ the status field to 'archived'. Note that setting the status field to 'archived'\
        \ is permanent and can't be undone. See [Developer Notes](https://advertising.amazon.com/API/docs/en-us/info/developer-notes#archiving)\
        \ for more information."
      operationId: archiveProductAd
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adId
        in: path
        description: The identifier of the produce ad.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAdResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/productAds/extended:
    get:
      tags:
      - Product Ads
      summary: Gets a list of product ads with extended fields.
      description: Gets an array of ProductAdResponseEx objects for a set of requested
        ad groups. The ProductAdResponseEx object includes the extended set of available
        fields.
      operationId: listProductAdsEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Optional. Sets a cursor into the requested set of product ads.\
          \ Use in conjunction with the `count` parameter to control pagination of\
          \ the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: "Optional. Sets the number of ProduceAdEx objects in the returned\
          \ array. Use in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten product ads set `startIndex=0` and\
          \ `count=10`. To return the next ten campaigns, set `startIndex=10` and\
          \ `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: Optional. The returned array is filtered to include only campaigns
          with state set to one of the values in the specified comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: adIdFilter
        in: query
        description: Optional. The returned array includes only product ads with identifiers
          matching those in the comma-delimited string.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: Optional. The returned array is filtered to include only products
          ads associated with ad groups identifiers in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. The returned array is filtered to include only product
          ads associated with the campaign identifiers in the comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAdResponseEx'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/productAds/extended/{adId}:
    get:
      tags:
      - Product Ads
      summary: Gets extended information for a product ad.
      operationId: getProductAdResponseEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adId
        in: path
        description: The identifier of the requested product ad.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAdResponseEx'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/brandSafety/deny:
    get:
      tags:
      - Brand Safety List
      summary: Gets a list of websites/apps that are on the advertiser's Brand Safety
        Deny List.
      description: |-
        Gets an array of websites/apps that are on the advertiser's Brand Safety Deny List. It can take up to 15 minutes
        from the time a domain is added/deleted to the time it is reflected in the deny list.
      operationId: listDomains
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: |
          Optional. Sets a cursor into the requested set of domains. Use in conjunction with the count parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: count
        in: query
        description: |
          Optional. Sets the number of domain objects in the returned array. Use in conjunction with the startIndex parameter to control pagination. For example, to return the first 1000 domains set startIndex=0 and count=1000. To return the next 1000 domains, set startIndex=1000 and count=1000, and so on. Defaults to max page size(1000).
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandSafetyGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Brand Safety List
      summary: |
        Creates one or more domains to add to a Brand Safety Deny List.
      description: |
        Creates one or more domains to add to a Brand Safety Deny List. The Brand Safety Deny List is at the advertiser level. It can take up to 15 minutes from the time a domain is added to the time it is reflected in the deny list.
      operationId: createBrandSafetyDenyListDomains
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |
          An array of Brand Safety List Domain objects. For each object, specify required fields and their values. Maximum length of the array is 10,000 objects.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandSafetyPostRequest'
        required: true
      responses:
        "202":
          description: Request has been accepted for processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandSafetyUpdateResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Brand Safety List
      summary: |
        Archives all of the domains in the Brand Safety Deny List.
      description: |
        Archives all of the domains in the Brand Safety Deny List. It can take several hours from the time a domain is deleted to the time it is reflected in the deny list. You can check the status of the delete request by calling GET /sd/brandSafety/{requestId}/status. If the status is "COMPLETED", you can call GET /sd/brandSafety/deny to validate that your deny list has been successfully deleted.
      operationId: deleteBrandSafetyDenyList
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Request has been accepted for processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandSafetyUpdateResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/reports/{reportId}:
    get:
      tags:
      - Reports
      summary: Gets the status of a report previously requested.
      description: |-
        Uses the `reportId` value from the response of a report previously requested via `POST` method of the `/sd/{recordType}/report` operation.

        **To understand the call flow for asynchronous reports, see [Getting started with sponsored ads reports](/API/docs/en-us/guides/reporting/v2/sponsored-ads-reports).**
      operationId: getReportStatus
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reportId
        in: path
        description: The identifier of the requested report.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/reports/{reportId}/download:
    get:
      tags:
      - Reports
      summary: Downloads a previously requested report identified by reportId.
      description: |-
        Gets a `307 Temporary Redirect` response that includes a `location` header with the value set to an AWS S3 path where the report is located. The path expires after 30 seconds. If the path expires before the report is downloaded, a new report request must be created.

        **To understand the call flow for asynchronous reports, see [Getting started with sponsored ads reports](/API/docs/en-us/guides/reporting/v2/sponsored-ads-reports).**
      operationId: downloadReport
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reportId
        in: path
        description: The identifier of the requested report.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "307":
          description: Successful operation.
          headers:
            Location:
              description: Redirect URI with S3 file location containing report data
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/{recordType}/report:
    post:
      tags:
      - Reports
      summary: Creates a report request.
      description: |-
        **To understand the call flow for asynchronous reports, see [Getting started with sponsored ads reports](/API/docs/en-us/guides/reporting/v2/sponsored-ads-reports).**

        The Sponsored Display API supports creation of reports for campaigns, ad groups, product ads, targets, and asins. Create a ReportRequest object specifying the fields corresponding to performance data metrics to include in the report.
      operationId: requestReport
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recordType
        in: path
        description: "The type of report to generate, either `campaigns`, `adGroups`,\
          \ `productAds`, `targets`, or `asins`. The 'asins' report, also known as\
          \ the Purchased products report, is only available for seller brand owners."
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - campaigns
          - adGroups
          - productAds
          - targets
          - asins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: false
      responses:
        "202":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Not acceptable - Failed due to report date being too far in
            the past.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable entity - Failed due to invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /sd/targets:
    get:
      tags:
      - Targeting
      summary: Gets a list of targeting clauses.
      description: "Gets a list of targeting clauses objects for a requested set of\
        \ Sponsored Display targets. Note that the Targeting Clause object is designed\
        \ for performance, and includes a small set of commonly used fields to reduce\
        \ size. If the extended set of fields is required, use the target operations\
        \ that return the TargetingClauseEx object."
      operationId: listTargetingClauses
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: Optional. 0-indexed record offset for the result set. Defaults
          to 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: Optional. Number of records to include in the paged response.
          Defaults to max page size.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: Optional. Restricts results to those with `state` set to values
          in the specified comma-separated list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: targetIdFilter
        in: query
        description: Optional. Restricts results to ads with the specified `tagetId`
          specified in comma-separated list
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: Optional list of comma separated adGroupIds. Restricts results
          to targeting clauses with the specified `adGroupId`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. Restricts results to targeting clauses within campaigns
          specified in comma-separated list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetingClause'
                x-content-type: application/json
              example:
                targetId: 123
                adGroupId: 321
                campaignId: 234
                state: enabled
                expressionType: manual
                bid: 1.5
                expression:
                  type: asinSameAs
                  value: B0123456789
                resolvedExpression:
                  type: asinSameAs
                  value: B0123456789
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Targeting
      summary: Updates one or more targeting clauses.
      description: Updates one or more targeting clauses. Targeting clauses are identified
        using their targetId. The mutable fields are `bid` and `state`. Maximum length
        of the array is 100 objects.
      operationId: updateTargetingClauses
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          A list of up to 1000 targeting clauses. Mutable fields:
          * `state`
          * `bid` (only mutable when the targeting clause's adGroup does not have any enabled optimization rule)
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateTargetingClause'
        required: false
      responses:
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Targeting
      summary: Creates one or more targeting clauses.
      description: |-
        Successfully created targeting clauses are assigned a unique `targetId` value.

        Create new targeting clauses for **both** Audience and Contextual campaigns with tactic 'T00030' using the above and the following:
        | Contextual targeting clause | Description |
        |------------------|-------------|
        | similarProduct | Dynamic segment to target products that are similar to the advertised asin. We recommend using 'similarProduct' targeting for all adGroups. |
        | asinSameAs=B0123456789 | Target this product. |
        | asinCategorySameAs=12345 | Target products in the category. |
        | asinCategorySameAs=12345 asinBrandSameAs=45678 | Target products in the category and brand. |

        **Refinements:**
        - asinBrandSameAs
        - asinPriceBetween
        - asinPriceGreaterThan
        - asinPriceLessThan
        - asinReviewRatingLessThan
        - asinReviewRatingGreaterThan
        - asinReviewRatingBetween
        - asinIsPrimeShippingEligible
        - asinAgeRangeSameAs
        - asinGenreSameAs

        **Refinement Notes:**
        * Brand, price, and review predicates are optional and may only be specified if category is also specified.
        * Review predicates accept numbers between 0 and 5 and are inclusive.
        * When using either of the 'between' strings to construct a targeting expression the format of the string is 'double-double' where the first double must be smaller than the second double. Prices are not inclusive.
        * 'similarProduct' has no expression value or refinements.

        | Audience targeting clause | Description |
        |------------------|-------------|
        | views(exactProduct lookback=30) | Target an audience that has viewed the advertised asins in the past 7,14,30,60, or 90 days. Note: This target should only be used for productAds with SKU or ASIN. |
        | views(similarProduct lookback=60) | Target an audience that has viewed similar products to the advertised asins in the past 7,14,30,60, or 90 days. Note: This target should only be used for productAds with SKU or ASIN.|
        | views(asinCategorySameAs=12345 lookback=90) | Target an audience that has viewed products in the given category in the past 7,14,30,60, or 90 days. |
        | views(asinCategorySameAs=12345 asinBrandSameAs=45678 asinPriceBetween=50-100 lookback=60) | Target an audience that has viewed products in the given category, brand, and price range in the past 7,14,30,60, or 90 days. |
        | purchases(relatedProduct lookback=180) | Target an audience that has purchased a related product in the past 7,14,30,60,90,180 or 365 days. Note: This target should only be used for productAds with SKU or ASIN.|
        | purchases(exactProduct lookback=365) | Target an audience that has purchased the advertised asins in the past 7,14,30,60,90,180 or 365 days. Note: This target should only be used for productAds with SKU or ASIN.|
        | purchases(asinCategorySameAs=12345 asinBrandSameAs=45678 asinPriceBetween=50-100 lookback=90) | Target an audience that has purchased products in the given category, brand, and price range in the past 7,14,30,60,90,180 or 365 days |
        | audiencesLikelyInterestedInAd | Dynamic segment to target audiences that are likely to consider and buy from your business. We recommend that you add this segment to all of your campaigns to help you achieve greater reach and campaign scale. Note: this is only supported when using landingPageType of OFF_AMAZON_LINK |
        | audience(audienceSameAs=12345) | Target the given Amazon Audience. |

        | Content targeting clause | Description |
        |------------------|-------------|
        | contentCategorySameAs=amzn1.iab-content.325 | Target an audience that has engaged with or shown interest in the given entertainment category. |

        Notes on content targeting:
        * The `contentCategorySameAs` targeting predicate is required
        * For all iab categories, see [Discovering entertainment target categories](https://advertising.amazon.com/API/docs/en-us/guides/sponsored-display/entertainment-targeting#discovering-entertainment-target-categories).

        Note:
        1. You can still create new targeting clauses for Contextual campaigns with tactic 'T00020' using the Contextual clauses above.
        2. There is a limit of 200 targeting clauses per request for T00030.
        3. There is a limit of 1000 targeting clauses per request for T00020.
        4. There is a total limit of 1000 targeting clauses per ad group.
        5. If you receive the error of "Cannot create targeting clause: audience size is too small", please expand or broaden your targeting clause to increase the audience size.
      operationId: createTargetingClauses
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: A list of targeting clauses for creation.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateTargetingClause'
        required: false
      responses:
        "207":
          description: multi-status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/targets/{targetId}:
    get:
      tags:
      - Targeting
      summary: Gets a targeting clause specified by identifier.
      description: This call returns the minimal set of targeting clause fields.
      operationId: getTargets
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetId
        in: path
        description: The identifier of a targeting clause.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetingClause'
              example:
                targetId: 123
                adGroupId: 321
                campaignId: 234
                state: enabled
                expressionType: manual
                bid: 1.5
                expression:
                  type: asinSameAs
                  value: B0123456789
                resolvedExpression:
                  type: asinSameAs
                  value: B0123456789
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Targeting
      summary: Sets the `state` of a targeting clause to `archived`.
      description: |-
        Equivalent to using the `updateTargetingClauses` operation to set the `state` property of a targeting clause to `archived`. See [Developer
        Notes](http://advertising.amazon.com/API/docs/guides/developer_notes#Archiving) for more information.
      operationId: archiveTargetingClause
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetId
        in: path
        description: The identifer of a targeting clause.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/targets/extended:
    get:
      tags:
      - Targeting
      summary: Gets a list of targeting clause objects with extended fields.
      description: "Gets an array of TargetingClauseEx objects for a set of requested\
        \ targets. Note that this call returns the full set of targeting clause extended\
        \ fields, but is less efficient than getTargets."
      operationId: listTargetingClausesEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: Optional. 0-indexed record offset for the result set. Defaults
          to 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: Optional. Number of records to include in the paged response.
          Defaults to max page size.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: "Optional. Restricts results to keywords with state within the\
          \ specified comma-separated list. Must be one of: `enabled`, `paused`, or\
          \ `archived`. Default behavior is to include enabled, paused, and archived."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: targetIdFilter
        in: query
        description: Optional. Restricts results to ads with the specified `tagetId`
          specified in comma-separated list
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: Optional list of comma separated adGroupIds. Restricts results
          to targeting clauses with the specified `adGroupId`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. Restricts results to ads within campaigns specified
          in comma-separated list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetingClauseEx'
                x-content-type: application/json
              example:
                targetId: 123
                adGroupId: 321
                campaignId: 234
                state: enabled
                expressionType: manual
                bid: 1.5
                expression:
                  type: asinSameAs
                  value: B0123456789
                resolvedExpression:
                  type: asinSameAs
                  value: B0123456789
                servingStatus: TARGET_STATUS_PAUSED
                creationDate: 1537568785000
                lastUpdateDate: 1537568785000
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/targets/extended/{targetId}:
    get:
      tags:
      - Targeting
      summary: Gets extended information for a targeting clause.
      description: "Gets a targeting clause object with extended fields. Note that\
        \ this call returns the full set of targeting clause extended fields, but\
        \ is less efficient than getTarget."
      operationId: getTargetsEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetId
        in: path
        description: The identifier of a targeting clause.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetingClauseEx'
              example:
                targetId: 123
                adGroupId: 321
                campaignId: 234
                state: enabled
                expressionType: manual
                bid: 1.5
                expression:
                  type: asinSameAs
                  value: B0123456789
                resolvedExpression:
                  type: asinSameAs
                  value: B0123456789
                servingStatus: TARGET_STATUS_PAUSED
                creationDate: 1537568785000
                lastUpdateDate: 1537568785000
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/targets/recommendations:
    post:
      tags:
      - Targeting Recommendations
      summary: Returns a set of recommended products and categories to target
      description: |-
        This API provides product, category and standard audience recommendations to target based on the list of input ASINs. Allow 1 week for our systems to process data for any new ASINs listed on Amazon before using this service. Note -  recommendations are only available for productAds with SKU or ASIN.

        For API v3.0, the API returns up to 100 recommendations for contextual targeting.

        For API v3.1, the API returns up to 100 recommendations for both product and category targeting.

        For API v3.2, the API introduces contextual targeting themes in the request and returns product recommendations based on different targeting themes.

        For API v3.3, the API introduces standard audience recommendations and translated category recommendations based on locale.

        For API v3.4, the API includes the theme expression used in contextual targeting recommendations in the response.

        [PREVIEW ONLY] For API v3.5, the API supports recommendations for landing pages for audience targeting with tactic T00030.
        The API also supports entertainment targeting recommendations. Both features are currently limited to US marketplace.

        The currently available tactic identifiers are:

        |Tactic Name|Type|Description|
        |-----------|----|-----------|
        |T00020&nbsp;|Contextual Targeting|Products: Choose individual products to show your ads in placements related to those products.|
        |T00030&nbsp;|Audiences or Contextual Targeting| Select individual products, categories, refined categories, or audiences to show your ads.|
      operationId: getTargetRecommendations
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: locale
        in: query
        description: The requested locale from query parameter to return translated
          category recommendations.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SDTargetingRecommendationsLocale'
      requestBody:
        content:
          application/vnd.sdtargetingrecommendations.v3.5+json:
            schema:
              $ref: '#/components/schemas/SDTargetingRecommendationsRequestV35'
          application/vnd.sdtargetingrecommendations.v3.4+json:
            schema:
              $ref: '#/components/schemas/SDTargetingRecommendationsRequestV34'
          application/vnd.sdtargetingrecommendations.v3.3+json:
            schema:
              $ref: '#/components/schemas/SDTargetingRecommendationsRequestV33'
          application/vnd.sdtargetingrecommendations.v3.2+json:
            schema:
              $ref: '#/components/schemas/SDTargetingRecommendationsRequestV32'
          application/vnd.sdtargetingrecommendations.v3.1+json:
            schema:
              $ref: '#/components/schemas/SDTargetingRecommendationsRequestV31'
          application/vnd.sdtargetingrecommendations.v3.0+json:
            schema:
              $ref: '#/components/schemas/SDTargetingRecommendationsRequest'
      responses:
        "200":
          description: Successful operation.
          content:
            application/vnd.sdtargetingrecommendations.v3.5+json:
              schema:
                $ref: '#/components/schemas/SDTargetingRecommendationsResponseV35'
            application/vnd.sdtargetingrecommendations.v3.4+json:
              schema:
                $ref: '#/components/schemas/SDTargetingRecommendationsResponseV34'
            application/vnd.sdtargetingrecommendations.v3.3+json:
              schema:
                $ref: '#/components/schemas/SDTargetingRecommendationsResponseV33'
            application/vnd.sdtargetingrecommendations.v3.2+json:
              schema:
                $ref: '#/components/schemas/SDTargetingRecommendationsResponseV32'
            application/vnd.sdtargetingrecommendations.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDTargetingRecommendationsResponseV31'
            application/vnd.sdtargetingrecommendations.v3.0+json:
              schema:
                $ref: '#/components/schemas/SDTargetingRecommendationsResponse'
        "400":
          description: Generic bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
  /sd/campaigns/budgetRecommendations:
    post:
      tags:
      - Budget Recommendations
      summary: Returns recommended daily budget and estimated missed opportunities
        for campaigns
      description: "Given a list of campaigns as input, this API provides the following\
        \ metrics:\n<br> <b>1. Recommended daily budget - </b> Estimated budget needed\
        \ to keep the campaign in budget for the full 24-hour period. Consider this\
        \ budget to minimize your campaign's chances of running out of budget. \n\
        <br> <b>2. Percent time in budget </b> - The share of time the campaign was\
        \ in budget during the past 7 days.\n<br> <b>3. Estimated missed impressions,\
        \ clicks and sales </b> - These are the estimated additional impressions,\
        \ clicks and sales the campaign might have generated had it adopted the recommended\
        \ budget. These are estimates based on campaign's historical performance -\
        \ and not a guarantee of actual impressions, clicks and sales. Consider using\
        \ these metrics to further inform your budget allocation decisions."
      operationId: getSDBudgetRecommendations
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Ads-AccountId
        in: header
        description: The identifier of an account. Account must be a global advertising
          account.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/vnd.sdbudgetrecommendations.v3+json:
            schema:
              $ref: '#/components/schemas/SDBudgetRecommendationsRequest'
      responses:
        "207":
          description: Multi-status.
          content:
            application/vnd.sdbudgetrecommendations.v3+json:
              schema:
                $ref: '#/components/schemas/SDBudgetRecommendationsResponse'
        "400":
          description: Generic bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "415":
          description: Unsupported Media Type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
  /sd/negativeTargets:
    get:
      tags:
      - Negative Targeting
      summary: Gets a list of negative targeting clauses.
      description: "Gets a list of negative targeting clauses objects for a requested\
        \ set of Sponsored Display negative targets. Note that the Negative Targeting\
        \ Clause object is designed for performance, and includes a small set of commonly\
        \ used fields to reduce size. If the extended set of fields is required, use\
        \ the negative target operations that return the NegativeTargetingClauseEx\
        \ object."
      operationId: listNegativeTargetingClauses
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: Optional. 0-indexed record offset for the result set. Defaults
          to 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: Optional. Number of records to include in the paged response.
          Defaults to max page size.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: "Optional. Restricts results to those with state within the specified\
          \ comma-separated list. Must be one of: `enabled`, `paused`, or `archived`.\
          \ Default behavior is to include enabled, paused, and archived."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: adGroupIdFilter
        in: query
        description: Optional list of comma separated adGroupIds. Restricts results
          to negative targeting clauses with the specified `adGroupId`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. Restricts results to targeting clauses within campaigns
          specified in comma-separated list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NegativeTargetingClause'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Negative Targeting
      summary: Updates one or more negative targeting clauses.
      description: Updates one or more negative targeting clauses. Negative targeting
        clauses are identified using their targetId. The mutable field is `state`.
        Maximum length of the array is 100 objects.
      operationId: updateNegativeTargetingClauses
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: A list of up to 100 negative targeting clauses. Note that the
          only mutable field is `state`.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateNegativeTargetingClause'
        required: false
      responses:
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Negative Targeting
      summary: Creates one or more negative targeting clauses.
      description: |-
        Successfully created negative targeting clauses associated with an ad group are assigned a unique target identifier.
        Product negative targeting clause examples:
        | Negative targeting clause | Description |
        |---------------------------|-------------|
        | asinSameAs=B0123456789 | Negatively target this product.|
        | asinBrandSameAs=12345 | Negatively target products in the brand.|
      operationId: createNegativeTargetingClauses
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: A list of up to 100 negative targeting clauses for creation.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateNegativeTargetingClause'
        required: false
      responses:
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/negativeTargets/{negativeTargetId}:
    get:
      tags:
      - Negative Targeting
      summary: Gets a negative targeting clause specified by identifier.
      description: "This call returns the minimal set of negative targeting clause\
        \ fields, but is more efficient than getNegativeTargetsEx."
      operationId: getNegativeTargets
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: negativeTargetId
        in: path
        description: The negative targeting clause identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegativeTargetingClause'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Negative Targeting
      summary: Sets the `state` of a negative targeting clause to `archived`.
      description: "Equivalent to using the updateNegativeTargetingClauses operation\
        \ to set the `state` property of a targeting clause to `archived`. See [Developer\
        \ Notes](http://advertising.amazon.com/API/docs/guides/developer_notes#Archiving)\
        \ for more information."
      operationId: archiveNegativeTargetingClause
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: negativeTargetId
        in: path
        description: The identifier of a negative targeting clause.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/negativeTargets/extended:
    get:
      tags:
      - Negative Targeting
      summary: Gets a list of negative targeting clause objects with extended fields.
      description: "Gets an array of NegativeTargetingClauseEx objects for a set of\
        \ requested negative targets. Note that this call returns the full set of\
        \ negative targeting clause extended fields, but is less efficient than getNegativeTargets."
      operationId: listNegativeTargetingClausesEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: Optional. 0-indexed record offset for the result set. Defaults
          to 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: Optional. Number of records to include in the paged response.
          Defaults to max page size.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: "Optional. Restricts results to keywords with state within the\
          \ specified comma-separated list. Must be one of: `enabled`, `paused`, or\
          \ `archived`. Default behavior is to include `enabled`, `paused`, and `archived`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "enabled, paused, archived"
          enum:
          - enabled
          - paused
          - archived
          - "enabled, paused"
          - "enabled, archived"
          - "paused, archived"
          - "enabled, paused, archived"
      - name: targetIdFilter
        in: query
        description: Optional. Restricts results to ads with the specified `tagetId`
          specified in comma-separated list
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: Optional list of comma separated adGroupIds. Restricts results
          to negative targeting clauses with the specified `adGroupId`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional. Restricts results to ads within campaigns specified
          in the comma-separated list.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NegativeTargetingClauseEx'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/negativeTargets/extended/{negativeTargetId}:
    get:
      tags:
      - Negative Targeting
      summary: Gets extended information for a negative targeting clause.
      description: "Gets a negative targeting clause with extended fields. Note that\
        \ this call returns the full set of negative targeting clause extended fields,\
        \ but is less efficient than getNegativeTarget."
      operationId: getNegativeTargetsEx
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: negativeTargetId
        in: path
        description: The negative targeting clause identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegativeTargetingClauseEx'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/{recordType}/snapshot:
    post:
      tags:
      - Snapshots
      summary: Request a file-based snapshot of all entities of the specified type
        in the account satisfying the filtering criteria
      description: "**Note: Snapshots APIs are deprecated and will be shut off on\
        \ October 15, 2024. For replacement functionality, see the [exports](guides/exports/overview)\
        \ API. To learn more, view the [migration guide](reference/migration-guides/snapshots-exports).**\
        \ \nTo understand the call flow for asynchronous snapshots, see [Getting started\
        \ with sponsored ads snapshots](/API/docs/en-us/guides/snapshots/get-started)."
      operationId: createSnapshot
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recordType
        in: path
        description: "**Note: Snapshots APIs are deprecated and will be shut off on\
          \ October 15, 2024. For replacement functionality, see the [exports](guides/exports/overview)\
          \ API. To learn more, view the [migration guide](reference/migration-guides/snapshots-exports).**\
          \ \nThe type of entity for which the snapshot should be generated. Must\
          \ be one of: `campaigns`, `adgroups`, `productAds`, or `targets`."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request a snapshot file for all entities of a single record type.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotRequest'
      responses:
        "202":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /sd/snapshots/{snapshotId}:
    get:
      tags:
      - Snapshots
      summary: "Retrieve status, metadata, and location of previously requested snapshot"
      description: "**Note: Snapshots APIs are deprecated and will be shut off on\
        \ October 15, 2024. For replacement functionality, see the [exports](guides/exports/overview)\
        \ API. To learn more, view the [migration guide](reference/migration-guides/snapshots-exports).**\
        \ \n\nTo understand the call flow for asynchronous snapshots, see [Getting\
        \ started with sponsored ads snapshots](/API/docs/en-us/guides/snapshots/get-started)."
      operationId: getSnapshot
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: snapshotId
        in: path
        description: The Snapshot identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified   resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /sd/snapshots/{snapshotId}/download:
    get:
      tags:
      - Snapshots
      summary: Download previously requested snapshot
      description: "**Note: Snapshots APIs are deprecated and will be shut off on\
        \ October 15, 2024. For replacement functionality, see the [exports](guides/exports/overview)\
        \ API. To learn more, view the [migration guide](reference/migration-guides/snapshots-exports).**\
        \ \n\nTo understand the call flow for asynchronous snapshots, see [Getting\
        \ started with sponsored ads snapshots](/API/docs/en-us/guides/snapshots/overview)."
      operationId: downloadSnapshot
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: snapshotId
        in: path
        description: The Snapshot identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "307":
          description: Successful operation.
          headers:
            Location:
              description: Redirect URI with S3 file location containing snapshot
                data
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /sd/creatives:
    get:
      tags:
      - Creatives
      summary: Gets a list of creatives
      description: ""
      operationId: listCreatives
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Sets a cursor into the requested set of creatives. Use in conjunction\
          \ with the `count` parameter to control pagination of the returned array.\
          \ 0-indexed record offset for the result set, defaults to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: count
        in: query
        description: "Sets the number of creative objects in the returned array. Use\
          \ in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten creatives set `startIndex=0` and\
          \ `count=10`. To return the next ten creatives, set `startIndex=10` and\
          \ `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 100
      - name: adGroupIdFilter
        in: query
        description: The returned array includes only creatives associated with ad
          group identifiers matching those specified in the comma-delimited string.
          Cannot be used in conjunction with the `creativeIdFilter` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: creativeIdFilter
        in: query
        description: The returned array includes only creatives with identifiers matching
          those specified in the comma-delimited string. Cannot be used in conjunction
          with the `adGroupIdFilter` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Creative'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Creatives
      summary: Updates one or more creatives.
      description: ""
      operationId: updateCreatives
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: An array of creative objects to update. Maximum length of the
          array is 100 objects.
        content:
          application/json:
            schema:
              maxItems: 100
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/CreativeUpdate'
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreativeResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Creatives
      summary: A POST request of one or more creatives.
      description: ""
      operationId: createCreatives
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An array of Creative objects to create. Maximum length of the array is 100 objects. Note - when using productAds with landingPageURL of OFF_AMAZON_LINK, STORE, or MOMENT, the following properties are required all together;
          1) headline, 2) brandLogo, and 3) rectCustomImage, squareCustomImage.
        content:
          application/json:
            schema:
              maxItems: 100
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/CreateCreative'
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreativeResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/creatives/preview:
    post:
      tags:
      - Creatives
      summary: Gets creative preview HTML.
      description: ""
      operationId: postCreativePreview
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativePreviewRequest'
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativePreviewResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/moderation/creatives:
    get:
      tags:
      - Creatives
      summary: Gets a list of creative moderations
      description: ""
      operationId: listCreativeModerations
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: language
        in: query
        description: The language of the returned creative moderation metadata.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Locale'
      - name: startIndex
        in: query
        description: "Sets a cursor into the requested set of creative moderations.\
          \ Use in conjunction with the `count` parameter to control pagination of\
          \ the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: count
        in: query
        description: "Sets the number of creative objects in the returned array. Use\
          \ in conjunction with the `startIndex` parameter to control pagination.\
          \ For example, to return the first ten creative moderations set `startIndex=0`\
          \ and `count=10`. To return the next ten creative moderations, set `startIndex=10`\
          \ and `count=10`, and so on. Defaults to max page size."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 100
      - name: adGroupIdFilter
        in: query
        description: The returned array includes only creative moderations associated
          with ad group identifiers matching those specified in the comma-delimited
          string. Cannot be used in conjunction with the `creativeIdFilter` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: creativeIdFilter
        in: query
        description: The returned array includes only creative moderations with creative
          identifiers matching those specified in the comma-delimited string. Cannot
          be used in conjunction with the `adGroupIdFilter` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreativeModeration'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/brandSafety/{requestId}/results:
    get:
      tags:
      - Brand Safety List
      summary: Gets the results for the given request
      description: |
        When a user adds domains to their Brand Safety Deny List, the request is processed asynchronously, and a requestId is provided to the user. This requestId can be used to view the request results for up to 90 days from when the request was submitted. The results provide the status of each domain in the given request. Request results may contain multiple pages. This endpoint will only be available once the request has completed processing. To see the status of the request you can call GET /sd/brandSafety/{requestId}/status. Note that this endpoint only lists the results of POST requests to /sd/brandSafety/deny - it does not reflect the results of DELETE requests.
      operationId: getRequestResults
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: requestId
        in: path
        description: The ID of the request previously submitted.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: |
          Optional. Sets a cursor into the requested set of results. Use in conjunction with the count parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: count
        in: query
        description: |
          Optional. Sets the number of results in the returned array. Use in conjunction with the startIndex parameter to control pagination. For example, to return the first 1000 results set startIndex=0 and count=1000. To return the next 1000 results, set startIndex=1000 and count=1000, and so on. Defaults to max page size(1000).
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandSafetyRequestResultsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/brandSafety/{requestId}/status:
    get:
      tags:
      - Brand Safety List
      summary: Gets the status of the given request
      description: |
        When a user modifies their Brand Safety Deny List, the request is processed asynchronously, and a requestId is provided to the user. This requestId can be used to check the status of the request for up to 90 days from when the request was submitted.
      operationId: getRequestStatus
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: requestId
        in: path
        description: The ID of the request previously submitted.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandSafetyRequestStatusResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/brandSafety/status:
    get:
      tags:
      - Brand Safety List
      summary: List status of all requests
      description: |
        List status of all Brand Safety List requests. The list will contain requests that were submitted in the past 90 days.
      operationId: listRequestStatus
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandSafetyListRequestStatusResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/targets/bid/recommendations:
    post:
      tags:
      - Bid Recommendations
      summary: Returns a set of bid recommendations for targeting clauses
      description: |-
        Provides a list of bid recommendations based on the list of input advertised ASINs and targeting clauses in the same format as the targeting API. For each targeting clause in the request a corresponding bid recommendation will be returned in the response. Currently the API will accept up to 100 targeting clauses. Note - these recommendations are only available when productAds have ASIN or SKU fields.
        This API provides a corresponding bid recommendation for each targeting clause in a request. Currently the API will accept up to 100 targeting clauses.

        For API v3.1, the API provides a list of bid recommendations based on the list of input advertised ASINs and targeting clauses in the same format as the targeting API. Note - these recommendations are only available when productAds have ASIN or SKU fields.

        For API v3.2, the API accepts optimizationType and costType and returns bid recommendations accordingly.

        For API v3.3, the API accepts creativeType and returns bid recommendations accordingly.

        [PREVIEW ONLY] For API v3.4, the API supports entertainment targeting bid recommendations which is currently limited to US marketplace.

        The recommended bids are derived from the last 7 days of winning auction bids for the related targeting clause.


        Receive bid recommendations using the following:
        Contextual targeting clause|Description|
        |-----------|----|
        |asinSameAs=B0123456789|Receive a bid recommendation for this target product
        |asinCategorySameAs=12345|Receive a bid recommendation for this target category
        |similarProduct|Receive a bid recommendation for targets that are similar to the advertised asins.


        Audience targeting clause|Description|
        |-----------|----|
        |views(asinCategorySameAs=12345 lookback=30)|Receive a bid recommendation for a target audience that has viewed products in the given category
        |views(similarProduct lookback=30)|Receive a bid recommendation for a target audience that has viewed similar products to the advertised asins
        |views(exactProduct lookback=30)|Receive a bid recommendation for a target audience that has viewed the advertised asins
        |purchases(asinCategorySameAs=12345 lookback=30)|Receive a bid recommendation for a target audience that has purchased products in the given category
        |purchases(exactProduct lookback=30)|Receive a bid recommendation for a target audience that has purchased the advertised asins
        |purchases(relatedProduct lookback=30)|Receive a bid recommendation for a target audience that has purchased related products to the advertised asins
        |audience(audienceSameAs=12345)|Receive a bid recommendation for the given target audience

        | Content targeting clause | Description |
        |------------------|-------------|
        | [PREVIEW ONLY] contentCategorySameAs=amzn1.iab-content.325 | Receive a bid recommendation for the given content target |


        #### Notes:
        - Refinements are currently not supported and if included will not impact the bid recommendation for the target.


        #### Advertised ASIN Notes:
        - For asinSameAs targets the advertised asins will not impact the bid recommendation
        - For asinCategorySameAs targets the advertised asins are optional, but including them will provide a more refined bid recommendation
        - For similarProduct, exactProduct, and relatedProduct targets the advertised asins are required
      operationId: getTargetBidRecommendations
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/vnd.sdtargetingrecommendations.v3.4+json:
            schema:
              $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV34'
          application/vnd.sdtargetingrecommendations.v3.3+json:
            schema:
              $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV33'
          application/vnd.sdtargetingrecommendations.v3.2+json:
            schema:
              $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV32'
          application/vnd.sdtargetingrecommendations.v3.1+json:
            schema:
              $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV31'
      responses:
        "207":
          description: multi-status
          content:
            application/vnd.sdtargetingrecommendations.v3.3+json:
              schema:
                $ref: '#/components/schemas/SDTargetingBidRecommendationsResponseV32'
            application/vnd.sdtargetingrecommendations.v3.2+json:
              schema:
                $ref: '#/components/schemas/SDTargetingBidRecommendationsResponseV32'
            application/vnd.sdtargetingrecommendations.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDTargetingBidRecommendationsResponseV31'
        "400":
          description: Generic bad request error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDErrorResponse'
  /sd/recommendations/creative/headline:
    post:
      tags:
      - Headline Recommendations
      description: |-
        You can use this Sponsored Display API to retrieve creative headline recommendations from an array of ASINs.

        **Requires one of these permissions**:
        ["advertiser_campaign_view"]
      operationId: getHeadlineRecommendationsForSD
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request body for SD headline recommendations API.
        content:
          application/vnd.sdheadlinerecommendationrequest.v4.0+json:
            schema:
              $ref: '#/components/schemas/SDHeadlineRecommendationRequest'
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/vnd.sdheadlinerecommendationresponse.v4.0+json:
              schema:
                $ref: '#/components/schemas/SDHeadlineRecommendationResponse'
        "400":
          description: SchemaValidationException 400 response.
          content:
            application/vnd.sdheadlinerecommendationschemavalidationexception.v4.0+json:
              schema:
                $ref: '#/components/schemas/SDHeadlineRecommendationSchemaValidationException'
        "403":
          description: AccessDeniedException 403 response.
          content:
            application/vnd.sdheadlinerecommendationaccessdeniedexception.v4.0+json:
              schema:
                $ref: '#/components/schemas/SDHeadlineRecommendationAccessDeniedException'
        "404":
          description: IdentifierNotFoundException 404 response.
          content:
            application/vnd.sdheadlinerecommendationidentifiernotfoundexception.v4.0+json:
              schema:
                $ref: '#/components/schemas/SDHeadlineRecommendationIdentifierNotfoundException'
        "429":
          description: ThrottlingException 429 response.
          content:
            application/vnd.sdheadlinerecommendationthrottlingexception.v4.0+json:
              schema:
                $ref: '#/components/schemas/SDHeadlineRecommendationMarsThrottlingException'
        "500":
          description: InternalServerException 500 response.
          content:
            application/vnd.sdheadlinerecommendationinternalserverexception.v4.0+json:
              schema:
                $ref: '#/components/schemas/SDHeadlineRecommendationInternalServerException'
  /sd/optimizationRules:
    get:
      tags:
      - Optimization Rules (beta)
      summary: Gets a list of optimization rules.
      description: Gets an array of OptimizationRule objects for a requested set of
        Sponsored Display optimization rules.
      operationId: listOptimizationRules
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: "Optional. Sets a cursor into the requested set of optimization\
          \ rules. Use in conjunction with the `count` parameter to control pagination\
          \ of the returned array. 0-indexed record offset for the result set, defaults\
          \ to 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: "Optional. Sets the number of OptimizationRule objects in the\
          \ returned array. Use in conjunction with the `startIndex` parameter to\
          \ control pagination. For example, to return the first ten optimization\
          \ rules set `startIndex=0` and `count=10`. To return the next ten optimization\
          \ rules, set `startIndex=10` and `count=10`, and so on. Defaults to max\
          \ page size."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: |-
          Optional. The returned array is filtered to include only optimization rules with state set to one of the values in the specified comma-delimited list.
          Available values:
            - enabled
            - paused [COMING LATER]
            - enabled, paused [COMING LATER]
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: enabled
      - name: name
        in: query
        description: Optional. The returned array includes only optimization rules
          with the specified name using an exact string match.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: optimizationRuleIdFilter
        in: query
        description: |-
          Optional. The returned array is filtered to include only optimization rules associated with the optimization rule identifiers in the specified comma-delimited list.

          Maximum size limit 50.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: adGroupIdFilter
        in: query
        description: |-
          Optional. The returned array is filtered to include only optimization rules associated with the ad group identifiers in the comma-delimited list.

          Maximum size limit 50.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptimizationRule'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Optimization Rules (beta)
      summary: Updates one or more optimization rules.
      operationId: updateOptimizationRules
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "An array of OptimizationRule objects. For each object, specify\
          \ an optimization rule identifier and mutable fields with their updated\
          \ values. The mutable fields are `ruleName`, `state`, and `ruleConditions`."
        content:
          application/json:
            schema:
              maxItems: 100
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/UpdateOptimizationRule'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptimizationRuleResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Optimization Rules (beta)
      summary: "Creates one or more optimization rules, also known as outcome optimizations."
      description: "\n* When an optimization rule is associated to an ad group, manual\
        \ bids for individual targets will be overridden.\n* Optimization rules can\
        \ only be associated to ad groups that have productAds with ASIN or SKU.\n\
        * We may add targets while your campaign is running to try to stay at or below\
        \ a cost per order value you have specified.\n* Only one optimization rule\
        \ can be associated per adGroup. \n* If you are using optimization rules,\
        \ the following campaign budget must be at least:\n  - 5x the value of any\
        \ COST_PER_ORDER threshold.\n  - 10x the value of any COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS\
        \ threshold.\n  - 20x the value of any COST_PER_CLICK threshold."
      operationId: createOptimizationRules
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "An array of OptimizationRule objects. For each object, specify\
          \ required fields and their values. Required fields are `state` and `ruleConditions`."
        content:
          application/json:
            schema:
              maxItems: 100
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/CreateOptimizationRule'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptimizationRuleResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/optimizationRules/{optimizationRuleId}:
    get:
      tags:
      - Optimization Rules (beta)
      summary: Gets a requested optimization rule.
      description: Gets an OptimizationRule object for a requested Sponsored Display
        optimization rule.
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: optimizationRuleId
        in: path
        description: The identifier of the requested optimization rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationRule'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/adGroups/{adGroupId}/optimizationRules:
    get:
      tags:
      - Optimization Rules (beta)
      summary: Gets a list of optimization rules associated to an adgroup specified
        by identifier.
      description: Gets an OptimizationRule object for a requested Sponsored Display
        optimization rule.
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adGroupId
        in: path
        description: The identifier of the ad group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptimizationRule'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found - Requested resource does not exist or is not visible
            for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Optimization Rules (beta)
      summary: Associate one or more optimization rules to an ad group specified by
        identifier.
      description: |2-

        * When an optimization rule is associated to an ad group, manual bids for individual targets will be overridden.
        * Only one optimization rule can be associated per adGroup. This note will be removed when multiple rules are supported per adGroup.
      operationId: associateOptimizationRulesWithAdGroup
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adGroupId
        in: path
        description: The identifier of the ad group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: |-
          A list of optimization rule identifiers. Only one optimization rule identifier is currently supported per request. This note will be removed when multiple rule identifiers are supported.

          For each ad group, only one optimization rule metric name is supported, based on the ad group's `bidOptimization` type. Refer to the following table for the metric names supported for each type.
          |  AdGroup.bidOptimization |     Supported OptimizationRule.metricName       |
          |------------------|--------------------|
          |   reach       | COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS  |
          |   clicks      | COST_PER_CLICK          |
          |  conversions  | COST_PER_ORDER          |
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssociatedOptimizationRulesRequest'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptimizationRuleResponse'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/adGroups/{adGroupId}/optimizationRules/disassociate:
    post:
      tags:
      - Optimization Rules (beta)
      summary: Disassociate one or more optimization rules from an ad group specified
        by identifier.
      description: |2-

        * Only one optimization rule can be disassociated per adGroup. This note will be removed when multiple rules are supported per adGroup.
        * When an optimization rule is disassociated from an ad group, you can set the manual bids for the individual targets under the adGroup.
      operationId: disassociateOptimizationRulesFromAdGroup
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adGroupId
        in: path
        description: The identifier of the ad group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: A list of optimization rule identifiers. Only one optimization
          rule identifier is currently supported per request. This note will be removed
          when multiple rule identifiers are supported.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssociatedOptimizationRulesRequest'
        required: false
      responses:
        "207":
          description: Multi-status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationRuleAssociationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/forecasts:
    post:
      tags:
      - Forecasts
      summary: Return forecasts for an ad group that may or may not exist.
      description: Returns forecasts for a given ad group specified in SD forecast
        request.
      operationId: createSDForecast
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/vnd.sdforecasts.v3.1+json:
            schema:
              $ref: '#/components/schemas/SDForecastRequest'
      responses:
        "200":
          description: Successful operation.
          content:
            application/vnd.sdforecasts.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDForecastResponse'
        "400":
          description: Bad Request.
          content:
            application/vnd.sdforecasts.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDForecastErrorResponse'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/vnd.sdforecasts.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDForecastErrorResponse'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/vnd.sdforecasts.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDForecastErrorResponse'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/vnd.sdforecasts.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDForecastErrorResponse'
        "500":
          description: Internal Server Error. Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/vnd.sdforecasts.v3.1+json:
              schema:
                $ref: '#/components/schemas/SDForecastErrorResponse'
  /sd/budgetRules/{budgetRuleId}:
    get:
      tags:
      - Budget Rules
      summary: Gets a budget rule specified by identifier.
      operationId: GetBudgetRuleByRuleIdForSDCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: budgetRuleId
        in: path
        description: The budget rule identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSDBudgetRuleResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server Error. Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
  /sd/budgetRules:
    get:
      tags:
      - Budget Rules
      summary: Get all budget rules created by an advertiser
      operationId: GetSDBudgetRulesForAdvertiser
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextToken
        in: query
        description: "To retrieve the next page of results, call the same operation\
          \ and specify this token in the request. If the `nextToken` field is empty,\
          \ there are no further results."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Sets a limit on the number of results returned. Maximum limit
          of `pageSize` is 30.
        required: true
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSDBudgetRulesForAdvertiserResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server Error. Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
    put:
      tags:
      - Budget Rules
      summary: Update one or more budget rules.
      operationId: UpdateBudgetRulesForSDCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSDBudgetRulesRequest'
        required: true
      responses:
        "207":
          description: Multi-status. An object containing a list of budget rule response
            objects reflecting the same order as the input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBudgetRulesResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server BudgetRuleError - Something went wrong on the
            server. Retry later and report an BudgetRuleError if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
    post:
      tags:
      - Budget Rules
      summary: Creates one or more budget rules.
      operationId: CreateBudgetRulesForSDCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSDBudgetRulesRequest'
        required: true
      responses:
        "207":
          description: Multi-status. An object containing a list of budget rule response
            objects reflecting the same order as the input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBudgetRulesResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server BudgetRuleError - Something went wrong on the
            server. Retry later and report an BudgetRuleError if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
  /sd/budgetRules/{budgetRuleId}/campaigns:
    get:
      tags:
      - Budget Rules
      summary: Gets all the campaigns associated with a budget rule
      operationId: GetCampaignsAssociatedWithSDBudgetRule
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: budgetRuleId
        in: path
        description: The budget rule identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextToken
        in: query
        description: "To retrieve the next page of results, call the same operation\
          \ and specify this token in the request. If the `nextToken` field is empty,\
          \ there are no further results."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Sets a limit on the number of results returned. Maximum limit
          of `pageSize` is 30.
        required: true
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDGetAssociatedCampaignsResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server Error. Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
  /sd/campaigns/{campaignId}/budgetRules/{budgetRuleId}:
    delete:
      tags:
      - Budget Rules
      summary: Disassociates a budget rule specified by identifier from a campaign
        specified by identifier.
      operationId: DisassociateAssociatedBudgetRuleForSDCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: campaignId
        in: path
        description: The campaign identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: int64
      - name: budgetRuleId
        in: path
        description: The budget rule identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateAssociatedBudgetRuleResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server Error. Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
  /sd/campaigns/{campaignId}/budgetRules:
    get:
      tags:
      - Budget Rules
      summary: Gets a list of budget rules associated to a campaign specified by identifier.
      description: |-
        **Requires one of these permissions**:
        ["advertiser_campaign_edit","advertiser_campaign_view"]
      operationId: ListAssociatedBudgetRulesForSDCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: campaignId
        in: path
        description: The campaign identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: int64
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDListAssociatedBudgetRulesResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server Error. Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
    post:
      tags:
      - Budget Rules
      summary: Associates one or more budget rules to a campaign specified by identifer.
      description: A maximum of 250 rules can be associated to a campaign. Note that
        the name of each rule associated to a campaign is required to be unique.
      operationId: CreateAssociatedBudgetRulesForSDCampaigns
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: campaignId
        in: path
        description: The campaign identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssociatedBudgetRulesRequest'
        required: true
      responses:
        "207":
          description: Multi-status. An object containing a list of associated budget
            rule response objects reflecting the same order as the input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssociatedBudgetRulesResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
        "500":
          description: Internal Server Error. Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetRuleError'
  /sd/campaigns/budget/usage:
    post:
      tags:
      - Budget Usage
      summary: Budget usage API for SD campaigns
      description: |-
        **Requires one of these permissions**:
        ["advertiser_campaign_edit","advertiser_campaign_view"]
      operationId: sdCampaignsBudgetUsage
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account. This is a required header for advertisers and integrators using
          the Advertising API.
        required: true
        style: simple
        explode: false
        schema: {}
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header. This is a required
          header for advertisers and integrators using the Advertising API.
        required: true
        style: simple
        explode: false
        schema: {}
      requestBody:
        content:
          application/vnd.sdcampaignbudgetusage.v1+json:
            schema:
              $ref: '#/components/schemas/BudgetUsageCampaignRequest'
      responses:
        "207":
          description: Multi-status. An object containing a list of budget usage response
            objects reflecting the same order as the input.
          content:
            application/vnd.sdcampaignbudgetusage.v1+json:
              schema:
                $ref: '#/components/schemas/BudgetUsageCampaignResponse'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetUsageError'
        "401":
          description: Unauthorized. The request failed because the user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetUsageError'
        "403":
          description: Forbidden. The request failed because user does not have access
            to a specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetUsageError'
        "422":
          description: "Unprocessable entity. The server understood the request, but\
            \ was unable to process the instruction."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetUsageError'
        "429":
          description: Too Many Requests. The request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetUsageError'
        "500":
          description: Internal Server BudgetUsageError - Something went wrong on
            the server. Retry later and report an BudgetUsageError if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetUsageError'
  /sd/locations:
    get:
      tags:
      - Locations (beta)
      summary: Gets a list of locations associated with ad groups.
      description: "Gets a list of Sponsored Display Location objects. This resource\
        \ is not available when productAds have ASIN or SKU fields and only available\
        \ for advertisers that do not sell products on Amazon. See [Developer Guide](https://advertising.amazon.com/API/docs/en-us/guides/sponsored-display/non-amazon-sellers/get-started)"
      operationId: listLocations
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startIndex
        in: query
        description: Optional. 0-indexed record offset for the result set. Defaults
          to 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        description: Optional. Number of records to include in the paged response.
          Defaults to max page size.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stateFilter
        in: query
        description: "Optional. Restricts results to those with state within the specified\
          \ comma-separated list. Must be one of: `enabled`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: enabled
          enum:
          - enabled
      - name: adGroupIdFilter
        in: query
        description: Optional list of comma separated adGroupIds. Restricts results
          to locations with the specified `adGroupId`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: campaignIdFilter
        in: query
        description: Optional list of comma separated campaignIds. Restricts results
          to locations with the specified `campaignId`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Locations (beta)
      summary: Creates one or more locations associated with an ad group.
      description: "This resource is not available when productAds have ASIN or SKU\
        \ fields and only available for advertisers that do not sell products on Amazon.\
        \   See [Developer Guide](https://advertising.amazon.com/API/docs/en-us/guides/sponsored-display/non-amazon-sellers/get-started)\n\
        \nLocations optimize Ad Groups for delivery to users that have an association\
        \ with those locations. For example,\nan Ad Group might contain the following:\
        \ \n- A Targeting Clause representing an audience of users that viewed a shoe\
        \ \n- A Location representing Seattle, Washington, USA.\n- A Location representing\
        \ New York, New York, USA.\nIn this case, delivery of the Targeting Clause\
        \ will be optimized for New York and Seattle.\n\n\nYou can discover predefined\
        \ Locations to use in your ad group by calling the GET /locations API. The\
        \ table below lists \nseveral example Locations.\n| Location | Description\
        \ |\n|---------------------------|-------------|\n| location=amzn1.ad-geo.XHvCjcKHXsKUwos=\
        \ | Optimize the ad group for the specified location (either a 'city', 'state',\
        \ 'dma', 'postal code', or 'country').|\n\nUsing locations is optional. "
      operationId: createLocations
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: A list of up to 100 Locations for creation for each call.  1000
          locations can be added for each ad group.
        content:
          application/json:
            schema:
              maxItems: 20
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/CreateLocation'
        required: false
      responses:
        "200":
          description: An array of Locations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            a-pplication/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sd/locations/delete:
    post:
      tags:
      - Locations (beta)
      summary: Sets the `state` of each Location clause given to `archived`.
      description: |-
        This is a bulk operation that accepts up to a limit of 1000 Location Expression Ids at a time.
        This deletion operation is equivalent to using the `updateTargetingClauses` operation to set the `state` property of a Location clause to `archived`.
      operationId: archiveLocations
      parameters:
      - name: Amazon-Advertising-API-ClientId
        in: header
        description: The identifier of a client associated with a "Login with Amazon"
          account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Amazon-Advertising-API-Scope
        in: header
        description: The identifier of a profile associated with the advertiser account.
          Use `GET` method on Profiles resource to list profiles associated with the
          access token passed in the HTTP Authorization header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: A list of up to 1000 Location Expression Ids for archival.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveLocationRequest'
        required: true
      responses:
        "207":
          description: An array response containing a response for each Location Expression
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArchiveLocationResponse'
                x-content-type: application/json
        "400":
          description: "Bad Request - Request failed because payload is empty, includes\
            \ invalid types, or exceeds batch limit."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized - Request failed because user is not authenticated
            or is not allowed to invoke the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden - Request failed because user does not have access
            to a specified resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: "Unprocessable Entity - Request was understood, but contained\
            \ invalid parameters"
          content:
            a-pplication/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests - Request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error - Something went wrong on the server.
            Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    TacticReport:
      type: string
      description: |-
        The advertising tactic associated with the campaign. The following table lists available tactic names:
        |Tactic Name|Type|Description|
        |-----------|-----|-----------|
        |T00020     |Contextual targeting | Choose individual products to show your ads in placements related to those products.<br> Choose individual categories to show your ads in placements related to those categories on and off Amazon.|
        |T00030     |Audiences or Contextual Targeting | Select individual products, categories, refined categories, or audiences to show your ads.|
      example: T00030
      enum:
      - T00020
      - T00030
    Segment:
      type: string
      description: |-
        Optional. A dimension used to further segment certain types of reports.

        Note: matchedTarget reports only return targets that have generated at least one click.
        | Dimension | Report types | Tactics | Metrics | Description |
        |---------|------------------|-------------|-------------|------------|
        | matchedTarget | campaigns, adGroups, targets | T00020, T00030 | Existing metrics for each report type are accepted. |  Segments a report based on the ASIN of the product page where the ad appeared.|
      example: matchedTarget
      enum:
      - matchedTarget
    Tactic:
      type: string
      description: |-
        The advertising tactic associated with the campaign. The following table lists available tactic names:
        |Tactic Name|Type|Description|
        |-----------|-----|-----------|
        |T00020     |Contextual targeting | Choose individual products to show your ads in placements related to those products.<br> Choose individual categories to show your ads in placements related to those categories on and off Amazon.|
        |T00030     |Audiences or Contextual Targeting | Select individual products, categories, refined categories, or audiences to show your ads.|
      example: T00030
      enum:
      - T00020
      - T00030
    CreativeType:
      type: string
      description: |-
        The type of the associated creative. If the field is empty or null, a default value of IMAGE will be used. One ad group only supports one type (VIDEO or IMAGE) of creativeType at a time.
        |Name|Description|
        |----|-----------|
        |IMAGE |The creative will display static assets (e.g. headline, brandLogo or custom image).|
        |VIDEO |The creative will display video assets. This type of creative must have a video asset provided. Only supported when using productAds with ASIN or SKU.|
      nullable: true
      enum:
      - IMAGE
      - VIDEO
      example: null
    BaseCampaign:
      type: object
      properties:
        name:
          type: string
          description: The name of the campaign.
        budgetType:
          type: string
          description: The time period over which the amount specified in the `budget`
            property is allocated.
          enum:
          - daily
        budget:
          type: number
          description: The amount of the budget.
          format: double
          example: 3.00
        startDate:
          type: string
          description: The YYYYMMDD start date of the campaign. The date must be today
            or in the future.
          example: "20190101"
        endDate:
          type: string
          description: The YYYYMMDD end date of the campaign.
          nullable: true
          example: null
        costType:
          type: string
          description: |-
            Determines how the campaign will bid and charge.
            |Name|Description|
            |----|----------|
            |cpc |[Default] The performance of this campaign is measured by the clicks triggered by the ad.|
            |vcpm |The performance of this campaign is measured by the viewed impressions triggered by the ad. |

            To view minimum and maximum bids based on the costType, see [Limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
          enum:
          - cpc
          - vcpm
        state:
          type: string
          description: The state of the campaign.
          enum:
          - enabled
          - paused
          - archived
        portfolioId:
          type: integer
          description: Identifier of the portfolio that will be associated with the
            campaign. If null then the campaign will be disassociated from existing
            portfolio. Campaigns with CPC and vCPM costType are supported.
          format: int64
          nullable: true
          example: null
    Campaign:
      allOf:
      - $ref: '#/components/schemas/BaseCampaign'
      - type: object
        properties:
          campaignId:
            $ref: '#/components/schemas/CampaignId'
          tactic:
            $ref: '#/components/schemas/Tactic'
          deliveryProfile:
            type: string
            enum:
            - as_soon_as_possible
          ruleBasedBudget:
            $ref: '#/components/schemas/RuleBasedBudget'
    CreateCampaign:
      allOf:
      - $ref: '#/components/schemas/BaseCampaign'
      - type: object
        properties:
          tactic:
            $ref: '#/components/schemas/Tactic'
    UpdateCampaign:
      required:
      - campaignId
      allOf:
      - $ref: '#/components/schemas/BaseCampaign'
      - type: object
        properties:
          campaignId:
            $ref: '#/components/schemas/CampaignId'
    CampaignId:
      type: integer
      description: The identifier of the campaign.
      format: int64
    CampaignResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        description:
          type: string
          description: A human-readable description of the response.
        campaignId:
          $ref: '#/components/schemas/CampaignId'
      example:
        code: code
        campaignId: 0
        description: description
    CampaignResponseEx:
      type: object
      properties:
        campaignId:
          type: number
          description: The identifier of the campaign.
        name:
          type: string
          description: The name of the campaign.
        tactic:
          $ref: '#/components/schemas/Tactic'
        budgetType:
          type: string
          description: The time period over which the amount specified in the `budget`
            property is allocated.
          enum:
          - daily
        budget:
          type: number
          description: The amount of the budget.
          format: double
        startDate:
          type: string
          description: The YYYYMMDD start date of the campaign. The date must be today
            or in the future.
        endDate:
          type: string
          description: The YYYYMMDD end date of the campaign.
        state:
          type: string
          description: The state of the campaign.
          enum:
          - enabled
          - paused
          - archived
        portfolioId:
          type: integer
          description: Identifier of the portfolio that will be associated with the
            campaign. If null then the campaign will be disassociated from existing
            portfolio. Campaigns with CPC and vCPM costType are supported.
          format: int64
        servingStatus:
          type: string
          description: The status of the campaign.
          enum:
          - ADVERTISER_STATUS_ENABLED
          - STATUS_UNAVAILABLE
          - ADVERTISER_PAUSED
          - ACCOUNT_OUT_OF_BUDGET
          - ADVERTISER_PAYMENT_FAILURE
          - CAMPAIGN_PAUSED
          - CAMPAIGN_ARCHIVED
          - PENDING_START_DATE
          - ENDED
          - CAMPAIGN_OUT_OF_BUDGET
          - ADVERTISER_EXCEED_SPENDS_LIMIT
          - AD_POLICING_PENDING_REVIEW
          - CAMPAIGN_INCOMPLETE
          - INELIGIBLE
          - PORTFOLIO_ENDED
          - PORTFOLIO_OUT_OF_BUDGET
          - ADVERTISER_ARCHIVED
          - ADVERTISER_ACCOUNT_OUT_OF_BUDGET
        costType:
          type: string
          description: |-
            Determines how the campaign will bid and charge.
            |Name|Description|
            |----|----------|-----------|
            |cpc |[Default] The performance of this campaign is measured by the clicks triggered by the ad.|
            |vcpm|The performance of this campaign is measured by the viewed impressions triggered by the ad. $1 is the minimum bid for vCPM.|
          enum:
          - cpc
          - vcpm
        creationDate:
          type: integer
          description: Epoch date the campaign was created.
          format: int64
        lastUpdatedDate:
          type: integer
          description: Epoch date of the last update to any property associated with
            the campaign.
          format: int64
        ruleBasedBudget:
          $ref: '#/components/schemas/RuleBasedBudget'
      example:
        budgetType: daily
        ruleBasedBudget:
          isProcessing: true
          applicableRuleName: applicableRuleName
          value: 2.3021358869347655
          applicableRuleId: applicableRuleId
        endDate: endDate
        campaignId: 0.8008281904610115
        creationDate: 5
        tactic: T00030
        lastUpdatedDate: 5
        portfolioId: 1
        servingStatus: ADVERTISER_STATUS_ENABLED
        costType: cpc
        name: name
        state: enabled
        startDate: startDate
        budget: 6.027456183070403
    BaseAdGroup:
      type: object
      properties:
        name:
          type: string
          description: The name of the ad group.
        campaignId:
          $ref: '#/components/schemas/CampaignId'
        defaultBid:
          type: number
          description: The amount of the default bid associated with the ad group.
            Used if no bid is specified.
          format: double
        bidOptimization:
          type: string
          description: |-
            Bid Optimization for the Adgroup. Default behavior is to optimize for clicks.
            |Name|CostType|Description|
            |----|--------|-----------|
            |reach |vcpm|Optimize for viewable impressions. $1 is the minimum bid for vCPM.|
            |clicks |cpc|[Default] Optimize for page visits.|
            |conversions |cpc|Optimize for conversion.|
          enum:
          - reach
          - clicks
          - conversions
        state:
          type: string
          description: The state of the ad group.
          enum:
          - enabled
          - paused
          - archived
    AdGroupId:
      type: integer
      description: The identifier of the ad group.
      format: int64
    AdGroup:
      allOf:
      - $ref: '#/components/schemas/BaseAdGroup'
      - type: object
        properties:
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          tactic:
            $ref: '#/components/schemas/Tactic'
          creativeType:
            $ref: '#/components/schemas/CreativeType'
    CreateAdGroup:
      required:
      - campaignId
      - name
      - state
      allOf:
      - $ref: '#/components/schemas/BaseAdGroup'
      - type: object
        properties:
          creativeType:
            $ref: '#/components/schemas/CreativeType'
    UpdateAdGroup:
      required:
      - adGroupId
      allOf:
      - $ref: '#/components/schemas/BaseAdGroup'
      - type: object
        properties:
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
    AdGroupResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        description:
          type: string
          description: A human-readable description of the response.
        adGroupId:
          $ref: '#/components/schemas/AdGroupId'
      example:
        code: code
        description: description
        adGroupId: 0
    AdGroupResponseEx:
      type: object
      properties:
        adGroupId:
          type: number
          description: The identifier of the ad group.
        name:
          type: string
          description: The name of the ad group.
        campaignId:
          type: number
          description: The identifier of the campaign that this ad group is associated
            with.
        defaultBid:
          type: number
          description: The amount of the default bid associated with the ad group.
            Used if no bid is specified.
          format: double
        state:
          type: string
          description: The delivery state of the ad group.
          enum:
          - enabled
          - paused
          - archived
        tactic:
          $ref: '#/components/schemas/Tactic'
        creativeType:
          $ref: '#/components/schemas/CreativeTypeInCreativeResponse'
        servingStatus:
          type: string
          description: The status of the ad group.
          enum:
          - ADVERTISER_STATUS_ENABLED
          - STATUS_UNAVAILABLE
          - ADVERTISER_PAUSED
          - ACCOUNT_OUT_OF_BUDGET
          - ADVERTISER_PAYMENT_FAILURE
          - CAMPAIGN_PAUSED
          - CAMPAIGN_ARCHIVED
          - PENDING_START_DATE
          - ENDED
          - CAMPAIGN_OUT_OF_BUDGET
          - AD_GROUP_STATUS_ENABLED
          - AD_GROUP_PAUSED
          - AD_GROUP_ARCHIVED
          - AD_GROUP_INCOMPLETE
          - AD_GROUP_LOW_BID
          - ADGROUP_POLICING_PENDING_REVIEW
          - ADGROUP_POLICING_CREATIVE_REJECTED
          - ADVERTISER_EXCEED_SPENDS_LIMIT
          - AD_POLICING_PENDING_REVIEW
          - CAMPAIGN_INCOMPLETE
          - INELIGIBLE
          - PORTFOLIO_ENDED
          - PORTFOLIO_OUT_OF_BUDGET
          - ADVERTISER_ARCHIVED
          - ADVERTISER_ACCOUNT_OUT_OF_BUDGET
        bidOptimization:
          type: string
          description: |-
            Bid optimization type for the Adgroup. Default behavior is to optimize for clicks. Note, reach, clicks are only accepted with productAds that include landingPageURL OFF_AMAZON_LINK.
            |Name|CostType|Description|
            |----|--------|-----------|
            |reach|vcpm|Optimize for viewable impressions. $1 is the minimum bid for vCPM.|
            |clicks [Default]|cpc|Optimize for page visits.|
            |conversions|cpc|Optimize for conversion.|
          enum:
          - reach
          - clicks
          - conversions
        creationDate:
          type: integer
          description: Epoch time the ad group was created.
          format: int64
        lastUpdatedDate:
          type: integer
          description: Epoch time any property in the ad group was last updated.
          format: int64
      description: Object containing an extended set of data fields for an Ad Group.
      example:
        bidOptimization: reach
        lastUpdatedDate: 5
        creativeType: IMAGE
        servingStatus: ADVERTISER_STATUS_ENABLED
        campaignId: 6.027456183070403
        name: name
        state: enabled
        creationDate: 5
        adGroupId: 0.8008281904610115
        defaultBid: 1.4658129805029452
        tactic: T00030
    BaseProductAd:
      type: object
      properties:
        state:
          type: string
          description: The state of the campaign associated with the product ad.
          enum:
          - enabled
          - paused
          - archived
    ProductAd:
      allOf:
      - $ref: '#/components/schemas/BaseProductAd'
      - type: object
        properties:
          adId:
            $ref: '#/components/schemas/AdId'
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          campaignId:
            $ref: '#/components/schemas/CampaignId'
          landingPageURL:
            $ref: '#/components/schemas/LandingPageURL'
          landingPageType:
            $ref: '#/components/schemas/LandingPageType'
          adName:
            $ref: '#/components/schemas/AdName'
          asin:
            type: string
            description: The Amazon ASIN of the product advertised by the product
              ad. This parameter is included in the response for sellers and vendors.
          sku:
            type: string
            description: The Amazon SKU of the product advertised by the product ad.
              This parameter is included in the response for sellers.
    CreateProductAd:
      required:
      - adGroupId
      - campaignId
      - state
      allOf:
      - $ref: '#/components/schemas/BaseProductAd'
      - type: object
        properties:
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          campaignId:
            $ref: '#/components/schemas/CampaignId'
          landingPageURL:
            $ref: '#/components/schemas/LandingPageURL'
          landingPageType:
            $ref: '#/components/schemas/LandingPageType'
          adName:
            $ref: '#/components/schemas/AdName'
          asin:
            type: string
            description: The ASIN of the product advertised by the product ad. Defined
              for vendors only.
          sku:
            type: string
            description: The SKU of the product advertised by the product ad. Defined
              for seller accounts only.
    UpdateProductAd:
      required:
      - adId
      allOf:
      - $ref: '#/components/schemas/BaseProductAd'
      - type: object
        properties:
          adId:
            $ref: '#/components/schemas/AdId'
    AdId:
      type: integer
      description: The identifier of the product ad.
      format: int64
    LandingPageURL:
      type: string
      description: |-
        The URL where customers will land after clicking on its link. Must be provided if a LandingPageType is set. Please note that if a single product ad sets the landing page url, only one product ad can be added to the ad group. This field is not supported when using ASIN or SKU fields.
        ||Specifications|
        |------------------|------------------|
        |LandingPageType| Description|
        |STORE| The url should be in the format of https://www.amazon.com/stores/* (using a correct Amazon url based on the marketplace)|
        |OFF_AMAZON_LINK| The url should be in the format of https://www.****.com. Note that this LandingPageType is not supported when using ASIN or SKU fields. A custom creative of headline, logo, image are require for this LandingPageType. |
        |MOMENT| Not yet supported. The url should be in the format of https://www.amazon.com/moments/promotion/{campaignId} (using a correct Amazon url based on the marketplace)|
    LandingPageType:
      type: string
      description: The type of the landingPage used. This field is completely optional
        and will be set in conjunction with the LandingPageURL to indicate the type
        of landing page that will be set. This field is not supported when using ASIN
        or SKU fields.
      enum:
      - STORE
      - MOMENT
      - OFF_AMAZON_LINK
    AdName:
      type: string
      description: The name of the ad. Note that this field is not supported when
        using ASIN or SKU fields.
    ProductAdResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        description:
          type: string
          description: A human-readable description of the response.
        adId:
          type: number
          description: The identifier of the ad.
      example:
        code: code
        adId: 0.8008281904610115
        description: description
    ProductAdResponseEx:
      type: object
      properties:
        adId:
          type: number
          description: The identifier of the ad.
        adGroupId:
          type: number
          description: The identifier of the ad group associated with the ad.
        campaignId:
          type: number
          description: The identifier of the campaign associated with the ad.
        landingPageURL:
          $ref: '#/components/schemas/LandingPageURL'
        landingPageType:
          $ref: '#/components/schemas/LandingPageType'
        adName:
          $ref: '#/components/schemas/AdName'
        asin:
          type: string
          description: The ASIN of the product being advertised. This parameter is
            included in the response for sellers and vendors.
        sku:
          type: string
          description: The SKU of the product being advertised. This parameter is
            included in the response for sellers.
        state:
          type: string
          description: The state of the product ad.
          enum:
          - enabled
          - paused
          - archived
        servingStatus:
          type: string
          description: The status of the product ad.
          enum:
          - ADVERTISER_STATUS_ENABLED
          - STATUS_UNAVAILABLE
          - ADVERTISER_PAUSED
          - ACCOUNT_OUT_OF_BUDGET
          - ADVERTISER_PAYMENT_FAILURE
          - CAMPAIGN_PAUSED
          - CAMPAIGN_ARCHIVED
          - PENDING_START_DATE
          - ENDED
          - CAMPAIGN_OUT_OF_BUDGET
          - AD_GROUP_STATUS_ENABLED
          - AD_GROUP_PAUSED
          - AD_GROUP_ARCHIVED
          - AD_GROUP_INCOMPLETE
          - AD_GROUP_LOW_BID
          - AD_STATUS_LIVE
          - AD_STATUS_PAUSED
          - AD_STATUS_ARCHIVED
          - MISSING_IMAGE
          - MISSING_DECORATION
          - NOT_BUYABLE
          - NOT_IN_BUYBOX
          - OUT_OF_STOCK
          - NOT_IN_POLICY
          - ADVERTISER_EXCEED_SPENDS_LIMIT
          - AD_POLICING_PENDING_REVIEW
          - CAMPAIGN_INCOMPLETE
          - INELIGIBLE
          - PORTFOLIO_ENDED
          - PORTFOLIO_OUT_OF_BUDGET
          - ADVERTISER_ARCHIVED
          - ADVERTISER_ACCOUNT_OUT_OF_BUDGET
        creationDate:
          type: integer
          description: Epoch date the product ad was created.
          format: int64
        lastUpdatedDate:
          type: integer
          description: Epoch date of the last update to any property associated with
            the product ad.
          format: int64
      example:
        adName: adName
        lastUpdatedDate: 5
        adId: 0.8008281904610115
        landingPageType: STORE
        servingStatus: ADVERTISER_STATUS_ENABLED
        campaignId: 1.4658129805029452
        asin: asin
        state: enabled
        sku: sku
        creationDate: 5
        landingPageURL: landingPageURL
        adGroupId: 6.027456183070403
    TargetingPredicate:
      type: object
      properties:
        type:
          type: string
          enum:
          - asinSameAs
          - asinCategorySameAs
          - asinBrandSameAs
          - asinPriceBetween
          - asinPriceGreaterThan
          - asinPriceLessThan
          - asinReviewRatingLessThan
          - asinReviewRatingGreaterThan
          - asinReviewRatingBetween
          - asinIsPrimeShippingEligible
          - asinAgeRangeSameAs
          - asinGenreSameAs
          - similarProduct
        value:
          type: string
          description: The value to be targeted.
          example: B0123456789
      description: |-
        A predicate to match against in the targeting expression (only applicable to contextual targeting - T00020).

        * All IDs passed for category and brand-targeting predicates must be valid IDs in the Amazon Ads browse system.
        * Brand, price, and review predicates are optional and may only be specified if category is also specified.
        * Review predicates accept numbers between 0 and 5 and are inclusive.
        * When using either of the 'between' strings to construct a targeting expression the format of the string is 'double-double' where the first double must be smaller than the second double. Prices are not inclusive.
    ContentTargetingPredicate:
      type: object
      properties:
        type:
          type: string
          enum:
          - contentCategorySameAs
        value:
          type: string
          description: |-
            The value to be targeted.

            The following table shows all possible values of the `contentCategorySameAs` predicate.
            | Category              | Subcategory                             | Value                    |
            |-----------------------|-----------------------------------------|--------------------------|
            | Movies and Television | All Movies and Television               | amzn1.iab-content.SPSHQ5 |
            | Movies and Television | Action or Adventure                     | amzn1.iab-content.325    |
            | Movies and Television | Animation or Anime                      | amzn1.iab-content.641    |
            | Movies and Television | Biographies                             | amzn1.iab-content.44     |
            | Movies and Television | Comedy                                  | amzn1.iab-content.646    |
            | Movies and Television | Documentary                             | amzn1.iab-content.332    |
            | Movies and Television | Drama                                   | amzn1.iab-content.647    |
            | Movies and Television | Factual                                 | amzn1.iab-content.648    |
            | Movies and Television | Family                                  | amzn1.iab-content.645    |
            | Movies and Television | Fantasy                                 | amzn1.iab-content.335    |
            | Movies and Television | History                                 | amzn1.iab-content.EZWB7V |
            | Movies and Television | Holiday                                 | amzn1.iab-content.649    |
            | Movies and Television | Horror                                  | amzn1.iab-content.336    |
            | Movies and Television | Lifestyle                               | amzn1.iab-content.TIFQA5 |
            | Movies and Television | Music Video                             | amzn1.iab-content.650    |
            | Movies and Television | Musicals                                | amzn1.iab-content.156    |
            | Movies and Television | Mystery                                 | amzn1.iab-content.331    |
            | Movies and Television | Reality TV                              | amzn1.iab-content.651    |
            | Movies and Television | Romance                                 | amzn1.iab-content.326    |
            | Movies and Television | Science Fiction                         | amzn1.iab-content.652    |
            | Movies and Television | Soap Opera                              | amzn1.iab-content.642    |
            | Movies and Television | Special Interest (Indie or Art House)   | amzn1.iab-content.643    |
            | Movies and Television | Sports Radio                            | amzn1.iab-content.370    |
            | Movies and Television | Talk Show                               | amzn1.iab-content.A0AH3G |
            | Movies and Television | True Crime                              | amzn1.iab-content.KHPC5A |
            | Movies and Television | Western                                 | amzn1.iab-content.KHPC6A |
            | Music and Radio       | All Music and Radio                     | amzn1.iab-content.338    |
            | Music and Radio       | Blues                                   | amzn1.iab-content.360    |
            | Music and Radio       | Classical Music                         | amzn1.iab-content.346    |
            | Music and Radio       | Comedy (Music and Audio)                | amzn1.iab-content.348    |
            | Music and Radio       | Pop, Contemporary Hits, or Top 40 Music | amzn1.iab-content.349    |
            | Music and Radio       | Country Music                           | amzn1.iab-content.350    |
            | Music and Radio       | Dance and Electronic Music              | amzn1.iab-content.351    |
            | Music and Radio       | Hip Hop Music                           | amzn1.iab-content.355    |
            | Music and Radio       | Inspirational or New Age Music          | amzn1.iab-content.356    |
            | Music and Radio       | Jazz                                    | amzn1.iab-content.357    |
            | Music and Radio       | Oldies or Adult Standards               | amzn1.iab-content.358    |
            | Music and Radio       | R&B, Soul or Funk Music                 | amzn1.iab-content.362    |
            | Music and Radio       | Reggae                                  | amzn1.iab-content.359    |
            | Music and Radio       | Rock Music                              | amzn1.iab-content.363    |
            | Music and Radio       | Songwriters or Folk                     | amzn1.iab-content.353    |
            | Music and Radio       | World or International Music            | amzn1.iab-content.352    |
            | Video Games           | All Video Games                         | amzn1.iab-content.680    |
            | Video Games           | Action-Adventure Games                  | amzn1.iab-content.691    |
            | Video Games           | Casual Games                            | amzn1.iab-content.693    |
            | Video Games           | Puzzle Video Games                      | amzn1.iab-content.698    |
            | Video Games           | Racing Video Games                      | amzn1.iab-content.VK7KD0 |
            | Video Games           | Role-Playing Video Games                | amzn1.iab-content.687    |
            | Video Games           | Simulation Video Games                  | amzn1.iab-content.688    |
            | Video Games           | Sports Video Games                      | amzn1.iab-content.689    |
            | Video Games           | Strategy Video Games                    | amzn1.iab-content.690    |
            | Video Games           | PC Games                                | amzn1.iab-content.684    |
            | Video Games           | Mobile Games                            | amzn1.iab-content.683    |
            | Video Games           | Console Games                           | amzn1.iab-content.681    |
            | Video Games           | eSports                                 | amzn1.iab-content.682    |
          example: amzn1.iab-content.325
      description: A predicate to match against in the content targeting expression.
    TargetingPredicateLegacy:
      type: object
      properties:
        type:
          type: string
          enum:
          - asinSameAs
          - asinCategorySameAs
          - asinBrandSameAs
          - asinPriceBetween
          - asinPriceGreaterThan
          - asinPriceLessThan
          - asinReviewRatingLessThan
          - asinReviewRatingGreaterThan
          - asinReviewRatingBetween
          - similarProduct
          - exactProduct
          - asinIsPrimeShippingEligible
          - asinAgeRangeSameAs
          - asinGenreSameAs
        value:
          type: string
          description: The value to be targeted.
          example: B0123456789
        eventType:
          type: string
          description: |-
            The type of event that the value applies to. Only available for similarProduct and exactProduct currently.
            * views event type corresponds to a customer who viewed the detail page of the product(s).
          enum:
          - views
    TargetingPredicateNested:
      type: object
      properties:
        type:
          type: string
          enum:
          - views
          - audience
          - purchases
        value:
          type: array
          items:
            $ref: '#/components/schemas/TargetingPredicateBase'
      description: |-
        A behavioral event and list of targeting predicates that represents an audience to target (only applicable to audience targeting - T00030).

        * For manual ASIN-grain targeting, the value array must contain only, 'exactProduct', 'similarProduct', 'relatedProduct' and 'lookback' TargetingPredicateBase components. The 'lookback' is mandatory and the value should be set to '7', '14', '30', '60', '90', '180' or '365'.
        * For manual Category-grain targeting, the value array must contain a 'lookback' and 'asinCategorySameAs' TargetingPredicateBase component, which can be further refined with optional brand, price, star-rating and shipping eligibility refinements. The 'lookback' is mandatory and the value should be set to '7', '14', '30', '60', '90', '180' or '365'.
        * For Amazon Audiences targeting, the TargetingPredicateNested type should be set to 'audience' and the value array should include one TargetingPredicateBase component with type set to 'audienceSameAs'.
    TargetingPredicateBase:
      type: object
      properties:
        type:
          type: string
          enum:
          - asinCategorySameAs
          - asinBrandSameAs
          - asinPriceBetween
          - asinPriceGreaterThan
          - asinPriceLessThan
          - asinReviewRatingLessThan
          - asinReviewRatingGreaterThan
          - asinReviewRatingBetween
          - similarProduct
          - exactProduct
          - asinIsPrimeShippingEligible
          - asinAgeRangeSameAs
          - asinGenreSameAs
          - audienceSameAs
          - lookback
          - negative
          - relatedProduct
        value:
          type: string
          description: The value to be targeted.
          example: B0123456789
      description: |-
        A predicate to match against inside the TargetingPredicateNested component (only applicable to audience targeting - T00030).

        * All IDs passed for category and brand-targeting predicates must be valid IDs in the Amazon Ads browse system.
        * Brand, price, and review predicates are optional and may only be specified if category is also specified.
        * Review predicates accept numbers between 0 and 5 and are inclusive.
        * When using either of the 'between' strings to construct a targeting expression the format of the string is 'double-double' where the first double must be smaller than the second double. Prices are not inclusive.
        * The 'exactProduct', 'similarProduct', 'relatedProduct', 'negative', and 'audiencesLikelyInterestedInAd' types do not utilize the value field.
        * The only type currently applicable to Amazon Audiences targeting is 'audienceSameAs'.
        * A 'relatedProduct' TargetingPredicateBase will Target an audience that has purchased a related product in the past 7,14,30,60,90,180, or 365 days.
        * The 'audiencesLikelyInterestedInAd' type is only supported when using landingPageType of OFF_AMAZON_LINK.
    TargetingExpression:
      type: array
      description: |-
        The targeting expression to match against.

        ------- Applicable to contextual or content targeting (T00020) -------
        * A 'TargetingExpression' in a contextual targeting campaign can contain 'TargetingPredicate' or 'ContentTargetingPredicate' components.
        * Contextual expressions must specify either a category predicate or an ASIN predicate, but never both.
        * Only one category may be specified per targeting expression.
        * Only one brand may be specified per targeting expression.
        * Only one asin may be specified per targeting expression.
        * To exclude a brand from a targeting expression you must create a negative targeting expression in the same ad group as the positive targeting expression.

        ------- Applicable to audiences or contextual targeting (T00030) -------
        * A 'TargetingExpression' in a audiences or contextual campaign can contain any target, including 'TargetingPredicate', 'ContentTargetingPredicate', or 'TargetingPredicateNested'.
      items:
        oneOf:
        - $ref: '#/components/schemas/TargetingPredicate'
        - $ref: '#/components/schemas/ContentTargetingPredicate'
        - $ref: '#/components/schemas/TargetingPredicateLegacy'
        - $ref: '#/components/schemas/TargetingPredicateNested'
    CreateTargetingExpression:
      type: array
      description: |-
        The targeting expression to match against.

        ------- Applicable to contextual targeting (T00020) -------
        * A 'TargetingExpression' in a contextual targeting campaign can only contain 'TargetingPredicate' components.
        * Expressions must specify either a category predicate or an ASIN predicate, but never both.
        * Only one category may be specified per targeting expression.
        * Only one brand may be specified per targeting expression.
        * Only one asin may be specified per targeting expression.
        * To exclude a brand from a targeting expression you must create a negative targeting expression in the same ad group as the positive targeting expression.

        ------- Applicable to audiences or contextual targeting (T00030) -------
        * A 'TargetingExpression' in a audiences or contextual campaign can contain any target, including 'TargetingPredicate', 'ContentTargetingPredicate', or 'TargetingPredicateNested'.
      items:
        oneOf:
        - $ref: '#/components/schemas/TargetingPredicate'
        - $ref: '#/components/schemas/ContentTargetingPredicate'
        - $ref: '#/components/schemas/TargetingPredicateNested'
    BaseTargetingClause:
      type: object
      properties:
        state:
          type: string
          enum:
          - enabled
          - paused
          - archived
        bid:
          minimum: 0.02
          type: number
          description: "The bid will override the adGroup bid if specified. This field\
            \ is not used for negative targeting clauses. The bid must be less than\
            \ the maximum allowable bid for the campaign's marketplace; for a list\
            \ of maximum allowable bids, find the [\"Bid constraints by marketplace\"\
            \ table in our documentation overview](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).\
            \ You cannot manually set a bid when the targeting clause's adGroup has\
            \ an enabled optimization rule."
          format: float
          nullable: true
    SDForecastRequestTargetingClause:
      allOf:
      - $ref: '#/components/schemas/BaseTargetingClause'
      - type: object
        properties:
          targetId:
            $ref: '#/components/schemas/TargetId'
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          expressionType:
            type: string
            description: Tactic T00020 & T00030 ad groups should use 'manual' targeting.
            enum:
            - manual
            - auto
          expression:
            $ref: '#/components/schemas/TargetingExpression'
          resolvedExpression:
            $ref: '#/components/schemas/TargetingExpression'
    TargetingClause:
      allOf:
      - $ref: '#/components/schemas/BaseTargetingClause'
      - type: object
        properties:
          targetId:
            $ref: '#/components/schemas/TargetId'
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          campaignId:
            $ref: '#/components/schemas/CampaignId'
          expressionType:
            type: string
            description: Tactic T00020 & T00030 ad groups should use 'manual' targeting.
            enum:
            - manual
            - auto
          expression:
            $ref: '#/components/schemas/TargetingExpression'
          resolvedExpression:
            $ref: '#/components/schemas/TargetingExpression'
    UpdateTargetingClause:
      required:
      - targetId
      allOf:
      - $ref: '#/components/schemas/BaseTargetingClause'
      - type: object
        properties:
          targetId:
            $ref: '#/components/schemas/TargetId'
    CreateTargetingClause:
      required:
      - adGroupId
      - expression
      - expressionType
      example:
        expression:
        - type: views
          value:
          - type: similarProduct
          - type: lookback
            value: "30"
        bid: "1.25"
        adGroupId: 209426065351234
        expressionType: manual
        state: enabled
      allOf:
      - $ref: '#/components/schemas/BaseTargetingClause'
      - type: object
        properties:
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          expressionType:
            type: string
            description: Tactic T00020 ad groups only allow manual targeting.
            enum:
            - manual
            - auto
          expression:
            $ref: '#/components/schemas/CreateTargetingExpression'
    TargetResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        description:
          type: string
          description: A human-readable description of the response.
        targetId:
          $ref: '#/components/schemas/TargetId'
      example:
        code: code
        targetId: 0
        description: description
    TargetingClauseEx:
      type: object
      properties:
        targetId:
          type: number
        adGroupId:
          type: number
        campaignId:
          type: number
        state:
          type: string
          enum:
          - enabled
          - paused
          - archived
        expressionType:
          type: string
          enum:
          - auto
          - manual
        bid:
          type: number
          description: "If a value for `bid` is specified, it overrides the current\
            \ adGroup bid. When using vcpm costType. $1 is the minimum bid for vCPM.\
            \ Note that this field is ignored for negative targeting clauses."
        expression:
          $ref: '#/components/schemas/TargetingExpression'
        resolvedExpression:
          $ref: '#/components/schemas/TargetingExpression'
        servingStatus:
          type: string
          description: The status of the target.
          enum:
          - ADVERTISER_STATUS_ENABLED
          - STATUS_UNAVAILABLE
          - ADVERTISER_PAUSED
          - ACCOUNT_OUT_OF_BUDGET
          - ADVERTISER_PAYMENT_FAILURE
          - CAMPAIGN_PAUSED
          - CAMPAIGN_ARCHIVED
          - PENDING_START_DATE
          - ENDED
          - CAMPAIGN_OUT_OF_BUDGET
          - AD_GROUP_STATUS_ENABLED
          - AD_GROUP_PAUSED
          - AD_GROUP_ARCHIVED
          - AD_GROUP_INCOMPLETE
          - AD_GROUP_LOW_BID
          - TARGET_STATUS_LIVE
          - TARGET_STATUS_PAUSED
          - TARGET_STATUS_ARCHIVED
          - ADVERTISER_EXCEED_SPENDS_LIMIT
          - AD_POLICING_PENDING_REVIEW
          - CAMPAIGN_INCOMPLETE
          - INELIGIBLE
          - PORTFOLIO_ENDED
          - PORTFOLIO_OUT_OF_BUDGET
          - ADVERTISER_ARCHIVED
          - ADVERTISER_ACCOUNT_OUT_OF_BUDGET
        creationDate:
          type: integer
          description: Epoch date the target was created.
          format: int64
        lastUpdatedDate:
          type: integer
          description: Epoch date of the last update to any property associated with
            the target.
          format: int64
      example:
        lastUpdatedDate: 2
        expression:
        - ""
        - ""
        targetId: 0.8008281904610115
        resolvedExpression: null
        servingStatus: ADVERTISER_STATUS_ENABLED
        campaignId: 1.4658129805029452
        expressionType: auto
        state: enabled
        bid: 5.962133916683182
        creationDate: 5
        adGroupId: 6.027456183070403
    BaseNegativeTargetingClause:
      properties:
        state:
          type: string
          enum:
          - enabled
          - paused
          - archived
    NegativeTargetingClause:
      allOf:
      - $ref: '#/components/schemas/BaseNegativeTargetingClause'
      - type: object
        properties:
          targetId:
            $ref: '#/components/schemas/TargetId'
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          expressionType:
            type: string
            enum:
            - manual
            - auto
          expression:
            type: array
            description: |-
              The expression to negatively match against.
              * Only one brand may be specified per targeting expression.
              * Only one asin may be specified per targeting expression.
              * To exclude a brand from a targeting expression, you must create a negative targeting expression in the same ad group as the positive targeting expression.
            items:
              $ref: '#/components/schemas/NegativeTargetingExpression'
          resolvedExpression:
            type: array
            description: The resolved negative targeting expression.
            items:
              $ref: '#/components/schemas/NegativeTargetingExpression'
    CreateNegativeTargetingClause:
      required:
      - adGroupId
      - expression
      - expressionType
      - state
      allOf:
      - $ref: '#/components/schemas/BaseNegativeTargetingClause'
      - type: object
        properties:
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          expression:
            type: array
            description: |-
              The expression to negatively match against.
              * Only one brand may be specified per targeting expression.
              * Only one asin may be specified per targeting expression.
              * To exclude a brand from a targeting expression, you must create a negative targeting expression in the same ad group as the positive targeting expression.
            items:
              $ref: '#/components/schemas/NegativeTargetingExpression'
          expressionType:
            type: string
            enum:
            - manual
            - auto
    UpdateNegativeTargetingClause:
      required:
      - targetId
      allOf:
      - $ref: '#/components/schemas/BaseNegativeTargetingClause'
      - type: object
        properties:
          targetId:
            $ref: '#/components/schemas/TargetId'
    TargetId:
      type: integer
      format: int64
    NegativeTargetingExpression:
      type: object
      properties:
        type:
          type: string
          description: "The intent type. See the [targeting topic](https://advertising.amazon.com/help#GQCBASRVERXSARL3)\
            \ in the Amazon Ads support center for more information."
          enum:
          - asinSameAs
          - asinBrandSameAs
        value:
          type: string
          description: The value to be negatively targeted. Used only in manual expressions.
          example: B0123456789
    NegativeTargetingClauseEx:
      type: object
      properties:
        targetId:
          type: number
        adGroupId:
          type: number
        state:
          type: string
          enum:
          - enabled
          - paused
          - archived
        expressionType:
          type: string
          enum:
          - manual
          - auto
        expression:
          type: array
          description: |-
            The expression to negatively match against.
            * Only one brand may be specified per targeting expression.
            * Only one asin may be specified per targeting expression.
            * To exclude a brand from a targeting expression, you must create a negative targeting expression in the same ad group as the positive targeting expression.
          items:
            $ref: '#/components/schemas/NegativeTargetingClauseEx_expression'
        servingStatus:
          type: string
          description: The status of the target.
          enum:
          - ADVERTISER_STATUS_ENABLED
          - STATUS_UNAVAILABLE
          - ADVERTISER_PAUSED
          - ACCOUNT_OUT_OF_BUDGET
          - ADVERTISER_PAYMENT_FAILURE
          - CAMPAIGN_PAUSED
          - CAMPAIGN_ARCHIVED
          - PENDING_START_DATE
          - ENDED
          - CAMPAIGN_OUT_OF_BUDGET
          - AD_GROUP_STATUS_ENABLED
          - AD_GROUP_PAUSED
          - AD_GROUP_ARCHIVED
          - AD_GROUP_INCOMPLETE
          - AD_GROUP_LOW_BID
          - TARGET_STATUS_LIVE
          - TARGET_STATUS_PAUSED
          - TARGET_STATUS_ARCHIVED
          - ADVERTISER_EXCEED_SPENDS_LIMIT
          - AD_POLICING_PENDING_REVIEW
          - CAMPAIGN_INCOMPLETE
          - INELIGIBLE
          - PORTFOLIO_ENDED
          - PORTFOLIO_OUT_OF_BUDGET
          - ADVERTISER_ARCHIVED
          - ADVERTISER_ACCOUNT_OUT_OF_BUDGET
        creationDate:
          type: integer
          description: Epoch date the target was created.
          format: int64
        lastUpdatedDate:
          type: integer
          description: Epoch date of the last update to any property associated with
            the target.
          format: int64
      example:
        lastUpdatedDate: 5
        expression:
        - type: asinSameAs
          value: B0123456789
        - type: asinSameAs
          value: B0123456789
        targetId: 0.8008281904610115
        servingStatus: ADVERTISER_STATUS_ENABLED
        expressionType: manual
        state: enabled
        creationDate: 1
        adGroupId: 6.027456183070403
    ASIN:
      pattern: "[a-zA-Z0-9]{10}"
      type: string
      description: Amazon Standard Identification Number
      example: B00PN11UNW
    GoalProduct:
      required:
      - asin
      properties:
        asin:
          $ref: '#/components/schemas/ASIN'
      description: A product an advertisers wants to advertise. Recommendations will
        be made for specified goal products.
    TargetingRecommendationsResponse:
      properties:
        recommendations:
          $ref: '#/components/schemas/TargetingRecommendations'
      description: Response to a request for targeting recommendations.
    RecommendationType:
      type: string
      description: Signifies a type of recommendation
      example: PRODUCT
      enum:
      - PRODUCT
    TargetingRecommendations:
      properties:
        products:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended product targets
          items:
            $ref: '#/components/schemas/ProductRecommendation'
      description: A collection of targeting recommendations. Results will be sorted
        with strongest recommendations in the beginning.
    ProductRecommendation:
      properties:
        asin:
          $ref: '#/components/schemas/ASIN'
        rank:
          minimum: 1
          type: integer
          description: "A rank to signify which recommendations are weighed more heavily,\
            \ with a lower rank signifying a stronger recommendation"
      description: A recommended product to target ads on
    TargetingRecommendationsRequest:
      required:
      - products
      - tactic
      - typeFilter
      properties:
        tactic:
          $ref: '#/components/schemas/Tactic'
        products:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of products for which to get targeting recommendations
          items:
            $ref: '#/components/schemas/GoalProduct'
        typeFilter:
          maxItems: 1
          minItems: 1
          type: array
          description: A filter to indicate which types of recommendations to request.
            T00030 only allow "CATEGORY".
          items:
            $ref: '#/components/schemas/RecommendationType'
      description: Request for targeting recommendations
    ReportRequest:
      type: object
      properties:
        reportDate:
          type: string
          description: Date in YYYYMMDD format. The report contains only metrics generated
            on the specified date. Note that the time zone used for date calculation
            is the one associated with the profile used to make the request.
          example: "20190401"
        tactic:
          $ref: '#/components/schemas/TacticReport'
        segment:
          $ref: '#/components/schemas/Segment'
        metrics:
          type: string
          description: |-
            A comma-separated list of the metrics to be included in the report.

            Each report type supports different metrics. **To understand supported metrics for each report type, see [Report types](/API/docs/en-us/guides/reporting/v2/report-types).**

            **Note**: Campaigns with vCPM costType should use view+click based metrics (viewAttributedConversions14d, viewAttributedDetailPageView14d, viewAttributedSales14d, viewAttributedUnitsOrdered14d, viewImpressions).

            **Note**: Detail page view metrics (attributedDetailPageView14d, viewAttributedDetailPageView14d) have an SLA of 3 days.

            **Tip**: Use new-to-brand (NTB) metrics to calculate how efficient your campaigns are at driving new shoppers:

              1. Percentage of NTB orders = attributedOrdersNewToBrand14d / attributedConversions14d
              2. Percentage NTB sales = attributedSalesNewToBrand14d / attributedSales14d
              3. Percentage NTB units = attributedUnitsOrderedNewToBrand14d / attributedUnitsOrdered14d
              4. NTB order rate = attributedOrdersNewToBrand14 / impressions
          example: "campaignName,campaignId,impressions,clicks,cost,attributedSales14d"
    ReportResponse:
      type: object
      properties:
        reportId:
          type: string
          description: The identifier of the report.
        recordType:
          type: string
          description: The type of report requested.
          enum:
          - CAMPAIGN
          - AD_GROUP
          - PRODUCT_AD
        status:
          type: string
          description: The build status of the report.
          enum:
          - IN_PROGRESS
          - SUCCESS
          - FAILURE
        statusDetails:
          type: string
          description: A human-readable description of the current status.
        location:
          type: string
          description: The URI location of the report.
        fileSize:
          type: integer
          description: "The size of the report file, in bytes."
          format: int64
        expiration:
          type: integer
          description: Epoch date of the expiration of the URI in the `location` property.
          format: int64
      example:
        reportId: reportId
        fileSize: 0
        recordType: CAMPAIGN
        statusDetails: statusDetails
        location: location
        expiration: 6
        status: IN_PROGRESS
    PatchRequest:
      required:
      - id
      - request
      type: object
      properties:
        id:
          type: string
        request:
          type: array
          items:
            $ref: '#/components/schemas/PatchDocument'
      description: JSONPatch request request object.
    PatchDocument:
      required:
      - op
      - path
      type: object
      properties:
        op:
          type: string
          description: The JSONPatch operation type.
          example: replace
          enum:
          - add
          - remove
          - replace
        path:
          type: string
          description: A path constructed from the JSON object to be updated.
          example: /state
        value:
          description: The value used by the operation specified in the `op` field.
          example: paused
          anyOf:
          - type: string
          - type: number
          - type: integer
          - type: boolean
          - type: array
            items: {}
          - type: object
      description: JSONPatch request document.
    CreativeProperties:
      description: "Select customizations on your creative from any combination of\
        \ headline, logo, custom image and backgrounds."
      anyOf:
      - $ref: '#/components/schemas/HeadlineCreativeProperties'
      - $ref: '#/components/schemas/LogoCreativeProperties'
      - $ref: '#/components/schemas/CustomImageCreativeProperties'
      - $ref: '#/components/schemas/VideoCreativeProperties'
      - $ref: '#/components/schemas/BackgroundCreativeProperties'
    HeadlineCreativeProperties:
      type: object
      properties:
        headline:
          maxLength: 50
          type: string
          description: A marketing phrase to display on the ad. This field is optional
            and mutable. Maximum number of characters allowed is 50.
        hasTermsAndConditions:
          type: boolean
          description: "Indicates that the ad promotes a free product or service (e.g.,\
            \ 'buy one get one free' or 'free one-month trial') and has qualifying\
            \ terms and conditions applicable to your customer. Only supported for\
            \ productAds with landingPageType of OFF_AMAZON_LINK. LandingPageURL must\
            \ link out to a page detailing terms and conditions or contain a link\
            \ to those."
        originalHeadline:
          type: string
          description: "The original headline submitted by the advertiser. If 'consentToTranslate'\
            \ is set to true and translation is SUCCESSFUL then `headline` will return\
            \ the translated headline whereas `originalHeadline` will return the original\
            \ headline. In all other cases, 'originalHeadline' and `headline` both\
            \ will return the original headline."
      description: User-customizable properties of a creative with headline.
    LogoCreativeProperties:
      type: object
      properties:
        brandLogo:
          $ref: '#/components/schemas/Image'
      description: User-customizable properties of a creative with a logo.
    CustomImageCreativeProperties:
      type: object
      properties:
        rectCustomImage:
          $ref: '#/components/schemas/Image'
        squareCustomImage:
          $ref: '#/components/schemas/Image'
        squareImages:
          type: array
          description: An optional collection of 1:1 square images which are displayed
            on the ad.
          items:
            $ref: '#/components/schemas/Image'
        horizontalImages:
          type: array
          description: An optional collection of 1.91:1 horizontal images which are
            displayed on the ad.
          items:
            $ref: '#/components/schemas/Image'
        verticalImages:
          type: array
          description: An optional collection of 9:16 vertical images which are displayed
            on the ad.
          items:
            $ref: '#/components/schemas/Image'
      description: User-customizable properties of a custom image creative.
    VideoCreativeProperties:
      type: object
      properties:
        video:
          $ref: '#/components/schemas/Video'
        squareVideos:
          type: array
          description: "An optional collection of 1:1 square videos which are displayed\
            \ on the ad. Currently, only one asset is supported in the array."
          items:
            $ref: '#/components/schemas/Video'
        horizontalVideos:
          type: array
          description: "An optional collection of 16:9 horizontal videos which are\
            \ displayed on the ad. Currently, only one asset is supported in the array."
          items:
            $ref: '#/components/schemas/Video'
        verticalVideos:
          type: array
          description: "An optional collection of 9:16 vertical videos which are displayed\
            \ on the ad. Currently, only one asset is supported in the array."
          items:
            $ref: '#/components/schemas/Video'
      description: "User-customizable properties of a video creative. Use either the\
        \ 'video' property for a single video, OR one or more of the aspect-ratio-specific\
        \ collections (squareVideos, horizontalVideos, verticalVideos)."
    BackgroundCreativeProperties:
      type: object
      properties:
        backgrounds:
          type: array
          description: An optional collection of backgrounds which are displayed on
            the ad.
          items:
            $ref: '#/components/schemas/Background'
      description: User-customizable properties of a creative with background. Only
        supported for productAds with landingPageType of OFF_AMAZON_LINK.
    Image:
      required:
      - assetId
      - assetVersion
      type: object
      properties:
        assetId:
          type: string
          description: The unique identifier of the image asset. This assetId comes
            from the Creative Asset Library.
        assetVersion:
          type: string
          description: The identifier of the particular image assetversion.
        croppingCoordinates:
          $ref: '#/components/schemas/Image_croppingCoordinates'
      description: |-
        This field denotes image which is displayed on the ad. This can either be a brand logo or a custom image. This field is optional and mutable. For custom image, both rectCustomImage and squareCustomImage should use the same asset id and asset version. Specific restrictions based on the Image type are listed in the following table.
        |Image type|Maximum file size|Minimum width|Minimum height|Accepted file formats|
        |------|-----------|-----------|-----------|-----------|
        |Custom Image|5MB|1200|628|JPEG, JPG, PNG, GIF|
        |Brand Logo|1MB|600|100|JPEG, JPG, PNG|
        Note: For square custom images the cropped image should be 628x628 at minimum.
    Video:
      required:
      - assetId
      - assetVersion
      type: object
      properties:
        assetId:
          type: string
          description: The unique identifier of the video asset. This assetId comes
            from the Creative Asset Library.
        assetVersion:
          type: string
          description: The identifier of the particular video assetversion.
        originalAssetId:
          type: string
          description: "The assetId of the original video submitted by the advertiser.\
            \ If 'consentToTranslate' is set to true and translation is SUCCESSFUL\
            \ then `originalAssetId` will return the assetId of the original video\
            \ whereas `assetId` will return the assetId of the translated video. In\
            \ all other cases, 'originalAssetId' and `assetId` both will return the\
            \ assetId of the original video."
        originalAssetVersion:
          type: string
          description: "The asset version of the original video submitted by the advertiser.\
            \ If 'consentToTranslate' is set to true and translation is SUCCESSFUL\
            \ then `originalAssetVersion` will return the asset version of the original\
            \ video whereas `assetVersion` will return the asset version of the translated\
            \ video. In all other cases, 'originalAssetVersion' and `assetVersion`\
            \ both will return the asset version of the original video."
      description: |-
        This field denotes video which is displayed on the ad. This field is optional and mutable. A video asset must be provided for a VIDEO creative. Specific restrictions based on the video are listed in the following table.
        ||Specifications|
        |------------------|------------------|
        |Maximum file size|500MB|
        |Aspect ratio|16:9|
        |Minimum duration|6s|
        |Maximum duration|45s|
        |Minimum frame size|1920x1080|
        |Minimum video bitrate|4mbps|
        |Video frame rate(fps)|23.976(recommended), 24, 25, or 29.97|
        |Video frame rate mode|Constant|
        |Minimum audio bitrate|192kbps|
        |Audio sample rate|44.1kHz or 48kHz|
        |Supported Formats|Video: H.264, MPEG-2, or MPEG-4; Audio: PCM or AAC|
        |Audio Channel|Audio format needs to be stereo or mono.|
        |Recommended video bitrate|8mbps|
        |Recommended duration|A duration of exactly 6s, 15s, 20s, or 30s is recommended. Use of videos outside of these durations may negatively impact your campaign performance. Shorter lengths will drive higher VCR (although scale on 6s may be limited).|
    Background:
      type: object
      properties:
        color:
          type: string
          description: The standard HTML hex color codes of the background (e.g. '#3cb371').
      description: This field denotes background which are displayed on the ad. This
        field is optional and mutable.
    CreativeModeration:
      required:
      - creativeId
      - creativeType
      - etaForModeration
      - moderationStatus
      - policyViolations
      type: object
      properties:
        creativeId:
          type: number
          description: Unique identifier of the creative.
        creativeType:
          $ref: '#/components/schemas/CreativeTypeInCreativeResponse'
        moderationStatus:
          type: string
          description: |-
            The moderation status of the creative.
            |Status|Description|
            |------|-----------|
            |APPROVED|Moderation for the creative is complete.|
            |IN_PROGRESS|Moderation for the creative is in progress. The expected date and time for completion are specfied in the `etaForModeration` field.|
            |REJECTED|The creative has failed moderation. Specific information about the content that violated policy is available in `policyViolations`.|
          enum:
          - APPROVED
          - PENDING_REVIEW
          - REJECTED
        etaForModeration:
          type: string
          description: Expected date and time by which moderation will be complete.
          format: date-time
        policyViolations:
          type: array
          description: A list of policy violations for a creative that has failed
            moderation.
          items:
            $ref: '#/components/schemas/CreativeModeration_policyViolations'
      description: System generated Creative moderation.
      example:
        creativeType: IMAGE
        moderationStatus: APPROVED
        policyViolations:
        - policyDescription: policyDescription
          violatingHeadlineContents:
          - textEvidence:
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            reviewedText: reviewedText
          - textEvidence:
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            reviewedText: reviewedText
          violatingCustomImageContents:
          - null
          - null
          policyLinkUrl: policyLinkUrl
          violatingBrandLogoContents:
          - imageEvidences:
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            reviewedImageUrl: reviewedImageUrl
          - imageEvidences:
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            reviewedImageUrl: reviewedImageUrl
          violatingVideoContents:
          - videoEvidences:
            - violatingVideoPosition:
                start: 9
                end: 3
            - violatingVideoPosition:
                start: 9
                end: 3
            reviewedVideoUrl: reviewedVideoUrl
          - videoEvidences:
            - violatingVideoPosition:
                start: 9
                end: 3
            - violatingVideoPosition:
                start: 9
                end: 3
            reviewedVideoUrl: reviewedVideoUrl
        - policyDescription: policyDescription
          violatingHeadlineContents:
          - textEvidence:
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            reviewedText: reviewedText
          - textEvidence:
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            - violatingTextPosition:
                start: 6
                end: 1
              violatingText: violatingText
            reviewedText: reviewedText
          violatingCustomImageContents:
          - null
          - null
          policyLinkUrl: policyLinkUrl
          violatingBrandLogoContents:
          - imageEvidences:
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            reviewedImageUrl: reviewedImageUrl
          - imageEvidences:
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            - violatingImageCrop:
                topLeftY: 5
                topLeftX: 5
                width: 7
                height: 2
            reviewedImageUrl: reviewedImageUrl
          violatingVideoContents:
          - videoEvidences:
            - violatingVideoPosition:
                start: 9
                end: 3
            - violatingVideoPosition:
                start: 9
                end: 3
            reviewedVideoUrl: reviewedVideoUrl
          - videoEvidences:
            - violatingVideoPosition:
                start: 9
                end: 3
            - violatingVideoPosition:
                start: 9
                end: 3
            reviewedVideoUrl: reviewedVideoUrl
        etaForModeration: 2000-01-23T04:56:07.000+00:00
        creativeId: 0.8008281904610115
    CreativeTypeInCreativeRequest:
      type: string
      description: |-
        The type of the creative.
        |Name|Description|
        |----|-----------|
        |IMAGE |The creative will display static assets (e.g. headline, brandLogo or custom image).|
        |VIDEO |The creative will display video assets. This type of creative must have video assets provided. Only supported when using productAds with ASIN or SKU.|
      nullable: true
      enum:
      - IMAGE
      - VIDEO
      example: null
    CreativeTypeInCreativeResponse:
      type: string
      description: |2-

        The type of the creative.
        |Name|Description|
        |----|-----------|
        |IMAGE |The creative will display static assets (e.g. headline, brandLogo or custom image).|
        |VIDEO |The creative will display video assets. This type of creative must have video assets provided.|
      nullable: false
      example: IMAGE
      enum:
      - IMAGE
      - VIDEO
    Creative:
      required:
      - adGroupId
      - creativeId
      - creativeType
      - moderationStatus
      - properties
      type: object
      properties:
        creativeId:
          type: number
          description: Unique identifier of the creative.
        adGroupId:
          $ref: '#/components/schemas/AdGroupId'
        creativeType:
          $ref: '#/components/schemas/CreativeTypeInCreativeResponse'
        properties:
          $ref: '#/components/schemas/CreativeProperties'
        moderationStatus:
          type: string
          description: The moderation status of the creative
          enum:
          - APPROVED
          - PENDING_REVIEW
          - REJECTED
      description: Creative model.
      example:
        creativeType: IMAGE
        moderationStatus: APPROVED
        creativeId: 0.8008281904610115
        adGroupId: 6
        properties: ""
    PreviewCreativeModel:
      type: object
      properties:
        creativeType:
          $ref: '#/components/schemas/CreativeTypeInCreativeRequest'
        properties:
          $ref: '#/components/schemas/CreativeProperties'
      description: Creative model for preview.
    CreativeUpdate:
      required:
      - creativeId
      - properties
      type: object
      properties:
        creativeId:
          type: number
          description: Unique identifier of the creative.
        creativeType:
          $ref: '#/components/schemas/CreativeTypeInCreativeRequest'
        properties:
          $ref: '#/components/schemas/CreativeProperties'
      description: Creative update model.
    CreateCreative:
      required:
      - adGroupId
      - properties
      type: object
      properties:
        adGroupId:
          type: number
          description: Unqiue identifier for the ad group associated with the creative.
        creativeType:
          $ref: '#/components/schemas/CreativeTypeInCreativeRequest'
        properties:
          $ref: '#/components/schemas/CreativeProperties'
        consentToTranslate:
          type: boolean
          description: "If set to true and the headline and/or video are not in the\
            \ marketplace's default language, Amazon will attempt to translate them\
            \ to the marketplace's default language. If Amazon is unable to translate\
            \ them, the ad will be rejected by moderation. We only support translating\
            \ headlines and videos from English to German, French, Italian, Spanish,\
            \ Japanese, and Dutch."
      description: Creative create model.
      example:
        adGroupId: 21035454911234
        properties:
          rectCustomImage:
            assetId: amzn1.assetlibrary.asset1.fbb498fe19248f834be4b7xxxxxxxx
            assetVersion: version_v1
            croppingCoordinates:
              top: 0
              left: 0
              width: 1200
              height: 628
          squareCustomImage:
            assetId: amzn1.assetlibrary.asset1.fbb498fe19248f834be4b8xxxxxxxx
            assetVersion: version_v1
            croppingCoordinates:
              top: 0
              left: 0
              width: 628
              height: 628
    CreativeResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        description:
          type: string
          description: A human-readable description of the response.
        creativeId:
          type: number
          description: The identifier of the creative.
      example:
        code: code
        description: description
        creativeId: 0.8008281904610115
    CreativePreviewConfiguration:
      type: object
      properties:
        size:
          $ref: '#/components/schemas/CreativePreviewConfiguration_size'
        products:
          type: array
          description: The products to preview. Currently only the first product is
            previewable.
          items:
            $ref: '#/components/schemas/CreativePreviewConfiguration_products'
        landingPageURL:
          $ref: '#/components/schemas/LandingPageURL'
        landingPageType:
          $ref: '#/components/schemas/LandingPageType'
        adName:
          $ref: '#/components/schemas/AdName'
        isMobile:
          type: boolean
          description: Preview the creative as if it is on a mobile environment.
        isOnAmazon:
          type: boolean
          description: Preview the creative as if it is on an amazon site or third
            party site. The main difference is whether the preview will contain an
            AdChoices icon.
      description: Optional configuration for creative preview.
    CreativePreviewConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CreativePreviewConfiguration'
      x-schema-name: CreativePreviewConfigurations
    CreativePreviewRequest:
      required:
      - creative
      - previewConfiguration
      type: object
      properties:
        creative:
          $ref: '#/components/schemas/PreviewCreativeModel'
        previewConfiguration:
          $ref: '#/components/schemas/CreativePreviewConfiguration'
        previewConfigurations:
          $ref: '#/components/schemas/CreativePreviewConfigurations'
    CreativePreviewResponse:
      required:
      - previewHtml
      type: object
      properties:
        previewHtml:
          type: string
        previewHtmls:
          type: array
          items:
            type: string
      example:
        previewHtmls:
        - previewHtmls
        - previewHtmls
        previewHtml: previewHtml
    Locale:
      pattern: "^\\[a-z]{2}-[AZ]{2}$"
      type: string
      description: "Locale string as described in [BCP 47](https://tools.ietf.org/html/bcp47).\
        \ For example, `en-US`"
      enum:
      - en-US
      - es-MX
      - zh-CN
      - es-ES
      - it-IT
      - fr-FR
      - fr-CA
      - de-DE
      - ja-JP
      - ko-KR
      - en-GB
      - en-CA
      - hi-IN
      - en-IN
      - en-DE
      - en-ES
      - en-FR
      - en-IT
      - en-JP
      - en-AE
      - ar-AE
    Error:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        details:
          type: string
          description: A human-readable description of the response.
      description: The error response object.
    TacticFilter:
      type: string
      description: |-
        Optional. Restricts results to entities with the advertising tactic associated with the campaign. Must be one of the following table lists available tactic names:
        |Tactic Name|Type|Description|
        |-----------|-----|-----------|
        |T00020     |Contextual targeting | Choose individual products to show your ads in placements related to those products.<br> Choose individual categories to show your ads in placements related to those categories on and off Amazon.|
        |T00030     |Audiences or Contextual Targeting | Select individual products, categories, refined categories, or audiences to show your ads.|
      example: "T00020,T00030"
      enum:
      - T00020
      - T00030
      - "T00020,T00030"
    SnapshotRequest:
      type: object
      properties:
        stateFilter:
          type: string
          description: "Optional. Restricts results to entities with state within\
            \ the specified comma-separated list. Default behavior is to include 'enabled'\
            \ and 'paused'. You can include 'enabled', 'paused', and 'archived' or\
            \ any combination."
          enum:
          - enabled
          - paused
          - archived
        tacticFilter:
          $ref: '#/components/schemas/TacticFilter'
    SnapshotResponse:
      type: object
      properties:
        snapshotId:
          type: string
          description: The identifier of the snapshot that was requested.
        recordType:
          type: string
          description: The record type of the snapshot file.
          enum:
          - campaigns
          - adgroups
          - productAds
          - targets
        status:
          type: string
          description: The status of the generation of the snapshot.
          enum:
          - IN_PROGRESS
          - SUCCESS
          - FAILURE
        statusDetails:
          type: string
          description: Optional description of the status.
        location:
          type: string
          description: The URI for the snapshot. It's only available if status is
            SUCCESS.
        fileSize:
          type: number
          description: The size of the snapshot file in bytes. It's only available
            if status is SUCCESS.
        expiration:
          type: number
          description: The epoch time for expiration of the snapshot file and each
            snapshot file will be expired in 30 mins after generated. It's only available
            if status is SUCCESS.
      example:
        snapshotId: snapshotId
        fileSize: 0.8008281904610115
        recordType: campaigns
        statusDetails: statusDetails
        location: location
        expiration: 6.027456183070403
        status: IN_PROGRESS
    SDTargetingRecommendationsLocale:
      type: string
      description: List of supported locales.
      enum:
      - ar_AE
      - de_DE
      - en_AE
      - en_AU
      - en_CA
      - en_GB
      - en_IN
      - en_SG
      - en_US
      - es_ES
      - es_MX
      - fr_CA
      - fr_FR
      - hi_IN
      - it_IT
      - ja_JP
      - ko_KR
      - nl_NL
      - pl_PL
      - pt_BR
      - sv_SE
      - ta_IN
      - th_TH
      - tr_TR
      - vi_VN
      - zh_CN
    SDTargetingRecommendationsRequest:
      required:
      - products
      - tactic
      - typeFilter
      properties:
        tactic:
          $ref: '#/components/schemas/SDTactic'
        products:
          maxItems: 10000
          minItems: 1
          type: array
          description: A list of products for which to get targeting recommendations
          items:
            $ref: '#/components/schemas/SDGoalProduct'
        typeFilter:
          maxItems: 1
          minItems: 1
          type: array
          description: A filter to indicate which types of recommendations to request.
          items:
            $ref: '#/components/schemas/SDRecommendationType'
      description: Request for targeting recommendations
    SDTargetingRecommendationsRequestV31:
      required:
      - products
      - tactic
      - typeFilter
      properties:
        tactic:
          $ref: '#/components/schemas/SDTacticV31'
        products:
          $ref: '#/components/schemas/SDTargetingRecommendationsProducts'
        typeFilter:
          $ref: '#/components/schemas/SDTargetingRecommendationsTypeFilterV31'
      description: Request for targeting recommendations
    SDTargetingRecommendationsRequestV32:
      required:
      - products
      - tactic
      - typeFilter
      properties:
        tactic:
          $ref: '#/components/schemas/SDTacticV31'
        products:
          $ref: '#/components/schemas/SDTargetingRecommendationsProducts'
        typeFilter:
          $ref: '#/components/schemas/SDTargetingRecommendationsTypeFilterV31'
        themes:
          $ref: '#/components/schemas/SDTargetingRecommendationsThemes'
      description: Request for targeting recommendations for API version 3.2.
    SDTargetingRecommendationsRequestV33:
      required:
      - products
      - tactic
      - typeFilter
      properties:
        tactic:
          $ref: '#/components/schemas/SDTacticV31'
        products:
          $ref: '#/components/schemas/SDTargetingRecommendationsProducts'
        typeFilter:
          $ref: '#/components/schemas/SDTargetingRecommendationsTypeFilterV32'
        themes:
          $ref: '#/components/schemas/SDTargetingRecommendationsThemes'
      description: Request for targeting recommendations for API version 3.3.
    SDTargetingRecommendationsRequestV34:
      required:
      - products
      - tactic
      - typeFilter
      properties:
        tactic:
          $ref: '#/components/schemas/SDTacticV31'
        products:
          $ref: '#/components/schemas/SDTargetingRecommendationsProducts'
        typeFilter:
          $ref: '#/components/schemas/SDTargetingRecommendationsTypeFilterV32'
        themes:
          $ref: '#/components/schemas/SDTargetingRecommendationsThemes'
      description: Request for targeting recommendations for API version 3.4.
    SDTargetingRecommendationsRequestV35:
      required:
      - products
      - tactic
      - typeFilter
      properties:
        tactic:
          $ref: '#/components/schemas/SDTacticV31'
        products:
          $ref: '#/components/schemas/SDTargetingRecommendationsProductsV31'
        typeFilter:
          $ref: '#/components/schemas/SDTargetingRecommendationsTypeFilterV33'
        themes:
          $ref: '#/components/schemas/SDTargetingRecommendationsThemes'
        categoryType:
          type: string
          description: |-
            This field is optional unless the field locationExpression is present in the request. It is used for category audience targeting
            to specify if the audience is for views (re-marketing) or purchases (re-purchasing). The specified categories will be returned accordingly.
          enum:
          - views
          - purchases
        locationExpression:
          maxItems: 20
          minItems: 1
          type: array
          description: |-
            This optional field is used to specify the locations used in SD location targeting for non-Amazon sellers only at the moment.
            Therefore it's only supported if the product is a landing page url.
          items:
            $ref: '#/components/schemas/LocationExpression'
      description: Request for targeting recommendations for API version 3.5.
    SDTargetingRecommendationsProducts:
      maxItems: 10000
      minItems: 1
      type: array
      description: A list of products for which to get targeting recommendations
      items:
        $ref: '#/components/schemas/SDGoalProduct'
      x-schema-name: SDTargetingRecommendationsProducts
    SDTargetingRecommendationsProductsV31:
      maxItems: 10000
      minItems: 1
      type: array
      description: |-
        A list of products for which to get targeting recommendations. This array can only contain either asins or landing pages. If landingPageUrl is used,
        there can only be one item in the array for each request.
      example:
      - asin: B00PN11UNW
      items:
        $ref: '#/components/schemas/SDAdvertisedProduct'
      x-schema-name: SDTargetingRecommendationsProductsV31
    SDTargetingRecommendationsTypeFilterV31:
      maxItems: 2
      minItems: 1
      type: array
      description: A filter to indicate which types of recommendations to request.
      example:
      - PRODUCT
      - CATEGORY
      items:
        $ref: '#/components/schemas/SDRecommendationTypeV31'
      x-schema-name: SDTargetingRecommendationsTypeFilterV31
    SDTargetingRecommendationsTypeFilterV32:
      maxItems: 2
      minItems: 1
      type: array
      description: A filter to indicate which types of recommendations to request.
      example:
      - PRODUCT
      - CATEGORY
      - AUDIENCE
      items:
        $ref: '#/components/schemas/SDRecommendationTypeV32'
      x-schema-name: SDTargetingRecommendationsTypeFilterV32
    SDTargetingRecommendationsTypeFilterV33:
      maxItems: 3
      minItems: 1
      type: array
      description: A filter to indicate which types of recommendations to request.
      example:
      - PRODUCT
      - CATEGORY
      - AUDIENCE
      - CONTENT_CATEGORY
      items:
        $ref: '#/components/schemas/SDRecommendationTypeV33'
      x-schema-name: SDTargetingRecommendationsTypeFilterV33
    SDTargetingRecommendationsThemes:
      type: object
      properties:
        product:
          maxItems: 5
          minItems: 0
          type: array
          description: "A list of themes for product targeting recommendations. If\
            \ this list is empty, the service will return all the current available\
            \ theme recommendations. Recommendations will be returned for each theme.\
            \ If specified, each theme should only include unique expressions."
          items:
            $ref: '#/components/schemas/SDProductTargetingTheme'
      description: The themes used to refine the recommendations. Currently only contextual
        targeting themes are supported.
    SDProductTargetingTheme:
      required:
      - expression
      - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: ^(?!default$)
          type: string
          description: |-
            This is the meaningful theme name which will be used as a unique identifier across various themes in the same request.
            This identifier will also be used to map the recommendations back to the theme in the response body.
            Note: the value for this field cannot be "default" as that's a reserved keyword in the system.
        expression:
          maxItems: 1
          minItems: 1
          type: array
          description: |-
            A list of expressions defining the contextual targeting theme. The list will define an AND operator on different expressions.
            For example, asinPriceGreaterThan and asinReviewRatingLessThan can be used to request product recommendations
            which are both with greater price and less review rating compared to the goal products.
            Note: Currently the service only supports one item in the array.
          items:
            $ref: '#/components/schemas/SDProductTargetingThemeExpression'
      description: Contextual targeting theme definitions.
    SDProductTargetingThemeExpression:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: The contextual targeting grammar used to define the targeting
            theme. Note asinAsBestSeller is currently not supported.
          enum:
          - asinPriceGreaterThan
          - asinBrandSameAs
          - asinReviewRatingLessThan
          - asinGlanceViewsGreaterThan
      description: The expression used to define the contextual targeting theme.
    SDRecommendationType:
      type: string
      description: Signifies a type of recommendation
      example: PRODUCT
      enum:
      - PRODUCT
    SDRecommendationTypeV31:
      type: string
      description: Signifies a type of recommendation
      example: PRODUCT
      enum:
      - PRODUCT
      - CATEGORY
    SDRecommendationTypeV32:
      type: string
      description: Signifies a type of recommendation. PRODUCT and CATEGORY are supported
        by tactic T00020. CATEGORY and AUDIENCE are supported by tactic T00030.
      example: PRODUCT
      enum:
      - PRODUCT
      - CATEGORY
      - AUDIENCE
    SDRecommendationTypeV33:
      type: string
      description: "Signifies a type of recommendation. PRODUCT, CATEGORY, and CONTENT_CATEGORY\
        \ are supported by tactic T00020. CATEGORY, AUDIENCE, and CONTENT_CATEGORY\
        \ are supported by tactic T00030."
      example: PRODUCT
      enum:
      - PRODUCT
      - CATEGORY
      - AUDIENCE
      - CONTENT_CATEGORY
    SDASIN:
      pattern: "[a-zA-Z0-9]{10}"
      type: string
      description: Amazon Standard Identification Number
      example: B00PN11UNW
    SDErrorResponse:
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        details:
          type: string
          description: A human-readable description of the response.
    SDTargetingRecommendationsResponse:
      properties:
        recommendations:
          $ref: '#/components/schemas/SDTargetingRecommendations'
      description: Response to a request for targeting recommendations.
    SDTargetingRecommendationsResponseV31:
      properties:
        recommendations:
          $ref: '#/components/schemas/SDTargetingRecommendationsV31'
      description: Response to a request for targeting recommendations.
    SDTargetingRecommendationsResponseV32:
      properties:
        recommendations:
          $ref: '#/components/schemas/SDTargetingRecommendationsV32'
      description: Response to a request for targeting recommendations.
    SDTargetingRecommendationsResponseV33:
      properties:
        recommendations:
          $ref: '#/components/schemas/SDTargetingRecommendationsV33'
      description: Response to a request for targeting recommendations.
    SDTargetingRecommendationsResponseV34:
      properties:
        recommendations:
          $ref: '#/components/schemas/SDTargetingRecommendationsV34'
      description: Response to a request for targeting recommendations.
    SDTargetingRecommendationsResponseV35:
      properties:
        recommendations:
          $ref: '#/components/schemas/SDTargetingRecommendationsV35'
      description: Response to a request for targeting recommendations.
      example:
        recommendations:
          themes:
            themes:
              products:
              - ""
              - ""
              - ""
              - ""
              - ""
          contentCategories:
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          - name: Drama
            rank: 1
            contentCategory: amzn1.iab-content.647
          audiences:
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          - audiences:
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            - audience: "417464173123977686"
              name: name
              rank: 1
            category: In-Market
          categories:
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          - path:
            - path
            - path
            translatedPath:
            - translatedPath
            - translatedPath
            name: name
            rank: 1
            targetableAsinCountRange:
              rangeUpper: 1
              rangeLower: 6
            category: 7352105011
            translatedName: translatedName
          products:
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
          - products:
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
            - advertisedAsins:
              - null
              - null
              - null
              - null
              - null
              rank: 1
              asin: B00PN11UNW
    SDTargetingRecommendationsV32:
      description: "For v3.2 the service will continue to return the recommendations\
        \ returned for v3.1 in products field, and return recommendations for contextual\
        \ targeting themes in themes field."
      allOf:
      - $ref: '#/components/schemas/SDProductRecommendationsV32'
      - $ref: '#/components/schemas/SDCategoryRecommendations'
      - $ref: '#/components/schemas/SDThemeRecommendations'
    SDTargetingRecommendationsV33:
      description: "For v3.3 the service will continue to return the recommendations\
        \ returned for v3.2, and return audience recommendations if requested."
      allOf:
      - $ref: '#/components/schemas/SDProductRecommendationsV32'
      - $ref: '#/components/schemas/SDCategoryRecommendationsV33'
      - $ref: '#/components/schemas/SDAudienceRecommendations'
      - $ref: '#/components/schemas/SDThemeRecommendations'
    SDTargetingRecommendationsV34:
      type: object
      properties:
        products:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended product targets
          items:
            $ref: '#/components/schemas/SDProductRecommendationsV32'
        categories:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended category targets
          items:
            $ref: '#/components/schemas/SDCategoryRecommendationV33'
        audiences:
          maxItems: 10
          minItems: 0
          type: array
          description: "List of recommended audience targets, broken down by audience\
            \ category"
          items:
            $ref: '#/components/schemas/SDAudienceCategoryRecommendations'
        themes:
          $ref: '#/components/schemas/SDThemeRecommendationsV34'
      description: "For v3.4 the service will continue to return the recommendations\
        \ returned for v3.2, return audience recommendations if requested, and return\
        \ the theme expression used in product targeting if requested."
    SDTargetingRecommendationsV35:
      type: object
      properties:
        products:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended product targets
          items:
            $ref: '#/components/schemas/SDProductRecommendationsV32'
        categories:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended category targets
          items:
            $ref: '#/components/schemas/SDCategoryRecommendationV33'
        audiences:
          maxItems: 10
          minItems: 0
          type: array
          description: "List of recommended audience targets, broken down by audience\
            \ category"
          items:
            $ref: '#/components/schemas/SDAudienceCategoryRecommendations'
        contentCategories:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended entertainment targets
          items:
            $ref: '#/components/schemas/SDContentCategoryRecommendations'
        themes:
          $ref: '#/components/schemas/SDThemeRecommendationsV34'
      description: "For v3.5 the service will continue to return the recommendations\
        \ returned for v3.4, return Entertainment targeting recommendations if requested\
        \ and return asin-less recommendations if a landing page URL was passed in\
        \ the request"
      example:
        themes:
          themes:
            products:
            - ""
            - ""
            - ""
            - ""
            - ""
        contentCategories:
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        - name: Drama
          rank: 1
          contentCategory: amzn1.iab-content.647
        audiences:
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        - audiences:
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          - audience: "417464173123977686"
            name: name
            rank: 1
          category: In-Market
        categories:
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        - path:
          - path
          - path
          translatedPath:
          - translatedPath
          - translatedPath
          name: name
          rank: 1
          targetableAsinCountRange:
            rangeUpper: 1
            rangeLower: 6
          category: 7352105011
          translatedName: translatedName
        products:
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
        - products:
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
          - advertisedAsins:
            - null
            - null
            - null
            - null
            - null
            rank: 1
            asin: B00PN11UNW
    SDThemeRecommendations:
      type: object
      properties:
        themes:
          $ref: '#/components/schemas/SDThemeRecommendations_themes'
    SDThemeRecommendationsV34:
      type: object
      properties:
        themes:
          $ref: '#/components/schemas/SDThemeRecommendationsV34_themes'
      example:
        themes:
          products:
          - ""
          - ""
          - ""
          - ""
          - ""
    SDProductTargetingRecommendationsSuccess:
      type: object
      properties:
        code:
          type: string
          description: HTTP status code 200 indicating a successful response for product
            recomendations.
          example: "200"
        name:
          type: string
          description: The theme name specified in the request.
        recommendations:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of recommended products.
          items:
            $ref: '#/components/schemas/SDProductRecommendationV32'
      description: Recommendation results for contextual targeting.
    SDTargetingRecommendationsFailure:
      type: object
      properties:
        code:
          type: string
          description: HTTP status code indicating a failure response for targeting
            recomendations.
          example: "400"
        name:
          type: string
          description: |-
            The theme name specified in the request. If the themes field is not provided in the request,
            the value of this field will be set to default.
        errorMessage:
          type: string
          description: A human friendly error message indicating the failure reasons.
      description: A targeting recommendation failure record.
    SDProductTargetingRecommendationsSuccessV34:
      type: object
      properties:
        code:
          type: string
          description: HTTP status code 200 indicating a successful response for product
            recommendations.
          example: "200"
        name:
          type: string
          description: The theme name specified in the request.
        expression:
          maxItems: 1
          minItems: 1
          type: array
          description: |-
            A list of expressions defining the product targeting theme. The list will define an AND operator on different expressions.
            For example, asinPriceGreaterThan and asinReviewRatingLessThan can be used to request product recommendations
            which are both with greater price and less review rating compared to the goal products.
            Note: currently the service only support one item in the array.
          items:
            $ref: '#/components/schemas/SDProductTargetingThemeExpression'
        recommendations:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of recommended products.
          items:
            $ref: '#/components/schemas/SDProductRecommendationV32'
      description: Recommendation results for contextual targeting.
    SDTargetingRecommendationsFailureV34:
      type: object
      properties:
        code:
          type: string
          description: HTTP status code indicating a failure response for targeting
            recomendations.
          example: "400"
        name:
          type: string
          description: |-
            The theme name specified in the request. If the themes field is not provided in the request,
            the value of this field will be set to default.
        expression:
          maxItems: 1
          minItems: 1
          type: array
          description: A list of expressions that failed to be applied in the product
            targeting theme.
          items:
            $ref: '#/components/schemas/SDProductTargetingThemeExpression'
        errorMessage:
          type: string
          description: A human friendly error message indicating the failure reasons.
      description: A targeting recommendation failure record.
    SDCategory:
      type: integer
      description: The category identifier
      example: 7352105011
    SDTargetingRecommendations:
      properties:
        products:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended product targets
          items:
            $ref: '#/components/schemas/SDProductRecommendation'
      description: A collection of targeting recommendations. Results will be sorted
        with strongest recommendations in the beginning.
    SDProductRecommendation:
      type: object
      properties:
        asin:
          $ref: '#/components/schemas/SDASIN'
        rank:
          minimum: 1
          type: integer
          description: "A rank to signify which recommendations are weighed more heavily,\
            \ with a lower rank signifying a stronger recommendation"
      description: A recommended product to target ads on
    SDProductRecommendationV32:
      type: object
      properties:
        asin:
          $ref: '#/components/schemas/SDASIN'
        rank:
          minimum: 1
          type: integer
          description: "A rank to signify which recommendations are weighed more heavily,\
            \ with a lower rank signifying a stronger recommendation"
        advertisedAsins:
          maxItems: 5
          minItems: 1
          type: array
          description: The top advertised products this recommendation is made for.
          items:
            $ref: '#/components/schemas/SDASIN'
      description: A recommended product to target ads on
      example:
        advertisedAsins:
        - null
        - null
        - null
        - null
        - null
        rank: 1
        asin: B00PN11UNW
    SDTargetingRecommendationsV31:
      allOf:
      - $ref: '#/components/schemas/SDProductRecommendationsV31'
      - $ref: '#/components/schemas/SDCategoryRecommendations'
    SDProductRecommendationsV31:
      type: object
      properties:
        products:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended product targets
          items:
            $ref: '#/components/schemas/SDProductRecommendation'
    SDProductRecommendationsV32:
      type: object
      properties:
        products:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended product targets
          items:
            $ref: '#/components/schemas/SDProductRecommendationV32'
      example:
        products:
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
        - advertisedAsins:
          - null
          - null
          - null
          - null
          - null
          rank: 1
          asin: B00PN11UNW
    SDCategoryRecommendations:
      type: object
      properties:
        categories:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended category targets
          items:
            $ref: '#/components/schemas/SDCategoryRecommendation'
    SDCategoryRecommendationsV33:
      type: object
      properties:
        categories:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended category targets.
          items:
            $ref: '#/components/schemas/SDCategoryRecommendationV33'
    SDCategoryRecommendation:
      properties:
        category:
          $ref: '#/components/schemas/SDCategory'
        name:
          type: string
          description: The category name
        path:
          minItems: 1
          type: array
          description: The path of the category within the category catalogue.
          items:
            type: string
        targetableAsinCountRange:
          $ref: '#/components/schemas/SDCategoryRecommendation_targetableAsinCountRange'
        rank:
          minimum: 1
          type: integer
          description: "A rank to signify which recommendations are weighed more heavily,\
            \ with a lower rank signifying a stronger recommendation"
      description: A recommended category to target ads on
    SDCategoryRecommendationV33:
      properties:
        category:
          $ref: '#/components/schemas/SDCategory'
        name:
          type: string
          description: The category name
        translatedName:
          type: string
          description: "The translated category name by requested locale, field will\
            \ not be provided if locale is not provided or campaign localization service\
            \ is down."
        path:
          minItems: 1
          type: array
          description: The path of the category within the category catalogue.
          items:
            type: string
        translatedPath:
          minItems: 1
          type: array
          description: "The translated path of the category within the category catalogue\
            \ by requested locale, field will not be provided if locale is not provided\
            \ or campaign localization is down."
          items:
            type: string
        targetableAsinCountRange:
          $ref: '#/components/schemas/SDCategoryRecommendationV33_targetableAsinCountRange'
        rank:
          minimum: 1
          type: integer
          description: "A rank to signify which recommendations are weighed more heavily,\
            \ with a lower rank signifying a stronger recommendation."
      description: A recommended category to target ads on
      example:
        path:
        - path
        - path
        translatedPath:
        - translatedPath
        - translatedPath
        name: name
        rank: 1
        targetableAsinCountRange:
          rangeUpper: 1
          rangeLower: 6
        category: 7352105011
        translatedName: translatedName
    SDAudienceRecommendations:
      type: object
      properties:
        audiences:
          maxItems: 10
          minItems: 0
          type: array
          description: "List of recommended audience targets, broken down by audience\
            \ category"
          items:
            $ref: '#/components/schemas/SDAudienceCategoryRecommendations'
    SDAudienceCategoryRecommendations:
      properties:
        category:
          $ref: '#/components/schemas/SDAudienceCategory'
        audiences:
          maxItems: 1000
          minItems: 0
          type: array
          description: List of recommended standard Amazon audience targets
          items:
            $ref: '#/components/schemas/SDAudienceRecommendation'
      description: List of recommended standard Amazon audience targets of a specific
        audience category
      example:
        audiences:
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        - audience: "417464173123977686"
          name: name
          rank: 1
        category: In-Market
    SDAudienceCategory:
      type: string
      description: "An audience category determines the goal of the audience such\
        \ as In-market, Interest, Lifestyle and Life Event"
      example: In-Market
      enum:
      - In-market
      - Lifestyle
      - Interest
      - Life event
    SDAudienceRecommendation:
      properties:
        audience:
          $ref: '#/components/schemas/SDAudience'
        name:
          type: string
          description: The Amazon audience name
        rank:
          minimum: 1
          type: integer
          description: "A rank to signify which recommendations are weighed more heavily,\
            \ with a lower rank signifying a stronger recommendation"
      description: A recommended standard Amazon audience to target ads on
      example:
        audience: "417464173123977686"
        name: name
        rank: 1
    SDAudience:
      type: string
      description: The audience identifier
      example: "417464173123977686"
    SDContentCategoryRecommendations:
      properties:
        contentCategory:
          $ref: '#/components/schemas/SDContentCategory'
        name:
          type: string
          description: The content category name
          example: Drama
        rank:
          minimum: 1
          type: integer
          description: "A rank to signify which recommendations are weighed more heavily,\
            \ with a lower rank signifying a stronger recommendation"
      description: A recommended content category to target ads on
      example:
        name: Drama
        rank: 1
        contentCategory: amzn1.iab-content.647
    SDContentCategory:
      type: string
      description: The content category value
      example: amzn1.iab-content.647
    SDTactic:
      type: string
      description: |-
        The advertising tactic associated with the campaign. The following table lists available tactic names:
        |Tactic Name|Type|Description|
                |-----------|-----|-----------|
                |T00020 &nbsp;    |Products&nbsp;| Products: Choose individual products to show your ads in placements related to those products.<br>Categories: Choose individual categories to show your ads in placements related to those categories.
      example: T00030
      enum:
      - T00020
    SDTacticV31:
      type: string
      description: |-
        The advertising tactic associated with the campaign. The following table lists available tactic names:
        |Tactic Name|Type|Description|
                |-----------|-----|-----------|
                |T00020 &nbsp;    |Products&nbsp;| Products: Choose individual products to show your ads in placements related to those products.<br>Categories: Choose individual categories to show your ads in placements related to those categories.|
                |T00030&nbsp;|Audiences or Contextual Targeting &nbsp;|Select individual products, categories, refined categories, or audiences to show your ads.|
      example: T00030
      enum:
      - T00020
      - T00030
    SDGoalProduct:
      required:
      - asin
      properties:
        asin:
          $ref: '#/components/schemas/SDASIN'
      description: A product an advertisers wants to advertise. Recommendations will
        be made for specified goal products.
    SDAdvertisedProduct:
      properties:
        asin:
          $ref: '#/components/schemas/SDASIN'
        landingPageType:
          $ref: '#/components/schemas/SDLandingPageType'
        landingPageURL:
          $ref: '#/components/schemas/SDLandingPageURL'
      description: "Product that advertisers want to advertise. Recommendations will\
        \ be made for specified products. SDAdvertisedProduct can only contain either\
        \ asins or landing pages. If landingPageUrl is used, there can only be one\
        \ item for each request."
      example:
      - asin: B00PN11UNW
    SDLandingPageURL:
      type: string
      description: |-
        The URL where customers will land after clicking on its link. Must be provided if landingPageType field is set.
        This field is not supported when using asin field.
        ||Specifications|
        |------------------|------------------|
        |LandingPageType| Description|
        |OFF_AMAZON_LINK| The url should be in the format of https://www.****.com.|
    SDLandingPageType:
      type: string
      description: The type of the landingPage used. This field is not supported when
        using asin field.
      enum:
      - OFF_AMAZON_LINK
    SDBudgetRecommendationsRequest:
      required:
      - campaignIds
      properties:
        campaignIds:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of campaign ids for which to get budget recommendations
            and missed opportunities.
          example:
          - "5292131569371"
          - "5292131569372"
          items:
            type: string
      description: Request for budget recommendations.
    SDBudgetRecommendationsResponse:
      required:
      - budgetRecommendationsErrorResults
      - budgetRecommendationsSuccessResults
      properties:
        budgetRecommendationsSuccessResults:
          maxItems: 100
          minItems: 0
          type: array
          description: List of successful budget recommendation for campaigns.
          items:
            $ref: '#/components/schemas/SDBudgetRecommendation'
        budgetRecommendationsErrorResults:
          maxItems: 100
          minItems: 0
          type: array
          description: List of errors that occurred when generating budget recommendation.
          items:
            $ref: '#/components/schemas/SDBudgetRecommendationError'
      example:
        budgetRecommendationsSuccessResults:
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        - campaignId: "5292131569371"
          suggestedBudget: 350.12
          index: 0
          sevenDaysMissedOpportunities:
            estimatedMissedSalesLower: 200.75
            estimatedMissedSalesUpper: 400.75
            endDate: 2023-05-07T00:00:00.000+00:00
            estimatedMissedImpressionsLower: 50
            estimatedMissedClicksLower: 30
            estimatedMissedClicksUpper: 50
            estimatedMissedImpressionsUpper: 70
            startDate: 2023-05-01T00:00:00.000+00:00
            percentTimeInBudget: 60.5
            estimatedMissedViewableImpressionsLower: 70
            estimatedMissedViewableImpressionsUpper: 90
        budgetRecommendationsErrorResults:
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
        - code: "404"
          campaignId: "5292131569372"
          index: 1
          details: Budget recommendation is not found.
    SDBudgetRecommendation:
      required:
      - campaignId
      - index
      - sevenDaysMissedOpportunities
      - suggestedBudget
      properties:
        index:
          type: integer
          description: Correlate the recommendation to the campaign index in the request.
            Zero-based.
          example: 0
        campaignId:
          type: string
          description: Campaign id.
          example: "5292131569371"
        suggestedBudget:
          type: number
          description: Recommended budget for the campaign. This will be in local
            currency.
          example: 350.12
        sevenDaysMissedOpportunities:
          $ref: '#/components/schemas/SDSevenDaysMissedOpportunities'
      example:
        campaignId: "5292131569371"
        suggestedBudget: 350.12
        index: 0
        sevenDaysMissedOpportunities:
          estimatedMissedSalesLower: 200.75
          estimatedMissedSalesUpper: 400.75
          endDate: 2023-05-07T00:00:00.000+00:00
          estimatedMissedImpressionsLower: 50
          estimatedMissedClicksLower: 30
          estimatedMissedClicksUpper: 50
          estimatedMissedImpressionsUpper: 70
          startDate: 2023-05-01T00:00:00.000+00:00
          percentTimeInBudget: 60.5
          estimatedMissedViewableImpressionsLower: 70
          estimatedMissedViewableImpressionsUpper: 90
    SDSevenDaysMissedOpportunities:
      properties:
        startDate:
          type: string
          description: Start date of the missed opportunities date range (YYYY-MM-DD).
          format: date
          example: 2023-05-01
        endDate:
          type: string
          description: End date of the missed opportunities date range (YYYY-MM-DD).
          format: date
          example: 2023-05-07
        percentTimeInBudget:
          type: number
          description: Percentage of time the campaign is active with a budget.
          example: 60.5
        estimatedMissedSalesLower:
          type: number
          description: Lower bound of the estimated missed sales. This will be in
            local currency.
          example: 200.75
        estimatedMissedSalesUpper:
          type: number
          description: Upper bound of the estimated missed sales. This will be in
            local currency.
          example: 400.75
        estimatedMissedClicksLower:
          type: integer
          description: Lower bound of the estimated missed clicks.
          example: 30
        estimatedMissedClicksUpper:
          type: integer
          description: Upper bound of the estimated missed clicks.
          example: 50
        estimatedMissedImpressionsLower:
          type: integer
          description: Lower bound of the estimated missed impressions.
          example: 50
        estimatedMissedImpressionsUpper:
          type: integer
          description: Upper bound of the estimated missed impressions.
          example: 70
        estimatedMissedViewableImpressionsLower:
          type: integer
          description: Lower bound of the estimated missed viewable impressions for
            vCPM campaigns.
          example: 70
        estimatedMissedViewableImpressionsUpper:
          type: integer
          description: Upper bound of the estimated missed viewable impressions for
            vCPM campaigns.
          example: 90
      example:
        estimatedMissedSalesLower: 200.75
        estimatedMissedSalesUpper: 400.75
        endDate: 2023-05-07T00:00:00.000+00:00
        estimatedMissedImpressionsLower: 50
        estimatedMissedClicksLower: 30
        estimatedMissedClicksUpper: 50
        estimatedMissedImpressionsUpper: 70
        startDate: 2023-05-01T00:00:00.000+00:00
        percentTimeInBudget: 60.5
        estimatedMissedViewableImpressionsLower: 70
        estimatedMissedViewableImpressionsUpper: 90
    SDBudgetRecommendationError:
      required:
      - campaignId
      - code
      - details
      - index
      properties:
        index:
          type: integer
          description: Correlate the recommendation to the campaign index in the request.
            Zero-based.
          example: 1
        campaignId:
          type: string
          description: Campaign id.
          example: "5292131569372"
        code:
          type: string
          description: The HTTP status code of the response.
          example: "404"
        details:
          type: string
          description: A human-readable description of the response.
          example: Budget recommendation is not found.
      example:
        code: "404"
        campaignId: "5292131569372"
        index: 1
        details: Budget recommendation is not found.
    BrandSafetyDenyListDomainType:
      type: string
      description: The domain type.
      enum:
      - WEBSITE
      - APP
    BrandSafetyDenyListDomainState:
      type: string
      description: The state of the domain.
      default: ENABLED
      enum:
      - ENABLED
      - ARCHIVED
    BrandSafetyRequestStatus:
      type: object
      properties:
        requestId:
          type: string
          description: Request ID
        timestamp:
          type: string
          description: Request timestamp
        status:
          type: string
          description: The status of the request
          enum:
          - IN_PROGRESS
          - COMPLETED
          - FAILURE
        statusDetails:
          type: string
          description: Details related to the request status
      example:
        requestId: requestId
        statusDetails: statusDetails
        timestamp: timestamp
        status: IN_PROGRESS
    BrandSafetyGetResponse:
      properties:
        pagination:
          $ref: '#/components/schemas/BrandSafetyGetResponsePagination'
        domains:
          type: array
          description: List of Brand Safety Deny List Domains
          items:
            $ref: '#/components/schemas/BrandSafetyDenyListProcessedDomain'
      description: Response for Brand Safety Deny List GET requests
      example:
        pagination:
          total: 0
          offset: 1
          limit: 6
        domains:
        - createdAt: 2018-09-16T11:43:21Z
          name: name
          state: ENABLED
          lastModified: 2018-09-16T11:43:21Z
          type: WEBSITE
          domainId: 5
        - createdAt: 2018-09-16T11:43:21Z
          name: name
          state: ENABLED
          lastModified: 2018-09-16T11:43:21Z
          type: WEBSITE
          domainId: 5
    BrandSafetyGetResponsePagination:
      type: object
      properties:
        total:
          type: integer
          description: The total number of deny list domains created by the advertiser
        limit:
          type: integer
          description: The maximum number of deny list domains returned from GET request
        offset:
          type: integer
          description: The number of deny list domains skipped
      description: Response pagination info for Brand Safety Deny List GET requests
      example:
        total: 0
        offset: 1
        limit: 6
    BrandSafetyDenyListDomain:
      required:
      - name
      - type
      type: object
      properties:
        name:
          maxLength: 250
          type: string
          description: |
            The website or app identifier. This can be in the form of full domain (eg. 'example.com' or 'example.net'), or mobile app identifier (eg. 'com.example.app' for Android apps or '1234567890' for iOS apps)
        type:
          $ref: '#/components/schemas/BrandSafetyDenyListDomainType'
      example:
        name: example.com
        type: WEBSITE
    BrandSafetyDenyListProcessedDomain:
      type: object
      properties:
        domainId:
          type: integer
          description: The identifier of the Brand Safety List domain.
          format: int64
        name:
          maxLength: 250
          type: string
          description: |
            The website or app identifier. This can be in the form of full domain (eg. 'example.com' or 'example.net'), or mobile app identifier (eg. 'com.example.app' for Android apps or '1234567890' for iOS apps)
        type:
          $ref: '#/components/schemas/BrandSafetyDenyListDomainType'
        state:
          $ref: '#/components/schemas/BrandSafetyDenyListDomainState'
        createdAt:
          type: string
          description: The date time the domain was created at. Format YYYY-MM-ddT:HH:mm:ssZ
          format: date-time
          example: 2018-09-16T11:43:21Z
        lastModified:
          type: string
          description: The date time the domain was last modified. Format YYYY-MM-ddT:HH:mm:ssZ
          format: date-time
          example: 2018-09-16T11:43:21Z
      example:
        createdAt: 2018-09-16T11:43:21Z
        name: name
        state: ENABLED
        lastModified: 2018-09-16T11:43:21Z
        type: WEBSITE
        domainId: 5
    BrandSafetyPostRequest:
      required:
      - domains
      properties:
        domains:
          maxItems: 10000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BrandSafetyDenyListDomain'
      description: POST Request for Brand Safety
    BrandSafetyUpdateResponse:
      properties:
        requestId:
          type: string
          description: The identifier of the request
      description: Response for Brand Safety POST and DELETE requests
      example:
        requestId: requestId
    BrandSafetyDenyListDomainUpdateResultStatus:
      type: string
      description: The state of the domain.
      default: SUCCESS
      enum:
      - SUCCESS
      - FAILURE
    BrandSafetyRequestStatusResponse:
      type: object
      properties:
        requestStatus:
          $ref: '#/components/schemas/BrandSafetyRequestStatus'
      description: The status of the request.
      example:
        requestStatus:
          requestId: requestId
          statusDetails: statusDetails
          timestamp: timestamp
          status: IN_PROGRESS
    BrandSafetyListRequestStatusResponse:
      type: object
      properties:
        requestStatusList:
          type: array
          description: List of all requests' status.
          items:
            $ref: '#/components/schemas/BrandSafetyRequestStatus'
      description: List of all requests' status.
      example:
        requestStatusList:
        - requestId: requestId
          statusDetails: statusDetails
          timestamp: timestamp
          status: IN_PROGRESS
        - requestId: requestId
          statusDetails: statusDetails
          timestamp: timestamp
          status: IN_PROGRESS
    BrandSafetyRequestResultsResponse:
      type: object
      properties:
        results:
          type: array
          description: A list of results for the given requestId
          items:
            $ref: '#/components/schemas/BrandSafetyRequestResult'
      example:
        results:
        - name: name
          details: details
          domainId: 0
          status: SUCCESS
        - name: name
          details: details
          domainId: 0
          status: SUCCESS
    BrandSafetyRequestResult:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/BrandSafetyDenyListDomainUpdateResultStatus'
        details:
          type: string
          description: A human-readable description of the response.
        domainId:
          type: integer
          description: The identifier of the Brand Safety Deny List Domain.
          format: int64
        name:
          type: string
          description: The website or app identifier.
      example:
        name: name
        details: details
        domainId: 0
        status: SUCCESS
    SDTargetingBidRecommendationsRequestV31:
      required:
      - targetingClauses
      properties:
        products:
          maxItems: 10000
          minItems: 0
          type: array
          description: A list of products to tailor bid recommendations for category
            and audience based targeting clauses.
          items:
            $ref: '#/components/schemas/SDGoalProduct'
        targetingClauses:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of targeting clauses to receive bid recommendations
            for.
          items:
            $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV31_targetingClauses'
      description: Request for targeting bid recommendations.
      example:
        products:
        - asin: B01B8R6V2E
        targetingClauses:
        - targetingClause:
            expressionType: manual
            expression:
            - type: views
              value:
              - type: similarProduct
              - type: lookback
                value: "30"
    SDTargetingBidRecommendationsResponseV31:
      required:
      - bidRecommendations
      - costType
      properties:
        costType:
          $ref: '#/components/schemas/SDCostTypeV31'
        bidRecommendations:
          maxItems: 100
          minItems: 1
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/SDTargetingBidRecommendationsResponseItemSuccessV31'
            - $ref: '#/components/schemas/SDTargetingBidRecommendationsResponseItemFailureV31'
      description: Response to a request for targeting bid recommendations.
    SDCostTypeV31:
      type: string
      description: |-
        Determines what performance metric the bid recommendations will be optimized for.
        |Name|Description|
        |----|----------|-----------|
        |cpc|The bid recommendations will be optimized for clicks triggered by the ad.|
        |vcpm|The bid recommendations will be optimized for viewed impressions triggered by the ad. $1 is the minimum bid for vCPM.|
      enum:
      - cpc
      - vcpm
    SDCreativeType:
      type: string
      description: "The type of the associated creative. If the field is empty or\
        \ null, a default value of IMAGE will be used. Only supports one type (VIDEO\
        \ or IMAGE) at a time."
      nullable: true
      enum:
      - IMAGE
      - VIDEO
    SDTargetingBidRecommendationsResponseItemSuccessV31:
      required:
      - code
      description: A recommended bid range to use for a target.
      allOf:
      - properties:
          code:
            type: string
            description: The HTTP status code of this item.
            example: "200"
        description: Success response for corresponding targeting clause on the request.
      - $ref: '#/components/schemas/SDBidRecommendationV31'
    SDTargetingBidRecommendationsResponseItemFailureV31:
      required:
      - code
      - details
      properties:
        code:
          type: string
          description: The HTTP status code of this item.
          example: "400"
        details:
          type: string
          description: A human-readable description of this item on error.
          example: Targeting expression does not conform to language specific rules.
      description: Failed bid recommendation response.
    SDTargetingClauseV31:
      required:
      - expression
      - expressionType
      type: object
      properties:
        expressionType:
          type: string
          description: Tactic T00020 ad groups only allow manual targeting.
          enum:
          - manual
          - auto
        expression:
          $ref: '#/components/schemas/SDTargetingExpressionV31'
      description: The targeting clause
    SDTargetingClauseV32:
      required:
      - expression
      - expressionType
      type: object
      properties:
        expressionType:
          type: string
          description: Tactic T00020 ad groups only allow manual targeting.
          enum:
          - manual
          - auto
        expression:
          $ref: '#/components/schemas/SDTargetingExpressionV32'
      description: The targeting clause
    SDBidRecommendationV31:
      required:
      - rangeLower
      - rangeUpper
      - recommended
      properties:
        rangeLower:
          type: number
          description: The lowest recommended bid to use to win an ad placement for
            this target.
          example: 0.5
        rangeUpper:
          type: number
          description: The highest recommended bid to use to win an ad placement for
            this target.
          example: 1
        recommended:
          type: number
          description: The recommended bid to use to win an ad placement for this
            target.
          example: 0.75
      description: A recommended bid range to use for a target.
    SDTargetingExpressionV31:
      minItems: 1
      type: array
      description: |-
        The targeting expression to match against.

        ------- Applicable to contextual targeting (T00020) -------
        * A 'TargetingExpression' in a contextual targeting campaign can only contain 'TargetingPredicate' components.
        * Expressions must specify either a category predicate or an ASIN predicate, but never both.
        * Only one category may be specified per targeting expression.
        * Only one brand may be specified per targeting expression.
        * Only one asin may be specified per targeting expression.
        * To exclude a brand from a targeting expression you must create a negative targeting expression in the same ad group as the positive targeting expression.

        ------- Applicable to audiences or contextual targeting (T00030) -------
        * A 'TargetingExpression' in a audiences or contextual campaign can contain any target, including 'TargetingPredicate', 'ContentTargetingPredicate', or 'TargetingPredicateNested'.
      items:
        $ref: '#/components/schemas/SDTargetExpressionV31'
      x-schema-name: SDTargetingExpressionV31
    SDTargetingExpressionV32:
      minItems: 1
      type: array
      description: |-
        The targeting expression to match against.

        ------- Applicable to contextual targeting (T00020) -------
        * A 'TargetingExpression' in a contextual targeting campaign can only contain 'TargetingPredicate' or 'ContentTargetingPredicate' components.
        * Expressions must specify either a category predicate or an ASIN predicate, but never both.
        * Only one category may be specified per targeting expression.
        * Only one brand may be specified per targeting expression.
        * Only one asin may be specified per targeting expression.
        * To exclude a brand from a targeting expression you must create a negative targeting expression in the same ad group as the positive targeting expression.

        ------- Applicable to audiences or contextual targeting (T00030) -------
        * A 'TargetingExpression' in a audiences or contextual campaign can contain any target, including 'TargetingPredicate', 'ContentTargetingPredicate', or 'TargetingPredicateNested'.
      items:
        $ref: '#/components/schemas/SDTargetExpressionV32'
      x-schema-name: SDTargetingExpressionV32
    SDTargetExpressionV31:
      oneOf:
      - $ref: '#/components/schemas/SDTargetingPredicateV31'
      - $ref: '#/components/schemas/SDTargetingPredicateNestedV31'
    SDTargetExpressionV32:
      oneOf:
      - $ref: '#/components/schemas/SDTargetingPredicateV31'
      - $ref: '#/components/schemas/SDTargetingPredicateNestedV31'
      - $ref: '#/components/schemas/SDContentTargetingPredicateV31'
    SDTargetingPredicateV31:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - asinSameAs
          - asinCategorySameAs
          - asinBrandSameAs
          - asinPriceBetween
          - asinPriceGreaterThan
          - asinPriceLessThan
          - asinReviewRatingLessThan
          - asinReviewRatingGreaterThan
          - asinReviewRatingBetween
          - asinIsPrimeShippingEligible
          - asinAgeRangeSameAs
          - asinGenreSameAs
        value:
          type: string
          description: The value to be targeted.
          example: B0123456789
      description: |-
        A predicate to match against in the Targeting Expression (only applicable to contextual targeting - T00020).

        * All IDs passed for category and brand-targeting predicates must be valid IDs in the Amazon Ads browse system.
        * Brand, price, and review predicates are optional and may only be specified if category is also specified.
        * Review predicates accept numbers between 0 and 5 and are inclusive.
        * When using either of the 'between' strings to construct a targeting expression the format of the string is 'double-double' where the first double must be smaller than the second double. Prices are not inclusive.
    SDTargetingPredicateNestedV31:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          enum:
          - views
          - audience
          - purchases
        value:
          type: array
          items:
            $ref: '#/components/schemas/SDTargetingPredicateBaseV31'
      description: |-
        A behavioral event and list of targeting predicates that represents an audience to target (only applicable to audience targeting - T00030).

        * For manual ASIN-grain targeting, the value array must contain only, 'exactProduct', 'similarProduct', 'relatedProduct' and 'lookback' TargetingPredicateBase components. The 'lookback' is mandatory and the value should be set to '7', '14', '30', '60', '90', '180' or '365'.
        * For manual Category-grain targeting, the value array must contain a 'lookback' and 'asinCategorySameAs' TargetingPredicateBase component, which can be further refined with optional brand, price, star-rating and shipping eligibility refinements. The 'lookback' is mandatory and the value should be set to '7', '14', '30', '60', '90', '180' or '365'.
        * For manual Category-grain targeting, the value array must contain a 'lookback' and 'asinCategorySameAs' TargetingPredicateBase component, which can be further refined with optional brand, price, star-rating and shipping eligibility refinements.
        * For Amazon Audiences targeting, the TargetingPredicateNested type should be set to 'audience' and the value array should include one TargetingPredicateBase component with type set to 'audienceSameAs'.
    SDContentTargetingPredicateV31:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          enum:
          - contentCategorySameAs
        value:
          type: string
          description: The value to be targeted.
          example: amzn1.iab-content.325
      description: A predicate to match against in the content targeting expression.
    SDTargetingPredicateBaseV31:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - asinCategorySameAs
          - asinBrandSameAs
          - asinPriceBetween
          - asinPriceGreaterThan
          - asinPriceLessThan
          - asinReviewRatingLessThan
          - asinReviewRatingGreaterThan
          - asinReviewRatingBetween
          - similarProduct
          - relatedProduct
          - exactProduct
          - asinIsPrimeShippingEligible
          - asinAgeRangeSameAs
          - asinGenreSameAs
          - audienceSameAs
          - lookback
        value:
          type: string
          description: The value to be targeted.
          example: B0123456789
      description: |-
        A predicate to match against inside the TargetingPredicateNested component (only applicable to audience targeting - T00030).

        * All IDs passed for category and brand-targeting predicates must be valid IDs in the Amazon Ads browse system.
        * Brand, price, and review predicates are optional and may only be specified if category is also specified.
        * Review predicates accept numbers between 0 and 5 and are inclusive.
        * When using either of the 'between' strings to construct a targeting expression the format of the string is 'double-double' where the first double must be smaller than the second double. Prices are not inclusive.
        * The exactProduct, similarProduct, relatedProduct, and negative types do not utilize the value field.
        * The only type currently applicable to Amazon Audiences targeting is 'audienceSameAs'.
    SDTargetingBidRecommendationsRequestV32:
      required:
      - bidOptimization
      - costType
      - targetingClauses
      properties:
        products:
          maxItems: 10000
          minItems: 0
          type: array
          description: A list of products to tailor bid recommendations for category
            and audience based targeting clauses.
          items:
            $ref: '#/components/schemas/SDGoalProduct'
        bidOptimization:
          $ref: '#/components/schemas/SDBidOptimizationV32'
        costType:
          $ref: '#/components/schemas/SDCostTypeV31'
        targetingClauses:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of targeting clauses to receive bid recommendations
            for.
          items:
            $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV31_targetingClauses'
      description: Request for targeting bid recommendations.
      example:
        products:
        - asin: B01B8R6V2E
        bidOptimization: reach
        costType: vcpm
        targetingClauses:
        - targetingClause:
            expressionType: manual
            expression:
            - type: views
              value:
              - type: similarProduct
              - type: lookback
                value: "30"
    SDTargetingBidRecommendationsRequestV33:
      required:
      - bidOptimization
      - costType
      - targetingClauses
      properties:
        products:
          maxItems: 10000
          minItems: 0
          type: array
          description: A list of products to tailor bid recommendations for category
            and audience based targeting clauses.
          items:
            $ref: '#/components/schemas/SDGoalProduct'
        bidOptimization:
          $ref: '#/components/schemas/SDBidOptimizationV32'
        costType:
          $ref: '#/components/schemas/SDCostTypeV31'
        creativeType:
          $ref: '#/components/schemas/SDCreativeType'
        targetingClauses:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of targeting clauses to receive bid recommendations
            for.
          items:
            $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV31_targetingClauses'
      description: Request for targeting bid recommendations.
      example:
        products:
        - asin: B01B8R6V2E
        bidOptimization: reach
        costType: vcpm
        creativeType: VIDEO
        targetingClauses:
        - targetingClause:
            expressionType: manual
            expression:
            - type: views
              value:
              - type: similarProduct
              - type: lookback
                value: "30"
    SDTargetingBidRecommendationsRequestV34:
      required:
      - bidOptimization
      - costType
      - targetingClauses
      properties:
        products:
          maxItems: 10000
          minItems: 0
          type: array
          description: |-
            A list of products to tailor bid recommendations for category and audience based targeting clauses.
            This array must contain consistent fields of either asins or landing pages (when linking to other pages), these cannot be mixed for any given request.
            If landingPageUrl is used, only one item is allowed for the list.
          example:
          - asin: B00PN11UNW
          items:
            $ref: '#/components/schemas/SDGoalProduct'
        bidOptimization:
          $ref: '#/components/schemas/SDBidOptimizationV32'
        costType:
          $ref: '#/components/schemas/SDCostTypeV31'
        creativeType:
          $ref: '#/components/schemas/SDCreativeType'
        targetingClauses:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of targeting clauses to receive bid recommendations
            for.
          items:
            $ref: '#/components/schemas/SDTargetingBidRecommendationsRequestV34_targetingClauses'
      description: Request for targeting bid recommendations.
      example:
        products:
        - asin: B01B8R6V2E
        bidOptimization: reach
        costType: vcpm
        creativeType: VIDEO
        targetingClauses:
        - targetingClause:
            expressionType: manual
            expression:
            - type: views
              value:
              - type: similarProduct
              - type: lookback
                value: "30"
    SDTargetingBidRecommendationsResponseV32:
      required:
      - bidOptimization
      - bidRecommendations
      - costType
      properties:
        bidOptimization:
          $ref: '#/components/schemas/SDBidOptimizationV32'
        costType:
          $ref: '#/components/schemas/SDCostTypeV31'
        bidRecommendations:
          maxItems: 100
          minItems: 1
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/SDTargetingBidRecommendationsResponseItemSuccessV31'
            - $ref: '#/components/schemas/SDTargetingBidRecommendationsResponseItemFailureV31'
      description: Response to a request for targeting bid recommendations.
      example:
        bidOptimization: reach
        bidRecommendations:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        costType: cpc
    SDBidOptimizationV32:
      type: string
      description: "Determines what the recommended bids will be optimized for. \n\
        \n|Name|CostType|Description|\n|----|--------|-----------|\n|reach|vcpm|Optimize\
        \ for viewable impressions. $1 is the minimum bid for vCPM.|\n|clicks|cpc|Optimize\
        \ for page visits|\n|conversions|cpc|Optimize for conversion|"
      enum:
      - reach
      - clicks
      - conversions
    RuleId:
      type: string
      description: The identifier of the optimization rule.
    PlacementType:
      type: string
      description: |-
        Placement type where the rule should be applied, defaults to `ALL`(including home page, detail page, twitch and offsite).

        **Future** More available placemenTypes will be supported.
      default: ALL
      enum:
      - ALL
    RuleCondition:
      required:
      - comparisonOperator
      - metricName
      - threshold
      type: object
      properties:
        metricName:
          type: string
          description: |-
            The name of the metric.
            Supported rule metrics and corresponding supported comparisonOperators:
            |      MetricName      |ComparisonOperator  |Description|
            |------------------|--------------------|-------------------|
            |COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS     |              LESS_THAN_OR_EQUAL_TO             |Maximize viewable impressions while cost per 1000 views less than or equal to `threshold`|
            |COST_PER_CLICK    |              LESS_THAN_OR_EQUAL_TO            |Maximize page visits while cost per click less than or equal to `threshold`|
            |COST_PER_ORDER    |              LESS_THAN_OR_EQUAL_TO            |Maximize viewable impressions/page visits/conversion while cost per order less than or equal to `threshold`|
          enum:
          - COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS
          - COST_PER_CLICK
          - COST_PER_ORDER
        comparisonOperator:
          type: string
          description: The comparison operator.
          enum:
          - LESS_THAN_OR_EQUAL_TO
        threshold:
          type: number
          description: |-
            The value of the threshold associated with the metric. The threshold values has defined minimums depending on the metric names in the following table:
            |                  MetricName            | Minimum of `threshold` Value  |
            |----------------------------------------|-----------------------------------|
            |COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS  | 1                                 |
            |COST_PER_CLICK                          | 0.5                               |
            |COST_PER_ORDER                          | 5                                 |
          format: double
          example: 1.5
      description: |-
        A rule condition that defines the advertiser's intent for the outcome of the rule.
        Certain actions are performed by the product to achieve and maintain the rule condition.
    BaseOptimizationRule:
      type: object
      properties:
        state:
          type: string
          description: The state of the optimization rule.
          enum:
          - enabled
          - "paused [COMING LATER]"
        ruleName:
          type: string
          description: The name of the optimization rule.
        ruleConditions:
          maxItems: 1
          minItems: 1
          type: array
          description: "A list of rule conditions that define the advertiser's intent\
            \ for the outcome of the rule. The rule uses 'AND' logic to combine every\
            \ condition in this list, and will validate the combination when the rule\
            \ is created or updated."
          items:
            $ref: '#/components/schemas/RuleCondition'
    OptimizationRule:
      allOf:
      - $ref: '#/components/schemas/BaseOptimizationRule'
      - type: object
        properties:
          ruleId:
            $ref: '#/components/schemas/RuleId'
    GetOptimizationRuleResponse:
      type: object
      properties:
        optimizationRule:
          $ref: '#/components/schemas/OptimizationRule'
        adGroupIds:
          maxItems: 1
          minItems: 1
          type: array
          description: A list of adGroup identifiers that the optimization rule associates
            with.
          items:
            $ref: '#/components/schemas/AdGroupId'
    CreateOptimizationRule:
      required:
      - ruleConditions
      - state
      example:
        state: enabled
        ruleName: Optimization Rule Name
        ruleConditions:
        - metricName: COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS
          comparisonOperator: LESS_THAN_OR_EQUAL_TO
          threshold: 1.5
      allOf:
      - $ref: '#/components/schemas/BaseOptimizationRule'
    UpdateOptimizationRule:
      required:
      - ruleId
      allOf:
      - $ref: '#/components/schemas/BaseOptimizationRule'
      - type: object
        properties:
          ruleId:
            $ref: '#/components/schemas/RuleId'
    OptimizationRuleResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        description:
          type: string
          description: A human-readable description of the response.
        ruleId:
          $ref: '#/components/schemas/RuleId'
      example:
        code: code
        description: description
        ruleId: ruleId
    SingleOptimizationRuleAssociationResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        details:
          type: string
          description: A human-readable description of the response.
        optimizationRuleId:
          $ref: '#/components/schemas/RuleId'
      example:
        code: code
        details: details
        optimizationRuleId: optimizationRuleId
    OptimizationRuleAssociationResponse:
      type: object
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        responses:
          maxItems: 1
          type: array
          description: "An array of response objects. Each response object has code,\
            \ details and optimizationRuleId."
          items:
            $ref: '#/components/schemas/SingleOptimizationRuleAssociationResponse'
      example:
        code: code
        responses:
        - code: code
          details: details
          optimizationRuleId: optimizationRuleId
    CreateAssociatedOptimizationRulesRequest:
      type: object
      properties:
        optimizationRuleIds:
          maxItems: 1
          minItems: 1
          type: array
          description: A list of optimization rule identifiers.
          items:
            $ref: '#/components/schemas/RuleId'
    SDForecastRequest:
      required:
      - adGroup
      - campaign
      - productAds
      - targetingClauses
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        adGroup:
          $ref: '#/components/schemas/AdGroup'
        optimizationRules:
          maxItems: 100
          minItems: 0
          type: array
          description: "A list of SD optimization rules. Forecast will be affected\
            \ by the optimization strategy rules.  Currently, supported rule metrics\
            \ by forecast are `COST_PER_CLICK`, `COST_PER_THOUSAND_VIEWABLE_IMPRESSIONS`\
            \ and `COST_PER_ORDER`."
          items:
            $ref: '#/components/schemas/OptimizationRule'
        productAds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProductAd'
        targetingClauses:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of SD targeting clauses.
          items:
            $ref: '#/components/schemas/SDForecastRequestTargetingClause'
        negativeTargetingClauses:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of SD negative targeting clauses.
          items:
            $ref: '#/components/schemas/NegativeTargetingClause'
        locationExpressions:
          maxItems: 100
          minItems: 0
          type: array
          description: A list of location expressions. Only applicable for advertisers
            using landingPageType of OFF_AMAZON_LINK.
          items:
            $ref: '#/components/schemas/LocationExpression'
      description: |-
        Request payload for SD forecasting. Below are required and optional fields. Fields not listed will not impact forecast results.
        |Field              |Object            |Required|
        |-------------------|------------------|--------|
        |startDate          |Campaign          |required|
        |endDate            |Campaign          |optional|
        |costType           |Campaign          |optional|
        |bidOptimization    |AdGroup           |required|
        |creativeType       |AdGroup           |optional|
        |defaultBid         |AdGroup           |optional|
        |asin               |ProductAds        |required for vendors|
        |sku                |ProductAds        |required for sellers|
        |bid                |TargetingClauses  |required when defaultBid is not set|
        |expression         |TargetingClauses  |required|
        |ruleConditions     |OptimizationRules |optional|
    SDForecastResponse:
      type: object
      properties:
        bidOptimization:
          type: string
        lifetimeForecasts:
          maxItems: 4
          minItems: 1
          type: array
          description: Forecasts for campaign start date and end date. Default end
            date is start date plus 7 days.
          items:
            $ref: '#/components/schemas/Forecast'
        weeklyForecasts:
          maxItems: 4
          minItems: 1
          type: array
          description: Weekly average forecasts.
          items:
            $ref: '#/components/schemas/Forecast'
        dailyForecasts:
          maxItems: 4
          minItems: 1
          type: array
          description: Daily average forecasts.
          items:
            $ref: '#/components/schemas/Forecast'
        curves:
          maxItems: 10
          minItems: 0
          type: array
          description: Forecasting curves.
          items:
            $ref: '#/components/schemas/Curve'
        forecastStatus:
          $ref: '#/components/schemas/ForecastStatus'
      description: Response to a request for SD forecasting.
      example:
        bidOptimization: bidOptimization
        curves:
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        - meetThreshold: true
          graph: BUDGET
          points:
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
          - isFocus: true
            x:
            - value: ""
            - value: ""
            "y":
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
            - label: CLICKS
              value:
                min: ""
                max: ""
                mean: ""
        lifetimeForecasts:
        - metric: IMPRESSIONS
          value:
            min: 0
            max: 6
        - metric: IMPRESSIONS
          value:
            min: 0
            max: 6
        - metric: IMPRESSIONS
          value:
            min: 0
            max: 6
        - metric: IMPRESSIONS
          value:
            min: 0
            max: 6
        forecastStatus: IMPRESSION_TARGETING_TOO_NARROW
        weeklyForecasts:
        - null
        - null
        - null
        - null
        dailyForecasts:
        - null
        - null
        - null
        - null
    Forecast:
      type: object
      properties:
        metric:
          type: string
          description: |-
            Describes which metric is forecasted.
            |Name|Description|
            |-----------|------------------------|
            |IMPRESSIONS| Available impressions|
            |REACH      | Delivered viewable impressions|
            |CLICKS     | Delivered page visits|
            |CONVERSIONS| [Preview only] Delivered conversions|
          enum:
          - IMPRESSIONS
          - REACH
          - CLICKS
          - CONVERSIONS
        value:
          $ref: '#/components/schemas/ForecastRange'
      description: "Forecast impressions, clicks, reach, or conversions."
      example:
        metric: IMPRESSIONS
        value:
          min: 0
          max: 6
    ForecastRange:
      properties:
        min:
          type: integer
          format: int64
        max:
          type: integer
          format: int64
      description: Forecast range values.
      example:
        min: 0
        max: 6
    Curve:
      type: object
      properties:
        meetThreshold:
          type: boolean
          description: True if the budget utilization is good to show the curve.
        graph:
          type: string
          description: Type of Graph.
          enum:
          - BUDGET
        points:
          maxItems: 100
          minItems: 50
          type: array
          items:
            $ref: '#/components/schemas/CurvePoint'
      description: Forecast curve of a certain type. The type could be budget vs forecast
        outcome.
      example:
        meetThreshold: true
        graph: BUDGET
        points:
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
        - isFocus: true
          x:
          - value: ""
          - value: ""
          "y":
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
          - label: CLICKS
            value:
              min: ""
              max: ""
              mean: ""
    CurvePoint:
      type: object
      properties:
        isFocus:
          type: boolean
          description: If this point is the point with the focus circle.
        x:
          type: array
          description: x-axis value.
          items:
            $ref: '#/components/schemas/CurvePointFixedValue'
        "y":
          maxItems: 2
          minItems: 0
          type: array
          description: y-axis value of multiple KPI types.
          items:
            $ref: '#/components/schemas/CurvePointRangedValue'
      description: A single point on a curve.
      example:
        isFocus: true
        x:
        - value: ""
        - value: ""
        "y":
        - label: CLICKS
          value:
            min: ""
            max: ""
            mean: ""
        - label: CLICKS
          value:
            min: ""
            max: ""
            mean: ""
    CurvePointFixedValue:
      type: object
      properties:
        value:
          format: double
      example:
        value: ""
    CurvePointRangedValue:
      type: object
      properties:
        label:
          type: string
          description: KPI label.
          enum:
          - CLICKS
          - REACH
        value:
          $ref: '#/components/schemas/ForecastRangeDouble'
      description: A ranged value.
      example:
        label: CLICKS
        value:
          min: ""
          max: ""
          mean: ""
    ForecastRangeDouble:
      type: object
      properties:
        min:
          description: Lower bound.
          format: double
        mean:
          description: Geometric mean of the upper and lower bounds.
          format: double
        max:
          description: Upper bound.
          format: double
      description: A range of value.
      example:
        min: ""
        max: ""
        mean: ""
    ForecastStatus:
      type: string
      description: "It contains the forecast status. The IMPRESSION_TARGETING_TOO_NARROW\
        \ field means the targeting  clauses are too narrow, and the IMPRESSION_TARGETING_TOO_BROAD\
        \ field means the targeting clauses are too broad,  so our inventory impression\
        \ forecast won't provide any useful information. The COMPLETE field means\
        \ all the forecasts are complete."
      enum:
      - IMPRESSION_TARGETING_TOO_NARROW
      - IMPRESSION_TARGETING_TOO_BROAD
      - COMPLETE
    SDForecastErrorResponse:
      properties:
        code:
          type: string
          description: The HTTP status code of the response.
        details:
          type: string
          description: A human-readable description of the response.
    CreateSDBudgetRulesRequest:
      type: object
      properties:
        budgetRulesDetails:
          maxItems: 25
          type: array
          description: A list of budget rule details.
          items:
            $ref: '#/components/schemas/SDBudgetRuleDetails'
    CreateBudgetRulesResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/BudgetRuleResponse'
      example:
        responses:
        - code: code
          details: details
          ruleId: ruleId
          associatedCampaignIds:
          - associatedCampaignIds
          - associatedCampaignIds
        - code: code
          details: details
          ruleId: ruleId
          associatedCampaignIds:
          - associatedCampaignIds
          - associatedCampaignIds
    BudgetRuleError:
      type: object
      properties:
        code:
          type: string
          description: An enumerated error code for machine use.
        details:
          type: string
          description: A human-readable description of the response.
      description: The Error Response Object.
    SDBudgetHistory:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/SDRuleBasedBudget'
    SDRuleBasedBudget:
      type: object
      properties:
        executionTime:
          type: number
          description: Epoch time of budget rule execution.
          format: int64
        appliedRule:
          $ref: '#/components/schemas/SDBudgetRule'
        ruleBasedBudgetValue:
          type: number
          description: The budget value.
        dailyBudgetValue:
          type: number
          description: The daily budget value.
        performanceMetric:
          $ref: '#/components/schemas/PerformanceMetricValue'
    GetSDBudgetRuleResponse:
      type: object
      properties:
        budgetRule:
          $ref: '#/components/schemas/SDBudgetRule'
      example:
        budgetRule:
          ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
    GetSDBudgetRulesForAdvertiserResponse:
      type: object
      properties:
        budgetRulesForAdvertiserResponse:
          maxItems: 30
          minItems: 0
          type: array
          description: A list of rules created by the advertiser.
          items:
            $ref: '#/components/schemas/SDBudgetRule'
        nextToken:
          type: string
          description: "To retrieve the next page of results, call the same operation\
            \ and specify this token in the request. If the `nextToken` field is empty,\
            \ there are no further results."
      example:
        budgetRulesForAdvertiserResponse:
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        nextToken: nextToken
    UpdateSDBudgetRulesRequest:
      type: object
      properties:
        budgetRulesDetails:
          maxItems: 25
          type: array
          description: A list of budget rule details.
          items:
            $ref: '#/components/schemas/SDBudgetRule'
      description: Request object for updating budget rule for SD campaign
    UpdateBudgetRulesResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/BudgetRuleResponse'
      example:
        responses:
        - code: code
          details: details
          ruleId: ruleId
          associatedCampaignIds:
          - associatedCampaignIds
          - associatedCampaignIds
        - code: code
          details: details
          ruleId: ruleId
          associatedCampaignIds:
          - associatedCampaignIds
          - associatedCampaignIds
    SDBudgetRuleDetails:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/RuleDuration'
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        ruleType:
          $ref: '#/components/schemas/SDRuleType'
        budgetIncreaseBy:
          $ref: '#/components/schemas/budgetIncreaseBy'
        name:
          maxLength: 355
          type: string
          description: The budget rule name. Required to be unique within a campaign.
        performanceMeasureCondition:
          $ref: '#/components/schemas/PerformanceMeasureCondition'
      description: Object representing details of a budget rule for SD campaign
      example:
        duration:
          eventTypeRuleDuration:
            eventId: eventId
            endDate: endDate
            eventName: eventName
            startDate: startDate
          dateRangeTypeRuleDuration:
            endDate: endDate
            startDate: startDate
        recurrence:
          intraDaySchedule:
          - startTime: startTime
            endTime: endTime
          type: DAILY
          daysOfWeek:
          - MONDAY
          - MONDAY
        ruleType: SCHEDULE
        budgetIncreaseBy:
          type: PERCENT
          value: 1.4658129805029452
        name: name
        performanceMeasureCondition:
          metricName: ACOS
          comparisonOperator: GREATER_THAN
          threshold: 5.962133916683182
    BudgetRuleResponse:
      type: object
      properties:
        code:
          type: string
          description: An enumerated success or error code for machine use.
        details:
          type: string
          description: "A human-readable description of the error, if unsuccessful"
        ruleId:
          type: string
          description: The rule identifier.
        associatedCampaignIds:
          type: array
          items:
            type: string
            description: The campaign identifier for which rule based budget may get
              updated
      example:
        code: code
        details: details
        ruleId: ruleId
        associatedCampaignIds:
        - associatedCampaignIds
        - associatedCampaignIds
    SDBudgetRule:
      required:
      - ruleId
      type: object
      properties:
        ruleState:
          $ref: '#/components/schemas/state'
        lastUpdatedDate:
          type: number
          description: Epoch time of budget rule update. Read-only.
          format: int64
        createdDate:
          type: number
          description: Epoch time of budget rule creation. Read-only.
          format: int64
        ruleDetails:
          $ref: '#/components/schemas/SDBudgetRuleDetails'
        ruleId:
          type: string
          description: The budget rule identifier.
        ruleStatus:
          type: string
          description: The budget rule status. Read-only.
      example:
        ruleState: ACTIVE
        lastUpdatedDate: 0.8008281904610115
        createdDate: 6.027456183070403
        ruleDetails:
          duration:
            eventTypeRuleDuration:
              eventId: eventId
              endDate: endDate
              eventName: eventName
              startDate: startDate
            dateRangeTypeRuleDuration:
              endDate: endDate
              startDate: startDate
          recurrence:
            intraDaySchedule:
            - startTime: startTime
              endTime: endTime
            type: DAILY
            daysOfWeek:
            - MONDAY
            - MONDAY
          ruleType: SCHEDULE
          budgetIncreaseBy:
            type: PERCENT
            value: 1.4658129805029452
          name: name
          performanceMeasureCondition:
            metricName: ACOS
            comparisonOperator: GREATER_THAN
            threshold: 5.962133916683182
        ruleId: ruleId
        ruleStatus: ruleStatus
    SDGetAssociatedCampaignsResponse:
      type: object
      properties:
        associatedCampaigns:
          maxItems: 30
          minItems: 0
          type: array
          description: A list of campaigns that are associated to this budget rule.
          items:
            $ref: '#/components/schemas/AssociatedCampaign'
        nextToken:
          type: string
          description: "To retrieve the next page of results, call the same operation\
            \ and specify this token in the request. If the `nextToken` field is empty,\
            \ there are no further results."
      example:
        associatedCampaigns:
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        - campaignId: campaignId
          ruleStatus: ruleStatus
          campaignName: campaignName
        nextToken: nextToken
    AssociatedCampaign:
      required:
      - campaignId
      - campaignName
      - ruleStatus
      type: object
      properties:
        campaignId:
          type: string
          description: The campaign identifier.
        ruleStatus:
          type: string
          description: The budget rule evaluation status for this campaign. Read-only.
        campaignName:
          type: string
          description: The campaign name.
      example:
        campaignId: campaignId
        ruleStatus: ruleStatus
        campaignName: campaignName
    AssociatedBudgetRuleResponse:
      type: object
      properties:
        code:
          type: string
          description: An enumerated success or error code for machine use.
        details:
          type: string
          description: "A human-readable description of the error, if unsuccessful"
        ruleId:
          type: string
          description: The budget rule identifier.
      example:
        code: code
        details: details
        ruleId: ruleId
    DisassociateAssociatedBudgetRuleResponse:
      type: object
    CreateAssociatedBudgetRulesRequest:
      type: object
      properties:
        budgetRuleIds:
          maxItems: 25
          type: array
          description: A list of budget rule identifiers.
          items:
            type: string
    CreateAssociatedBudgetRulesResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/AssociatedBudgetRuleResponse'
      example:
        responses:
        - code: code
          details: details
          ruleId: ruleId
        - code: code
          details: details
          ruleId: ruleId
    SDListAssociatedBudgetRulesResponse:
      type: object
      properties:
        associatedRules:
          type: array
          description: A list of associated budget rules.
          items:
            $ref: '#/components/schemas/SDBudgetRule'
      example:
        associatedRules:
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
        - ruleState: ACTIVE
          lastUpdatedDate: 0.8008281904610115
          createdDate: 6.027456183070403
          ruleDetails:
            duration:
              eventTypeRuleDuration:
                eventId: eventId
                endDate: endDate
                eventName: eventName
                startDate: startDate
              dateRangeTypeRuleDuration:
                endDate: endDate
                startDate: startDate
            recurrence:
              intraDaySchedule:
              - startTime: startTime
                endTime: endTime
              type: DAILY
              daysOfWeek:
              - MONDAY
              - MONDAY
            ruleType: SCHEDULE
            budgetIncreaseBy:
              type: PERCENT
              value: 1.4658129805029452
            name: name
            performanceMeasureCondition:
              metricName: ACOS
              comparisonOperator: GREATER_THAN
              threshold: 5.962133916683182
          ruleId: ruleId
          ruleStatus: ruleStatus
    state:
      type: string
      description: The budget rule state.
      enum:
      - ACTIVE
      - PAUSED
    PerformanceMetricValue:
      type: object
      properties:
        name:
          type: string
          description: Name of the performance metric
        value:
          type: number
          description: Value of the performance metric
          format: double
      description: An object giving the name of the performance metric and its value
        when the rule was evaluated
    RuleDuration:
      type: object
      properties:
        eventTypeRuleDuration:
          $ref: '#/components/schemas/EventTypeRuleDuration'
        dateRangeTypeRuleDuration:
          $ref: '#/components/schemas/DateRangeTypeRuleDuration'
      example:
        eventTypeRuleDuration:
          eventId: eventId
          endDate: endDate
          eventName: eventName
          startDate: startDate
        dateRangeTypeRuleDuration:
          endDate: endDate
          startDate: startDate
    Recurrence:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RecurrenceType'
        daysOfWeek:
          type: array
          description: Object representing days of the week for weekly type rule.
            It is not required for daily recurrence type
          items:
            $ref: '#/components/schemas/DayOfWeek'
        intraDaySchedule:
          maxItems: 1
          type: array
          description: List of objects representing start and end time of desired
            intra-day budget rule window
          items:
            $ref: '#/components/schemas/timeOfDay'
      example:
        intraDaySchedule:
        - startTime: startTime
          endTime: endTime
        type: DAILY
        daysOfWeek:
        - MONDAY
        - MONDAY
    SDRuleType:
      type: string
      description: "The type of budget rule. SCHEDULE: A budget rule based on a start\
        \ and end date. PERFORMANCE: A budget rule based on advertising performance\
        \ criteria."
      enum:
      - SCHEDULE
      - PERFORMANCE
    budgetIncreaseBy:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BudgetChangeType'
        value:
          type: number
          description: The budget value.
          format: double
      example:
        type: PERCENT
        value: 1.4658129805029452
    PerformanceMeasureCondition:
      required:
      - comparisonOperator
      - metricName
      - threshold
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/PerformanceMetric'
        comparisonOperator:
          $ref: '#/components/schemas/ComparisonOperator'
        threshold:
          type: number
          description: The performance threshold value.
          format: double
      example:
        metricName: ACOS
        comparisonOperator: GREATER_THAN
        threshold: 5.962133916683182
    EventTypeRuleDuration:
      required:
      - eventId
      type: object
      properties:
        eventId:
          type: string
          description: The event identifier. This value is available from the budget
            rules recommendation API.
        endDate:
          type: string
          description: The event end date in YYYYMMDD format. Read-only.
        eventName:
          type: string
          description: The event name. Read-only.
        startDate:
          type: string
          description: The event start date in YYYYMMDD format. Read-only. Note that
            this field is present only for announced events.
      description: Object representing event type rule duration.
      example:
        eventId: eventId
        endDate: endDate
        eventName: eventName
        startDate: startDate
    DateRangeTypeRuleDuration:
      required:
      - startDate
      type: object
      properties:
        endDate:
          type: string
          description: The end date of the budget rule in YYYYMMDD format. The end
            date is inclusive. Required to be equal or greater than `startDate`.
        startDate:
          type: string
          description: The start date of the budget rule in YYYYMMDD format. The start
            date is inclusive. Required to be greater than or equal to current date.
      description: Object representing date range type rule duration.
      example:
        endDate: endDate
        startDate: startDate
    RecurrenceType:
      type: string
      description: depicts the type of recurrence
      enum:
      - DAILY
      - WEEKLY
    DayOfWeek:
      type: string
      description: The day of the week.
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    BudgetChangeType:
      type: string
      description: The value by which to update the budget of the budget rule.
      enum:
      - PERCENT
    PerformanceMetric:
      type: string
      description: The advertising performance metric.
      enum:
      - ACOS
      - CTR
      - CVR
      - ROAS
    ComparisonOperator:
      type: string
      description: The comparison operator.
      enum:
      - GREATER_THAN
      - LESS_THAN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
    BudgetUsageCampaignRequest:
      type: object
      properties:
        campaignIds:
          maxItems: 100
          minItems: 1
          type: array
          description: A list of campaign IDs
          items:
            type: string
    BudgetUsageCampaignResponse:
      type: object
      properties:
        success:
          type: array
          description: List of budget usage percentages that were successfully pulled
          items:
            $ref: '#/components/schemas/BudgetUsageCampaign'
        error:
          type: array
          description: List of budget usage percentages that failed to pull
          items:
            $ref: '#/components/schemas/BudgetUsageCampaignBatchError'
      example:
        success:
        - budgetUsagePercent: 0.8008281904610115
          campaignId: campaignId
          usageUpdatedTimestamp: 2000-01-23T04:56:07.000+00:00
          index: 6.027456183070403
          budget: 1.4658129805029452
        - budgetUsagePercent: 0.8008281904610115
          campaignId: campaignId
          usageUpdatedTimestamp: 2000-01-23T04:56:07.000+00:00
          index: 6.027456183070403
          budget: 1.4658129805029452
        error:
        - code: code
          campaignId: campaignId
          index: 5.962133916683182
          details: details
        - code: code
          campaignId: campaignId
          index: 5.962133916683182
          details: details
    BudgetUsageError:
      type: object
      properties:
        code:
          type: string
          description: An enumerated error code for machine use.
        details:
          type: string
          description: A human-readable description of the response.
      description: The Error Response Object.
    BudgetUsageCampaign:
      type: object
      properties:
        budgetUsagePercent:
          type: number
          description: Budget usage percentage (spend / available budget) for the
            given budget policy.
        campaignId:
          type: string
          description: ID of requested resource
        usageUpdatedTimestamp:
          type: string
          description: Last evaluation time for budget usage
          format: date-time
        index:
          type: number
          description: An index to maintain order of the campaignIds
        budget:
          type: number
          description: Budget amount of resource requested
      example:
        budgetUsagePercent: 0.8008281904610115
        campaignId: campaignId
        usageUpdatedTimestamp: 2000-01-23T04:56:07.000+00:00
        index: 6.027456183070403
        budget: 1.4658129805029452
    BudgetUsageCampaignBatchError:
      type: object
      properties:
        code:
          type: string
          description: An enumerated error code for machine use.
        campaignId:
          type: string
          description: ID of requested resource
        index:
          type: number
          description: An index to maintain order of the campaignIds
        details:
          type: string
          description: A human-readable description of the response.
      example:
        code: code
        campaignId: campaignId
        index: 5.962133916683182
        details: details
    RuleBasedBudget:
      type: object
      properties:
        isProcessing:
          type: boolean
        applicableRuleName:
          type: string
        value:
          type: number
          format: double
        applicableRuleId:
          type: string
      example:
        isProcessing: true
        applicableRuleName: applicableRuleName
        value: 2.3021358869347655
        applicableRuleId: applicableRuleId
    LocationExpressionId:
      type: integer
      description: The identifier of the location.
      format: int64
    BaseLocation:
      properties:
        state:
          type: string
          enum:
          - enabled
    Location:
      allOf:
      - $ref: '#/components/schemas/BaseLocation'
      - type: object
        properties:
          locationExpressionId:
            $ref: '#/components/schemas/LocationExpressionId'
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          expression:
            type: array
            description: The Location definition.
            items:
              $ref: '#/components/schemas/LocationExpression'
          resolvedExpression:
            type: array
            description: The human-readable location definition.
            items:
              $ref: '#/components/schemas/ResolvedLocationExpression'
    LocationExpression:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LocationPredicate'
        value:
          type: string
          description: "The location identifier. Currently, this can correspond to\
            \ either a 'city', 'state', 'dma', 'postal code', or 'country'. Its value\
            \ is discoverable using the GET /locations API."
          example: amzn1.ad-geo.XHvCjcKHXmJ7woVowo7CjmvCjcKWbMKHwp3CsGvCk8KrcmstQ2l0eQ==
    ResolvedLocationExpression:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LocationPredicate'
        value:
          type: string
          description: The human-readable location name.
          example: "New York City, New York, US"
    LocationPredicate:
      type: string
      description: The location category.
      enum:
      - location
    CreateLocation:
      required:
      - adGroupId
      - expression
      - state
      allOf:
      - $ref: '#/components/schemas/BaseLocation'
      - type: object
        properties:
          adGroupId:
            $ref: '#/components/schemas/AdGroupId'
          expression:
            type: array
            description: The location definition.
            items:
              $ref: '#/components/schemas/LocationExpression'
    ArchiveLocationRequest:
      required:
      - LocationExpressionIdFilter
      type: object
      properties:
        locationExpressionIdFilter:
          $ref: '#/components/schemas/LocationExpressionIdFilter'
      description: Request body for the Archive Locations API
    LocationExpressionIdFilter:
      required:
      - include
      properties:
        include:
          $ref: '#/components/schemas/Include'
      description: Filter entities by the list of objectIds
    Include:
      maxItems: 1000
      minItems: 1
      type: array
      description: Array of Location Expression Ids
      items:
        $ref: '#/components/schemas/LocationExpressionId'
      x-schema-name: Include
    ArchiveLocationResponse:
      type: object
      properties:
        code:
          type: string
          description: "Returns \"SUCCESS\" for a successful response, otherwise a\
            \ HTTP error code"
        description:
          type: string
          description: A human-readable description of the response if there is an
            error
        locationExpressionId:
          $ref: '#/components/schemas/LocationExpressionId'
      example:
        locationExpressionId: 0
        code: code
        description: description
    SDHeadlineRecommendationRequest:
      type: object
      properties:
        asins:
          maxItems: 100
          minItems: 1
          type: array
          description: An array of ASINs associated with the creative.
          items:
            type: string
        maxNumRecommendations:
          maximum: 10
          minimum: 1
          type: number
          description: "Maximum number of recommendations that API should return.\
            \ Response will [0, maxNumRecommendations] recommendations (recommendations\
            \ are not guaranteed as there can be instances where the ML model can\
            \ not generate policy compliant headlines for the given set of asins)."
        adFormat:
          type: string
          enum:
          - SPONSORED_DISPLAY
      description: Request structure of SD headline recommendation API.
    SDHeadlineRecommendationResponse:
      type: object
      properties:
        requestId:
          type: string
          description: An identifier for request made which is generated by server.
        recommendations:
          maxItems: 10
          minItems: 1
          type: array
          description: "Recommendations are sorted, i.e., more suitable headline has\
            \ lesser array index value."
          items:
            $ref: '#/components/schemas/RecommendedHeadline'
      description: Response structure of SD headline recommendation API.
      example:
        requestId: requestId
        recommendations:
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
        - headlineId: e991e32c-0136-427a-843b-ff04162f2f91
          headline: This is a Recommended headline.
    SDHeadlineRecommendationSchemaValidationException:
      type: object
      properties:
        code:
          type: string
          description: InvalidArgumentErrorCode.
          enum:
          - INVALID_ARGUMENT
        details:
          type: string
          description: A human-readable description of the error response.
    SDHeadlineRecommendationAccessDeniedException:
      type: object
      properties:
        code:
          type: string
          description: AccessDeniedErrorCode.
          enum:
          - ACCESS_DENIED
        details:
          type: string
          description: A human-readable description of the error response.
    SDHeadlineRecommendationIdentifierNotfoundException:
      type: object
      properties:
        code:
          type: string
          description: IdentiferNotFoundErrorCode.
          enum:
          - IDENTIFIER_NOT_FOUND
        details:
          type: string
          description: A human-readable description of the error response.
    SDHeadlineRecommendationMarsThrottlingException:
      type: object
      properties:
        code:
          type: string
          description: ThrottledErrorCode.
          enum:
          - THROTTLED
        details:
          type: string
          description: A human-readable description of the error response.
    SDHeadlineRecommendationInternalServerException:
      type: object
      properties:
        code:
          type: string
          description: InternalErrorCode.
          enum:
          - INTERNAL_ERROR
        details:
          type: string
          description: A human-readable description of the error response.
    RecommendedHeadline:
      type: object
      properties:
        headlineId:
          type: string
          description: Unique Id of Recommended headline.
          example: e991e32c-0136-427a-843b-ff04162f2f91
        headline:
          maxLength: 50
          type: string
          description: String that contains Recommended headline.
          example: This is a Recommended headline.
      description: "Recommended Headline in response object. Recommended headline\
        \ will be locale specific, i.e. for an asin input in ES, Recommended headline\
        \ will be in ES."
      example:
        headlineId: e991e32c-0136-427a-843b-ff04162f2f91
        headline: This is a Recommended headline.
    timeOfDay:
      type: object
      properties:
        startTime:
          type: string
          description: The start time of intra-day budget rule window in the format
            'hh:mm:ss'
        endTime:
          type: string
          description: The end time of intra-day budget rule window in the format
            'hh:mm:ss'. Required to be greater than start-time.
      example:
        startTime: startTime
        endTime: endTime
    NegativeTargetingClauseEx_expression:
      type: object
      properties:
        type:
          type: string
          description: "The intent type. See the [targeting topic](https://advertising.amazon.com/help#GQCBASRVERXSARL3)\
            \ in the Amazon Ads support center for more information."
          enum:
          - asinSameAs
          - asinBrandSameAs
        value:
          type: string
          description: The value to be negatively targeted. Used only in manual expressions.
          example: B0123456789
      example:
        type: asinSameAs
        value: B0123456789
    Image_croppingCoordinates:
      required:
      - height
      - left
      - top
      - width
      type: object
      properties:
        top:
          minimum: 0
          type: integer
          description: Pixel distance from the top edge of the cropping zone to the
            top edge of the original image.
        left:
          minimum: 0
          type: integer
          description: Pixel distance from the left edge of the cropping zone to the
            left edge of the original image.
        width:
          minimum: 0
          type: integer
          description: Pixel width of the cropping zone.
        height:
          minimum: 0
          type: integer
          description: Pixel height of the cropping zone.
      description: Optional cropping coordinates to apply to the image.
    CreativeModeration_violatingTextPosition:
      type: object
      properties:
        start:
          type: integer
          description: Zero-based index into the text in reviewedText where the text
            specified in violatingText starts
        end:
          type: integer
          description: Zero-based index into the text in reviewedText where the text
            specified in violatingText ends
      example:
        start: 6
        end: 1
    CreativeModeration_textEvidence:
      type: object
      properties:
        violatingText:
          type: string
          description: The specific text determined to violate the specified policy
            in reviewedText
        violatingTextPosition:
          $ref: '#/components/schemas/CreativeModeration_violatingTextPosition'
      example:
        violatingTextPosition:
          start: 6
          end: 1
        violatingText: violatingText
    CreativeModeration_violatingHeadlineContents:
      type: object
      properties:
        reviewedText:
          type: string
          description: The specific text reviewed during moderation.
        textEvidence:
          type: array
          items:
            $ref: '#/components/schemas/CreativeModeration_textEvidence'
      example:
        textEvidence:
        - violatingTextPosition:
            start: 6
            end: 1
          violatingText: violatingText
        - violatingTextPosition:
            start: 6
            end: 1
          violatingText: violatingText
        reviewedText: reviewedText
    CreativeModeration_violatingImageCrop:
      type: object
      properties:
        topLeftX:
          type: integer
          description: The top left X-coordinate of the content that violates the
            specfied policy within the image.
        topLeftY:
          type: integer
          description: The top left Y-coordinate of the content that violates the
            specfied policy within the image.
        height:
          type: integer
          description: The height of the content that violates the specfied policy
            within the image.
        width:
          type: integer
          description: The width of the content that violates the specfied policy
            within the image.
      example:
        topLeftY: 5
        topLeftX: 5
        width: 7
        height: 2
    CreativeModeration_imageEvidences:
      type: object
      properties:
        violatingImageCrop:
          $ref: '#/components/schemas/CreativeModeration_violatingImageCrop'
      example:
        violatingImageCrop:
          topLeftY: 5
          topLeftX: 5
          width: 7
          height: 2
    CreativeModeration_violatingBrandLogoContents:
      type: object
      properties:
        reviewedImageUrl:
          type: string
          description: Address of the image reviewed during moderation.
        imageEvidences:
          type: array
          items:
            $ref: '#/components/schemas/CreativeModeration_imageEvidences'
      example:
        imageEvidences:
        - violatingImageCrop:
            topLeftY: 5
            topLeftX: 5
            width: 7
            height: 2
        - violatingImageCrop:
            topLeftY: 5
            topLeftX: 5
            width: 7
            height: 2
        reviewedImageUrl: reviewedImageUrl
    CreativeModeration_violatingVideoPosition:
      type: object
      properties:
        start:
          type: integer
          description: Time at which policy violation within video asset starts.
        end:
          type: integer
          description: Time at which policy violation within the video asset ends.
      example:
        start: 9
        end: 3
    CreativeModeration_videoEvidences:
      type: object
      properties:
        violatingVideoPosition:
          $ref: '#/components/schemas/CreativeModeration_violatingVideoPosition'
      example:
        violatingVideoPosition:
          start: 9
          end: 3
    CreativeModeration_violatingVideoContents:
      type: object
      properties:
        reviewedVideoUrl:
          type: string
          description: Address of the video reviewed during moderation.
        videoEvidences:
          type: array
          items:
            $ref: '#/components/schemas/CreativeModeration_videoEvidences'
      example:
        videoEvidences:
        - violatingVideoPosition:
            start: 9
            end: 3
        - violatingVideoPosition:
            start: 9
            end: 3
        reviewedVideoUrl: reviewedVideoUrl
    CreativeModeration_policyViolations:
      type: object
      properties:
        policyDescription:
          type: string
          description: A human-readable description of the policy.
        policyLinkUrl:
          type: string
          description: Address of the policy documentation. Follow the link to learn
            more about the specified policy.
        violatingHeadlineContents:
          type: array
          description: Information about the headline text that violates the specified
            policy.
          items:
            $ref: '#/components/schemas/CreativeModeration_violatingHeadlineContents'
        violatingBrandLogoContents:
          type: array
          description: Information about the brand logo that violates the specified
            policy.
          items:
            $ref: '#/components/schemas/CreativeModeration_violatingBrandLogoContents'
        violatingCustomImageContents:
          type: array
          description: Information about the custom image that violates the specified
            policy.
          items:
            $ref: '#/components/schemas/CreativeModeration_violatingBrandLogoContents'
        violatingVideoContents:
          type: array
          description: Information about the video that violates the specified policy.
          items:
            $ref: '#/components/schemas/CreativeModeration_violatingVideoContents'
      example:
        policyDescription: policyDescription
        violatingHeadlineContents:
        - textEvidence:
          - violatingTextPosition:
              start: 6
              end: 1
            violatingText: violatingText
          - violatingTextPosition:
              start: 6
              end: 1
            violatingText: violatingText
          reviewedText: reviewedText
        - textEvidence:
          - violatingTextPosition:
              start: 6
              end: 1
            violatingText: violatingText
          - violatingTextPosition:
              start: 6
              end: 1
            violatingText: violatingText
          reviewedText: reviewedText
        violatingCustomImageContents:
        - null
        - null
        policyLinkUrl: policyLinkUrl
        violatingBrandLogoContents:
        - imageEvidences:
          - violatingImageCrop:
              topLeftY: 5
              topLeftX: 5
              width: 7
              height: 2
          - violatingImageCrop:
              topLeftY: 5
              topLeftX: 5
              width: 7
              height: 2
          reviewedImageUrl: reviewedImageUrl
        - imageEvidences:
          - violatingImageCrop:
              topLeftY: 5
              topLeftX: 5
              width: 7
              height: 2
          - violatingImageCrop:
              topLeftY: 5
              topLeftX: 5
              width: 7
              height: 2
          reviewedImageUrl: reviewedImageUrl
        violatingVideoContents:
        - videoEvidences:
          - violatingVideoPosition:
              start: 9
              end: 3
          - violatingVideoPosition:
              start: 9
              end: 3
          reviewedVideoUrl: reviewedVideoUrl
        - videoEvidences:
          - violatingVideoPosition:
              start: 9
              end: 3
          - violatingVideoPosition:
              start: 9
              end: 3
          reviewedVideoUrl: reviewedVideoUrl
    CreativePreviewConfiguration_size:
      type: object
      properties:
        width:
          type: integer
        height:
          type: integer
      description: "The slot dimension to render the creative. Sponsored Display creatives\
        \ are responsive to a limited list of width and height pairs, including 300x250,\
        \ 650x130, 245x250, 414x125, 600x160, 600x300, 728x90, 980x55, 320x50, 970x250\
        \ and 270x150."
    CreativePreviewConfiguration_products:
      type: object
      properties:
        asin:
          type: string
          description: The ASIN of the product.
    SDThemeRecommendations_themes:
      properties:
        products:
          maxItems: 5
          minItems: 1
          type: array
          description: A list of contextual targeting theme recommendations.
          items:
            oneOf:
            - $ref: '#/components/schemas/SDProductTargetingRecommendationsSuccess'
    SDThemeRecommendationsV34_themes:
      properties:
        products:
          maxItems: 5
          minItems: 1
          type: array
          description: A list of contextual targeting theme recommendations.
          items:
            oneOf:
            - $ref: '#/components/schemas/SDProductTargetingRecommendationsSuccessV34'
      example:
        products:
        - ""
        - ""
        - ""
        - ""
        - ""
    SDCategoryRecommendation_targetableAsinCountRange:
      type: object
      properties:
        rangeLower:
          type: integer
        rangeUpper:
          type: integer
      description: The range of ASINs available within the category catalogue. If
        no targetable ASIN counts are available then the targetableAsinCountRange
        value will be null without any properties.
    SDCategoryRecommendationV33_targetableAsinCountRange:
      type: object
      properties:
        rangeLower:
          type: integer
        rangeUpper:
          type: integer
      description: The range of ASINs available within the category catalogue.
      example:
        rangeUpper: 1
        rangeLower: 6
    SDTargetingBidRecommendationsRequestV31_targetingClauses:
      required:
      - targetingClause
      type: object
      properties:
        targetingClause:
          $ref: '#/components/schemas/SDTargetingClauseV31'
    SDTargetingBidRecommendationsRequestV34_targetingClauses:
      required:
      - targetingClause
      type: object
      properties:
        targetingClause:
          $ref: '#/components/schemas/SDTargetingClauseV32'
  parameters:
    clientHeader:
      name: Amazon-Advertising-API-ClientId
      in: header
      description: The identifier of a client associated with a "Login with Amazon"
        account.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    profileHeader:
      name: Amazon-Advertising-API-Scope
      in: header
      description: The identifier of a profile associated with the advertiser account.
        Use `GET` method on Profiles resource to list profiles associated with the
        access token passed in the HTTP Authorization header.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    profileOptionalHeader:
      name: Amazon-Advertising-API-Scope
      in: header
      description: The identifier of a profile associated with the advertiser account.
        Use `GET` method on Profiles resource to list profiles associated with the
        access token passed in the HTTP Authorization header.
      required: false
      style: simple
      explode: false
      schema:
        type: string
    accountHeader:
      name: Amazon-Ads-AccountId
      in: header
      description: The identifier of an account. Account must be a global advertising
        account.
      required: false
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    oauth2AuthorizationCode:
      type: oauth2
      description: "Login with Amazon. For more information see [Login with Amazon\
        \ authorization code grant](https://developer.amazon.com/docs/login-with-amazon/authorization-code-grant.html)."
      flows:
        authorizationCode:
          authorizationUrl: https://www.amazon.com/ap/oa
          tokenUrl: https://api.amazon.com/auth/o2/token
          scopes:
            cpc_advertising:campaign_management: Modify your advertising campaigns
              and access performance data
    bearerAuth:
      type: http
      scheme: bearer
